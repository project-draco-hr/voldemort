{
  OptionParser parser=null;
  OptionSet options=null;
  try {
    parser=getParser();
    options=parser.parse(args);
  }
 catch (  Exception oe) {
    logger.error("Exception processing command line options",oe);
    parser.printHelpOn(System.out);
    return;
  }
  if (options.has("help")) {
    parser.printHelpOn(System.out);
    return;
  }
  if (!options.has("src-url") || !options.has("dst-url") || !options.has("stores")) {
    logger.error("'src-url' 'dst-url' and 'stores' are mandatory parameters ");
    parser.printHelpOn(System.out);
    return;
  }
  String srcBootstrapUrl=(String)options.valueOf("src-url");
  String dstBootstrapUrl=(String)options.valueOf("dst-url");
  int maxPutsPerSecond=DEFAULT_MAX_PUTS_PER_SEC;
  if (options.has("max-puts-per-second"))   maxPutsPerSecond=(Integer)options.valueOf("max-puts-per-second");
  List<String> storesList=null;
  if (options.has("stores")) {
    storesList=new ArrayList<String>((List<String>)options.valuesOf("stores"));
  }
  List<Integer> partitions=null;
  if (options.has("partitions")) {
    partitions=(List<Integer>)options.valuesOf("partitions");
  }
  int partitionParallelism=DEFAULT_PARTITION_PARALLELISM;
  if (options.has("parallelism")) {
    partitionParallelism=(Integer)options.valueOf("parallelism");
  }
  int progressOps=DEFAULT_PROGRESS_PERIOD_OPS;
  if (options.has("progress-period-ops")) {
    progressOps=(Integer)options.valueOf("progress-period-ops");
  }
  ForkLiftTaskMode mode=ForkLiftTaskMode.primary_resolution;
  if (options.has("mode")) {
    mode=ForkLiftTaskMode.valueOf((String)options.valueOf("mode"));
    if (mode == null)     mode=ForkLiftTaskMode.primary_resolution;
  }
  Boolean overwrite=extractBoolOption(options,OVERWRITE_OPTION);
  boolean ignoreSchemaMismatch=extractBoolOption(options,IGNORE_SCHEMA_MISMATCH);
  ClusterForkLiftTool forkLiftTool=new ClusterForkLiftTool(srcBootstrapUrl,dstBootstrapUrl,overwrite,ignoreSchemaMismatch,maxPutsPerSecond,partitionParallelism,progressOps,storesList,partitions,mode);
  forkLiftTool.run();
  System.exit(0);
}
