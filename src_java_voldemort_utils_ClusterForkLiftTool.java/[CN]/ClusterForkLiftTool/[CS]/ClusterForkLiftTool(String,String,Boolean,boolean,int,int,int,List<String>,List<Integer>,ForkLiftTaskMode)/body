{
  if (storesList == null || storesList.size() == 0) {
    throw new IllegalArgumentException("One or more stores expected");
  }
  this.srcAdminClient=new AdminClient(srcBootstrapUrl,new AdminClientConfig(),new ClientConfig());
  Props props=new Props();
  props.put("streaming.platform.bootstrapURL",dstBootstrapUrl);
  props.put("streaming.platform.throttle.qps",maxPutsPerSecond);
  StreamingClientConfig config=new StreamingClientConfig(props);
  this.dstStreamingClient=new BaseStreamingClient(config);
  this.mode=mode;
  this.overwrite=overwrite;
  this.storesList=storesList;
  this.srcStoreDefMap=checkStoresOnBothSides(ignoreSchemaMismatch);
  if (partitions != null) {
    this.partitionList=partitions;
  }
 else {
    this.partitionList=new ArrayList<Integer>(srcAdminClient.getAdminClientCluster().getNumberOfPartitions());
    for (    Node node : srcAdminClient.getAdminClientCluster().getNodes())     this.partitionList.addAll(node.getPartitionIds());
    Collections.shuffle(this.partitionList);
    if (this.partitionList.size() > srcAdminClient.getAdminClientCluster().getNumberOfPartitions()) {
      throw new VoldemortException("Incorrect partition mapping in source cluster");
    }
  }
  this.workerPool=Executors.newFixedThreadPool(partitionParallelism);
  this.progressOps=progressOps;
}
