{
  Value value=new ValueFactory().Create(versioned,comparisonType);
  if (retentionChecker.isExpired(value)) {
    reporter.recordExpired(1);
    return;
  }
  if (!keyValueNodeSetMap.containsKey(key)) {
    keyValueNodeSetMap.put(key,new HashMap<Value,Set<ClusterNode>>());
  }
  Map<Value,Set<ClusterNode>> versionNodeSetMap=keyValueNodeSetMap.get(key);
  List<Value> valuesToDiscard=new ArrayList<Value>();
  for (  Map.Entry<Value,Set<ClusterNode>> versionNode : versionNodeSetMap.entrySet()) {
    Value existingValue=versionNode.getKey();
    if (existingValue.compare(value) == Occurred.AFTER) {
      return;
    }
 else     if (value.compare(existingValue) == Occurred.AFTER) {
      valuesToDiscard.add(existingValue);
    }
  }
  for (  Value valueToDiscard : valuesToDiscard) {
    versionNodeSetMap.remove(valueToDiscard);
  }
  if (!versionNodeSetMap.containsKey(value)) {
    versionNodeSetMap.put(value,new HashSet<ClusterNode>());
  }
  versionNodeSetMap.get(value).add(clusterNode);
}
