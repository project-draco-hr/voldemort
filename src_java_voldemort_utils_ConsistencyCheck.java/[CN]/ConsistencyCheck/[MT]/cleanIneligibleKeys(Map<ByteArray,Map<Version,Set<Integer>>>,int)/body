{
  Set<ByteArray> keysToDelete=new HashSet<ByteArray>();
  for (  Map.Entry<ByteArray,Map<Version,Set<Integer>>> entry : keyVersionNodeSetMap.entrySet()) {
    Set<Version> versionsToDelete=new HashSet<Version>();
    ByteArray key=entry.getKey();
    Map<Version,Set<Integer>> versionNodeSetMap=entry.getValue();
    for (    Map.Entry<Version,Set<Integer>> versionNodeSetEntry : versionNodeSetMap.entrySet()) {
      Set<Integer> nodeSet=versionNodeSetEntry.getValue();
      if (nodeSet.size() < requiredWrite) {
        versionsToDelete.add(versionNodeSetEntry.getKey());
      }
    }
    for (    Version v : versionsToDelete) {
      versionNodeSetMap.remove(v);
    }
    if (versionNodeSetMap.size() == 0) {
      keysToDelete.add(key);
    }
  }
  for (  ByteArray k : keysToDelete) {
    keyVersionNodeSetMap.remove(k);
  }
}
