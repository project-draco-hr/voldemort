{
  setGetPutQuotasForEachServer();
  HashMap<String,String> keyValuePairsToMasterNode=generateKeysForMasterNode(15);
  String bootStrapUrl="tcp://" + cluster.getNodeById(0).getHost() + ":"+ cluster.getNodeById(0).getSocketPort();
  factory=new SocketStoreClientFactory(new ClientConfig().setBootstrapUrls(bootStrapUrl));
  storeClient=factory.getStoreClient(storeName);
  int numPutExceptions=0;
  ArrayList<String> putKeysThatSucceeded=new ArrayList<String>();
  for (  Entry<String,String> entry : keyValuePairsToMasterNode.entrySet()) {
    try {
      storeClient.put(entry.getKey(),entry.getValue());
      putKeysThatSucceeded.add(entry.getValue());
    }
 catch (    QuotaExceededException quotaexception) {
      numPutExceptions++;
    }
  }
  logger.info("#Puts that failed due to QuotaExceededException: " + numPutExceptions);
  Thread.sleep(2 * SLOP_FREQUENCY_MS);
  int numNullEmptyIncoorectValue=0;
  for (  String val : putKeysThatSucceeded) {
    int nodeId=1;
    List<Versioned<byte[]>> valueBytes=adminClient.storeOps.getNodeKey(storeName,nodeId,new ByteArray(ByteUtils.getBytes(val,encodingType)));
    if (valueBytes == null || valueBytes.size() == 0 || !(val.equals(ByteUtils.getString(valueBytes.get(0).getValue(),encodingType)))) {
      logger.info("Either the value returned for key: " + val + " is null/empty/not same as that put");
      numNullEmptyIncoorectValue++;
      continue;
    }
    logger.info("key: " + val + " value: "+ ByteUtils.getString(valueBytes.get(0).getValue(),encodingType));
  }
  assertTrue("Not all expected keys found in secondary node",numNullEmptyIncoorectValue == 0);
}
