{
  Map<Integer,List<Integer>> replicationMapping=new HashMap<Integer,List<Integer>>();
  List<Integer> targetList=targetCluster.getNodeById(stealNodeId).getPartitionIds();
  RebalanceClusterTool clusterTool=new RebalanceClusterTool(currentCluster,RebalanceUtils.getMaxReplicationStore(this.storeDefList));
  Multimap<Integer,Pair<Integer,Integer>> replicationChanges=clusterTool.getRemappedReplicas(targetCluster);
  for (  final Entry<Integer,Pair<Integer,Integer>> entry : replicationChanges.entries()) {
    int newReplicationPartition=entry.getValue().getSecond();
    if (targetList.contains(newReplicationPartition)) {
      int donorNode=currentPartitionsToNodeMap.get(entry.getKey());
      if (donorNode != stealNodeId)       createAndAdd(replicationMapping,donorNode,entry.getKey());
    }
  }
  return replicationMapping;
}
