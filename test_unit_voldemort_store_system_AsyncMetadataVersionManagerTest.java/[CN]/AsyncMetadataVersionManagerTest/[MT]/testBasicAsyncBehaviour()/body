{
  String storeVersionKey="cluster.xml";
  try {
    Callable<Void> rebootstrapCallback=new Callable<Void>(){
      public Void call() throws Exception {
        callback();
        return null;
      }
    }
;
    String existingVersions=this.sysVersionStore.getSysStore(AsyncMetadataVersionManager.VERSIONS_METADATA_STORE).getValue();
    existingVersions+=storeVersionKey + "=100";
    this.sysVersionStore.putSysStore(AsyncMetadataVersionManager.VERSIONS_METADATA_STORE,existingVersions);
    Thread.sleep(500);
    this.asyncCheckMetadata=new AsyncMetadataVersionManager(this.repository,rebootstrapCallback);
    scheduler.schedule(asyncCheckMetadata.getClass().getName(),asyncCheckMetadata,new Date(),500);
    int maxRetries=0;
    while (maxRetries < 3 && !asyncCheckMetadata.isActive) {
      Thread.sleep(500);
      maxRetries++;
    }
    this.newVersion=101;
    System.err.println("Incrementing the version for : " + storeVersionKey);
    existingVersions=this.sysVersionStore.getSysStore(AsyncMetadataVersionManager.VERSIONS_METADATA_STORE).getValue();
    existingVersions=existingVersions.replaceAll(storeVersionKey + "=100",storeVersionKey + "=101");
    this.sysVersionStore.putSysStore(AsyncMetadataVersionManager.VERSIONS_METADATA_STORE,existingVersions);
    maxRetries=0;
    while (maxRetries < 3 && !callbackDone) {
      Thread.sleep(2000);
      maxRetries++;
    }
    assertEquals(this.updatedStoresVersion,this.newVersion);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Failed to start the Metadata Version Manager : " + e.getMessage());
  }
}
