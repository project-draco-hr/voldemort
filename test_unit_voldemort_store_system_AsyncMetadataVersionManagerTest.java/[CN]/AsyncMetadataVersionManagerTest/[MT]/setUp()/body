{
  cluster=ClusterTestUtils.getZZZCluster();
  servers=new VoldemortServer[cluster.getNodeIds().size()];
  List<StoreDefinition> storeDefs=ClusterTestUtils.getZZZ322StoreDefs("bdb");
  int i=0;
  for (  Integer nodeId : cluster.getNodeIds()) {
    VoldemortConfig config=ServerTestUtils.createServerConfigWithDefs(true,nodeId,TestUtils.createTempDir().getAbsolutePath(),cluster,storeDefs,new Properties());
    VoldemortServer server=ServerTestUtils.startVoldemortServer(socketStoreFactory,config);
    servers[i++]=server;
  }
  socketUrl=servers[0].getIdentityNode().getSocketUrl().toString();
  bootStrapUrls=new String[1];
  bootStrapUrls[0]=socketUrl;
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.setBootstrapUrls(bootStrapUrls).setClientZoneId(this.CLIENT_ZONE_ID);
  SystemStoreClientFactory<String,String> systemStoreFactory=new SystemStoreClientFactory<String,String>(clientConfig);
  sysVersionStore=systemStoreFactory.createSystemStore(SystemStoreConstants.SystemStoreName.voldsys$_metadata_version_persistence.name());
  repository=new SystemStoreRepository(clientConfig);
  repository.addSystemStore(sysVersionStore,SystemStoreConstants.SystemStoreName.voldsys$_metadata_version_persistence.name());
  this.scheduler=new SchedulerService(2,SystemTime.INSTANCE,true);
}
