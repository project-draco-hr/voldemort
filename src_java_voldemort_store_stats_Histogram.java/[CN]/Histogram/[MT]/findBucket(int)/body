{
  int max=step * nBuckets;
  if (needle > max) {
    return nBuckets - 1;
  }
  int low=0;
  int high=nBuckets - 1;
  while (low <= high) {
    int mid=(low + high) / 2;
    int cmp=compareToBucket(mid,needle);
    if (cmp == 0) {
      return mid;
    }
 else     if (cmp > 0) {
      high=mid - 1;
    }
 else     if (cmp < 0) {
      low=mid + 1;
    }
  }
  return -1;
}
