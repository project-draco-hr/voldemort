{
  Path testPath=new Path(TestUtils.createTempDir().getAbsolutePath());
  FileSystem fs=testPath.getFileSystem(new Configuration());
  fs.mkdirs(testPath);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,0,0).length,0);
  fs.create(new Path(testPath,"0_0_1.data"));
  fs.create(new Path(testPath,"0_0_1data"));
  fs.create(new Path(testPath,"0_0_2.index"));
  fs.create(new Path(testPath,"0_0.data"));
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,0,0).length,1);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,0,0,1).length,1);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0,1).length,0);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,0,1).length,0);
  fs.create(new Path(testPath,"1_0_0.data"));
  fs.create(new Path(testPath,"1_0"));
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0).length,1);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0,0).length,1);
  fs.create(new Path(testPath,"1_0_1.data"));
  fs.create(new Path(testPath,"1_0_1data"));
  fs.create(new Path(testPath,"1_0_1.index"));
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0).length,2);
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0,1).length,1);
  fs.create(new Path(testPath,"1_0_2.data"));
  assertEquals(HadoopStoreBuilderUtils.getDataChunkFiles(fs,testPath,1,0).length,3);
}
