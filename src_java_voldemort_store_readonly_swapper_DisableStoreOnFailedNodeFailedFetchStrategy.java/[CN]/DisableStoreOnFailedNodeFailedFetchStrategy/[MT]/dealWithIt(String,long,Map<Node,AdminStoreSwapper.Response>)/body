{
  List<String> nonConnectionErrors=new ArrayList<String>();
  List<Integer> failedNodes=Lists.newArrayList();
  for (  Map.Entry<Node,AdminStoreSwapper.Response> entry : fetchResponseMap.entrySet()) {
    Response response=entry.getValue();
    if (!response.isSuccessful()) {
      Exception ex=response.getException();
      boolean connectionFailure=ExceptionUtils.recursiveClassEquals(ex,UnreachableStoreException.class);
      boolean ioError=ExceptionUtils.recursiveClassEquals(ex,IOException.class);
      Node node=entry.getKey();
      if (connectionFailure || ioError) {
        int nodeId=node.getId();
        failedNodes.add(nodeId);
      }
 else {
        String nodeErrorMessage=node.briefToString() + " threw exception " + ex.getClass().getName()+ ". ";
        nonConnectionErrors.add(nodeErrorMessage);
      }
    }
  }
  if (nonConnectionErrors.size() > 0) {
    String errorMessage=Arrays.toString(nonConnectionErrors.toArray());
    logger.error("There were non connection related errors. Details " + errorMessage);
    return false;
  }
  return adminClient.readonlyOps.handleFailedFetch(failedNodes,storeName,pushVersion,extraInfo);
}
