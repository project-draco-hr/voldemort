{
  final String fetchUrl=request.getStoreDir();
  final String storeName=request.getStoreName();
  int requestId=asyncService.getUniqueRequestId();
  VAdminProto.AsyncOperationStatusResponse.Builder response=VAdminProto.AsyncOperationStatusResponse.newBuilder().setRequestId(requestId).setComplete(false).setDescription("Fetch store").setStatus("started");
  try {
    final ReadOnlyStorageEngine store=(ReadOnlyStorageEngine)getStorageEngine(storeRepository,storeName);
    final long pushVersion;
    if (request.hasPushVersion()) {
      pushVersion=request.getPushVersion();
      if (pushVersion <= store.getCurrentVersionId())       throw new VoldemortException("Version of push specified (" + pushVersion + ") should be greater than current version "+ store.getCurrentVersionId());
    }
 else {
      pushVersion=store.getCurrentVersionId() + 1;
    }
    asyncService.submitOperation(requestId,new AsyncOperation(requestId,"Fetch store"){
      private String fetchDirPath=null;
      @Override public void markComplete(){
        if (fetchDirPath != null)         status.setStatus(fetchDirPath);
        status.setComplete(true);
      }
      @Override public void operate(){
        File fetchDir=null;
        if (fileFetcher == null) {
          logger.warn("File fetcher class has not instantiated correctly");
          fetchDir=new File(fetchUrl);
        }
 else {
          logger.info("Executing fetch of " + fetchUrl);
          updateStatus("0 MB copied at 0 MB/sec - 0 % complete");
          try {
            fileFetcher.setAsyncOperationStatus(status);
            fetchDir=fileFetcher.fetch(fetchUrl,store.getStoreDirPath() + File.separator + "version-"+ pushVersion);
            updateStatus("Completed fetch of " + fetchUrl);
            if (fetchDir == null) {
              throw new VoldemortException("File fetcher failed for " + fetchUrl + " and store name = "+ storeName+ " due to incorrect input path/checksum error");
            }
 else {
              logger.info("Fetch complete.");
            }
          }
 catch (          Exception e) {
            throw new VoldemortException("Exception in Fetcher = " + e.getMessage());
          }
        }
        fetchDirPath=new String(fetchDir.getAbsolutePath());
      }
      @Override public void stop(){
        status.setException(new VoldemortException("Fetcher interrupted"));
      }
    }
);
  }
 catch (  VoldemortException e) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,e));
    logger.error("handleFetchStore failed for request(" + request.toString() + ")",e);
  }
  return response.build();
}
