{
  VAdminProto.DeleteStoreResponse.Builder response=VAdminProto.DeleteStoreResponse.newBuilder();
  if (!metadataStore.getServerState().equals(MetadataStore.VoldemortState.NORMAL_SERVER)) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,new VoldemortException("Voldemort server is not in normal state")));
    return response.build();
  }
  try {
    String storeName=request.getStoreName();
synchronized (lock) {
      if (storeRepository.hasLocalStore(storeName)) {
        if (storeName.compareTo(SlopStorageEngine.SLOP_STORE_NAME) == 0) {
          storageService.unregisterEngine(storeName,"slop",storeRepository.getStorageEngine(storeName));
        }
 else {
          List<StoreDefinition> oldStoreDefList=metadataStore.getStoreDefList();
          List<StoreDefinition> newStoreDefList=new ArrayList<StoreDefinition>();
          for (          StoreDefinition storeDef : oldStoreDefList) {
            if (storeDef.isView()) {
              if (storeDef.getViewTargetStoreName().compareTo(storeName) != 0) {
                newStoreDefList.add(storeDef);
              }
 else {
                storageService.unregisterEngine(storeDef.getName(),storeDef.getType(),storeRepository.getStorageEngine(storeDef.getName()));
              }
            }
 else {
              if (storeDef.getName().compareTo(storeName) != 0) {
                newStoreDefList.add(storeDef);
              }
 else {
                storageService.unregisterEngine(storeDef.getName(),storeDef.getType(),storeRepository.getStorageEngine(storeDef.getName()));
              }
            }
          }
          try {
            metadataStore.put(MetadataStore.STORES_KEY,newStoreDefList);
          }
 catch (          Exception e) {
            throw new VoldemortException(e);
          }
        }
      }
 else {
        throw new StoreOperationFailureException(String.format("Store '%s' does not exist on this server",storeName));
      }
    }
  }
 catch (  VoldemortException e) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,e));
    logger.error("handleDeleteStore failed for request(" + request.toString() + ")",e);
  }
  return response.build();
}
