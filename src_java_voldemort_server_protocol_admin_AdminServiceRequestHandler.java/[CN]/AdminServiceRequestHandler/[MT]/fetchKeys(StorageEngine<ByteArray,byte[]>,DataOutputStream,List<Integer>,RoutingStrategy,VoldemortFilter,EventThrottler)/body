{
  ClosableIterator<ByteArray> iterator=null;
  try {
    int counter=0;
    int fetched=0;
    long startTime=System.currentTimeMillis();
    iterator=storageEngine.keys();
    while (iterator.hasNext()) {
      ByteArray key=iterator.next();
      if (validPartition(key.get(),partitionList,routingStrategy) && filter.accept(key,null)) {
        VAdminProto.FetchPartitionEntriesResponse.Builder response=VAdminProto.FetchPartitionEntriesResponse.newBuilder();
        response.setKey(ProtoUtils.encodeBytes(key));
        fetched++;
        Message message=response.build();
        ProtoUtils.writeMessage(outputStream,message);
        if (throttler != null) {
          throttler.maybeThrottle(key.length());
        }
      }
      counter++;
      if (0 == counter % 100000) {
        long totalTime=(System.currentTimeMillis() - startTime) / 1000;
        if (logger.isDebugEnabled())         logger.debug("fetchKeys() scanned " + counter + " keys, fetched "+ fetched+ " keys for store:"+ storageEngine.getName()+ " partition:"+ partitionList+ " in "+ totalTime+ " s");
      }
    }
  }
  finally {
    if (null != iterator)     iterator.close();
  }
}
