{
  EventThrottler throttler=new EventThrottler(streamMaxBytesWritesPerSec);
  try {
    int keySize=inputStream.readInt();
    while (keySize != -1) {
      byte[] key=new byte[keySize];
      ByteUtils.read(inputStream,key);
      int valueSize=inputStream.readInt();
      byte[] value=new byte[valueSize];
      ByteUtils.read(inputStream,value);
      VectorClock clock=new VectorClock(value);
      Versioned<byte[]> versionedValue=new Versioned<byte[]>(ByteUtils.copy(value,clock.sizeInBytes(),value.length),clock);
      engine.put(new ByteArray(key),versionedValue);
      if (throttler != null) {
        throttler.maybeThrottle(key.length + clock.sizeInBytes() + value.length);
      }
      keySize=inputStream.readInt();
    }
    outputStream.writeShort(0);
  }
 catch (  VoldemortException e) {
    writeException(outputStream,e);
  }
}
