{
  VAdminProto.AddStoreResponse.Builder response=VAdminProto.AddStoreResponse.newBuilder();
  if (!metadataStore.getServerStateUnlocked().equals(MetadataStore.VoldemortState.NORMAL_SERVER)) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,new VoldemortException("Voldemort server is not in normal state")));
    return response.build();
  }
  try {
    StoreDefinitionsMapper mapper=new StoreDefinitionsMapper();
    StoreDefinition def=mapper.readStore(new StringReader(request.getStoreDefinition()));
synchronized (lock) {
      if (!storeRepository.hasLocalStore(def.getName())) {
        if (def.getReplicationFactor() > metadataStore.getCluster().getNumberOfNodes()) {
          throw new StoreOperationFailureException("Cannot add a store whose replication factor ( " + def.getReplicationFactor() + " ) is greater than the number of nodes ( "+ metadataStore.getCluster().getNumberOfNodes()+ " )");
        }
        logger.info("Adding new store '" + def.getName() + "'");
        StorageEngine<ByteArray,byte[],byte[]> engine=storageService.openStore(def);
        List<StoreDefinition> currentStoreDefs;
        List<Versioned<byte[]>> v=metadataStore.get(MetadataStore.STORES_KEY,null);
        if (((v.size() > 0) ? 1 : 0) > 0) {
          Versioned<byte[]> currentValue=v.get(0);
          currentStoreDefs=mapper.readStoreList(new StringReader(ByteUtils.getString(currentValue.getValue(),"UTF-8")));
        }
 else {
          currentStoreDefs=Lists.newArrayList();
        }
        currentStoreDefs.add(def);
        try {
          metadataStore.put(MetadataStore.STORES_KEY,currentStoreDefs);
        }
 catch (        Exception e) {
          boolean isReadOnly=ReadOnlyStorageConfiguration.TYPE_NAME.equals(def.getType());
          storageService.removeEngine(engine,isReadOnly,def.getType(),true);
          throw new VoldemortException(e);
        }
        logger.info("Successfully added new store '" + def.getName() + "'");
      }
 else {
        logger.error("Failure to add a store with the same name '" + def.getName() + "'");
        throw new StoreOperationFailureException(String.format("Store '%s' already exists on this server",def.getName()));
      }
    }
  }
 catch (  VoldemortException e) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,e));
    logger.error("handleAddStore failed for request(" + request.toString() + ")",e);
  }
  return response.build();
}
