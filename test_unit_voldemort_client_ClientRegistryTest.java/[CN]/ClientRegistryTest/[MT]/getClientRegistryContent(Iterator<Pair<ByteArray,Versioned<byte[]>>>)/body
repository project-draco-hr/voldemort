{
  ArrayList<ClientInfo> infoList=Lists.newArrayList();
  while (it.hasNext()) {
    String clientInfoString=(String)valueSerializer.toObject(it.next().getSecond().getValue());
    Properties props=new Properties();
    try {
      props.load(new ByteArrayInputStream(clientInfoString.getBytes()));
    }
 catch (    IOException ex) {
      throw new VoldemortException("Error loading clientInfo " + props.toString(),ex);
    }
    ClientConfig clientConfig=new ClientConfig();
    clientConfig.setMaxConnectionsPerNode(Integer.parseInt(props.getProperty("max_connections"))).setRoutingTimeout(Integer.parseInt(props.getProperty("routing_timeout_ms")),TimeUnit.MILLISECONDS).setConnectionTimeout(Integer.parseInt(props.getProperty("connection_timeout_ms")),TimeUnit.MILLISECONDS).setSocketTimeout(Integer.parseInt(props.getProperty("socket_timeout_ms")),TimeUnit.MILLISECONDS).setClientZoneId(Integer.parseInt(props.getProperty("client_zone_id"))).setFailureDetectorImplementation(props.getProperty("failuredetector_implementation"));
    ClientInfo cInfo=new ClientInfo(props.getProperty("storeName"),props.getProperty("context"),Integer.parseInt(props.getProperty("sequence")),Long.parseLong(props.getProperty("bootstrapTime")),props.getProperty("releaseVersion"),clientConfig);
    cInfo.setUpdateTime(Long.parseLong(props.getProperty("updateTime")));
    cInfo.setDeploymentPath(props.getProperty("deploymentPath"));
    cInfo.setLocalHostName(props.getProperty("localHostName"));
    infoList.add(cInfo);
  }
  return infoList;
}
