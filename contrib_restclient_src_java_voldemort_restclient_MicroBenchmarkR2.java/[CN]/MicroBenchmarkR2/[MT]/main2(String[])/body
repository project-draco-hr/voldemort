{
  long totalDiffTimeInNs=0;
  int numBytes=10000;
  int numNodes=100;
  long totalVCSerializationCost=0;
  long totalVCDeSerializationCost=0;
  System.out.println("#Nodes = " + numNodes);
  for (int i=0; i < 100; i++) {
    VectorClock vc=getRandomVectorClock(numNodes);
    long startTimeNs=System.nanoTime();
    String serialedVC=serializeVC(vc);
    long diffInNs=System.nanoTime() - startTimeNs;
    System.out.println("Time taken to serialize VC  : " + diffInNs + " (ns) ");
    if (i != 0) {
      totalVCSerializationCost+=diffInNs;
    }
    startTimeNs=System.nanoTime();
    deSerializeVC(serialedVC);
    diffInNs=System.nanoTime() - startTimeNs;
    System.out.println("Time taken to deserialize VC: " + diffInNs + " (ns) ");
    if (i != 0) {
      totalVCDeSerializationCost+=diffInNs;
    }
    Thread.sleep(100);
  }
  System.out.println("Average time to serialize a VC : " + totalVCSerializationCost / 99 + " (ns)");
  System.out.println("Average time to de-serialize a VC : " + totalVCDeSerializationCost / 99 + " (ns)");
}
