{
  List<Versioned<byte[]>> clusterInfo=metadataStore.get(ByteUtils.getBytes(cluster_key,"UTF-8"));
  if (clusterInfo.size() > 1) {
    throw new UnableUpdateMetadataException("Inconistent Cluster Metdata found on Server:" + metadata.getIdentityNode().getId() + " for Key:"+ cluster_key);
  }
  logger.debug("Cluster metadata  update called " + cluster_key);
  VectorClock updatedVersion=new VectorClock();
  if (clusterInfo.size() > 0) {
    updatedVersion=((VectorClock)clusterInfo.get(0).getVersion());
  }
  updatedVersion.incrementVersion(metadata.getIdentityNode().getId(),System.currentTimeMillis());
  try {
    String clusterString=inputStream.readUTF();
    Cluster updatedCluster=new ClusterMapper().readCluster(new StringReader(clusterString));
    metadataStore.put(new ByteArray(ByteUtils.getBytes(cluster_key,"UTF-8")),new Versioned<byte[]>(ByteUtils.getBytes(new ClusterMapper().writeCluster(updatedCluster),"UTF-8"),updatedVersion));
    if (MetadataStore.CLUSTER_KEY.equalsIgnoreCase(cluster_key)) {
      metadata.setCurrentCluster(updatedCluster);
      metadata.reinitRoutingStrategies();
    }
 else     if (MetadataStore.ROLLBACK_CLUSTER_KEY.equalsIgnoreCase(cluster_key)) {
      metadata.setRollbackCluster(updatedCluster);
    }
    outputStream.writeShort(0);
    outputStream.flush();
  }
 catch (  VoldemortException e) {
    e.printStackTrace();
    writeException(outputStream,e);
    return;
  }
}
