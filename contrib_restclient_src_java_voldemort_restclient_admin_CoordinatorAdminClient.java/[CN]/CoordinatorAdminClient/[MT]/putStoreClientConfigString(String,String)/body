{
  try {
    RestRequestBuilder requestBuilder=new RestRequestBuilder(new URI(coordinatorUrl + URL_SEPARATOR + STORE_CLIENT_CONFIG_OPS+ URL_SEPARATOR));
    byte[] payload=storeClientConfigAvro.getBytes("UTF-8");
    requestBuilder.setMethod(POST);
    requestBuilder.setEntity(payload);
    requestBuilder.setHeader(CONTENT_TYPE,"binary");
    requestBuilder.setHeader(CONTENT_LENGTH,"" + payload.length);
    String timeoutStr=Long.toString(this.config.getTimeoutConfig().getOperationTimeout(VoldemortOpCode.PUT_OP_CODE));
    requestBuilder.setHeader(RestMessageHeaders.X_VOLD_REQUEST_TIMEOUT_MS,timeoutStr);
    requestBuilder.setHeader(RestMessageHeaders.X_VOLD_REQUEST_ORIGIN_TIME_MS,String.valueOf(System.currentTimeMillis()));
    if (this.routingTypeCode != null) {
      requestBuilder.setHeader(RestMessageHeaders.X_VOLD_ROUTING_TYPE_CODE,this.routingTypeCode);
    }
    if (this.zoneId != INVALID_ZONE_ID) {
      requestBuilder.setHeader(RestMessageHeaders.X_VOLD_ZONE_ID,String.valueOf(this.zoneId));
    }
    RestRequest request=requestBuilder.build();
    Future<RestResponse> future=client.restRequest(request);
    RestResponse response=future.get();
    final ByteString entity=response.getEntity();
    if (entity == null) {
      if (logger.isDebugEnabled()) {
        logger.debug("Empty response !");
      }
      return false;
    }
    System.out.println(entity.asString("UTF-8"));
    return true;
  }
 catch (  ExecutionException e) {
    if (e.getCause() instanceof RestException) {
      RestException exception=(RestException)e.getCause();
      if (logger.isDebugEnabled()) {
        logger.debug("REST EXCEPTION STATUS : " + exception.getResponse().getStatus());
      }
    }
 else {
      throw new VoldemortException("Unknown HTTP request execution exception: " + e.getMessage(),e);
    }
  }
catch (  InterruptedException e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Operation interrupted : " + e.getMessage(),e);
    }
    throw new VoldemortException("Operation interrupted exception: " + e.getMessage(),e);
  }
catch (  URISyntaxException e) {
    throw new VoldemortException("Illegal HTTP URL" + e.getMessage(),e);
  }
catch (  UnsupportedEncodingException e) {
    throw new VoldemortException("Illegal Encoding Type " + e.getMessage());
  }
  return false;
}
