{
  List<Node> nodes=Lists.newArrayList();
  List<Node> zoneNodes=Lists.newArrayList();
  int[] freePorts=ServerTestUtils.findFreePorts(3 * NUM_NODES);
  List<Zone> zones=Lists.newArrayList();
  for (int i=0; i < NUM_ZONES; i++) {
    LinkedList<Integer> proximityList=Lists.newLinkedList();
    int zoneId=i + 1;
    for (int j=0; j < NUM_ZONES; j++) {
      proximityList.add(zoneId % NUM_ZONES);
      zoneId++;
    }
    zones.add(new Zone(i,proximityList));
  }
  for (int i=0; i < NUM_NODES; i++) {
    nodes.add(new Node(i,"localhost",freePorts[3 * i],freePorts[3 * i + 1],freePorts[3 * i + 2],Lists.newArrayList(i,i + NUM_NODES)));
    if (i < NUM_NODES / 2)     zoneNodes.add(new Node(i,"localhost",freePorts[3 * i],freePorts[3 * i + 1],freePorts[3 * i + 2],0,Lists.newArrayList(i,i + NUM_NODES)));
 else     zoneNodes.add(new Node(i,"localhost",freePorts[3 * i],freePorts[3 * i + 1],freePorts[3 * i + 2],1,Lists.newArrayList(i,i + NUM_NODES)));
  }
  consistentRoutingCluster=new Cluster("consistent",nodes);
  nodes=Lists.newArrayList(RebalanceUtils.createUpdatedCluster(consistentRoutingCluster,nodes.get(NUM_NODES - 1),nodes.get(0),Lists.newArrayList(0)).getNodes());
  zoneNodes=Lists.newArrayList();
  for (  Node node : nodes) {
    if (node.getId() < NUM_NODES / 2)     zoneNodes.add(new Node(node.getId(),node.getHost(),node.getHttpPort(),node.getSocketPort(),node.getAdminPort(),0,node.getPartitionIds()));
 else     zoneNodes.add(new Node(node.getId(),node.getHost(),node.getHttpPort(),node.getSocketPort(),node.getAdminPort(),1,node.getPartitionIds()));
  }
  HashMap<Integer,Integer> zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,1);
  }
  beforeStoreDef=ServerTestUtils.getStoreDef("consistent_to_zone_store",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  voldemortServer=new VoldemortServer[NUM_NODES];
  routingStrategy=new RoutingStrategyFactory().updateRoutingStrategy(beforeStoreDef,consistentRoutingCluster);
  for (int nodeId=0; nodeId < NUM_NODES; nodeId++) {
    voldemortServer[nodeId]=startServer(nodeId,Lists.newArrayList(beforeStoreDef),consistentRoutingCluster);
  }
}
