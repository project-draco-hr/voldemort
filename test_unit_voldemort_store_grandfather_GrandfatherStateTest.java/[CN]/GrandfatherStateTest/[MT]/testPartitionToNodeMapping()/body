{
  List<RebalancePartitionsInfo> partitionsInfo=dummyPartitionsInfo(NUM_NODES,NUM_PARTITIONS_PER_NODE,false);
  GrandfatherState state=new GrandfatherState(partitionsInfo);
  for (int partitionId=0; partitionId < NUM_NODES * NUM_PARTITIONS_PER_NODE; partitionId++) {
    assertEquals(state.findNodeIds(partitionId).size(),1);
    assertEquals(state.findNodeIds(partitionId),Sets.newHashSet(partitionId / NUM_PARTITIONS_PER_NODE));
  }
  partitionsInfo=dummyPartitionsInfo(5,4,true);
  state=new GrandfatherState(partitionsInfo);
  for (int partitionId=0; partitionId < NUM_NODES * NUM_PARTITIONS_PER_NODE; partitionId++) {
    assertEquals(state.findNodeIds(partitionId),Sets.newHashSet(partitionId / NUM_PARTITIONS_PER_NODE,NUM_NODES - (partitionId / NUM_PARTITIONS_PER_NODE) - 1));
  }
}
