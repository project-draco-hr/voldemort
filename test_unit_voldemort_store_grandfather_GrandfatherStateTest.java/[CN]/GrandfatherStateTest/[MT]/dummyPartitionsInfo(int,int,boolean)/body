{
  List<RebalancePartitionsInfo> partitionsInfo=Lists.newArrayList();
  int partitionId=0;
  int endPartitionId=numberOfStealerNodes * numberOfPartitionsPerNode - 1;
  for (int stealerNodeId=0; stealerNodeId < numberOfStealerNodes; stealerNodeId++) {
    List<Integer> partitionIds=Lists.newArrayList();
    for (int i=0; i < numberOfPartitionsPerNode; i++) {
      partitionIds.add(partitionId);
      if (includeDuplicate) {
        partitionIds.add(endPartitionId);
        endPartitionId--;
      }
      partitionId++;
    }
    partitionsInfo.add(new RebalancePartitionsInfo(stealerNodeId,0,partitionIds,new ArrayList<Integer>(),new ArrayList<Integer>(),new ArrayList<String>(),new HashMap<String,String>(),new HashMap<String,String>(),0));
  }
  return partitionsInfo;
}
