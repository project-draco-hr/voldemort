{
  voldemortServer[0].getMetadataStore().put(MetadataStore.SERVER_STATE_KEY,VoldemortState.GRANDFATHERING_SERVER);
  voldemortServer[0].getMetadataStore().put(MetadataStore.GRANDFATHERING_INFO,new GrandfatherState(new ArrayList<RebalancePartitionsInfo>()));
  Map<ByteArray,byte[]> entryMap=ServerTestUtils.createRandomKeyValuePairs(TEST_VALUES_SIZE);
  Store<ByteArray,byte[],byte[]> store=voldemortServer[0].getStoreRepository().getLocalStore("consistent_to_zone_store");
  for (  Entry<ByteArray,byte[]> entry : entryMap.entrySet()) {
    List<Integer> partitions=routingStrategy.getPartitionList(entry.getKey().get());
    if (hasOverLap(partitions,consistentRoutingCluster.getNodeById(0).getPartitionIds()))     store.put(entry.getKey(),Versioned.value(entry.getValue(),new VectorClock().incremented(0,System.currentTimeMillis())),null);
  }
  StorageEngine<ByteArray,Slop,byte[]> slopEngine=voldemortServer[0].getStoreRepository().getSlopStore().asSlopStore();
  int count=0;
  ClosableIterator<Pair<ByteArray,Versioned<Slop>>> iterator=slopEngine.entries();
  while (iterator.hasNext()) {
    iterator.next();
    count++;
  }
  Assert.assertEquals(count,0);
}
