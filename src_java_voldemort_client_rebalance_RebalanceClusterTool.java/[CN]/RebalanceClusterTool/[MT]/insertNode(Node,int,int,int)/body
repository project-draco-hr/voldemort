{
  List<Node> nodes=new ArrayList<Node>();
  nodes.addAll(cluster.getNodes());
  nodes.add(template);
  Cluster templateCluster=new Cluster(cluster.getName(),nodes);
  Cluster targetCluster=null;
  boolean foundBest=false;
  for (int i=desiredParitions; i >= minPartitions && !foundBest; i--) {
    System.out.println("Trying to move " + i + " partitions to the new node");
    Cluster candidateCluster=createTargetCluster(templateCluster,i,maxRemap,ImmutableSet.<Integer>of(),masterToReplicas.keySet());
    if (candidateCluster.getNodeById(template.getId()).getNumberOfPartitions() > template.getNumberOfPartitions()) {
      targetCluster=candidateCluster;
      System.out.println("Success moving " + i + " partitions");
      foundBest=isGoodEnough(candidateCluster,i);
      if (foundBest) {
        System.out.println("Moving " + i + " partitions "+ "found to be \"optimal\"");
      }
 else       System.out.println("Correct but suboptimal cluster, trying to move a smaller number of partitions");
    }
  }
  return targetCluster;
}
