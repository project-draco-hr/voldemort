{
  VectorClock latestClock=new VectorClock();
  ArrayList<VectorClock> clockList=new ArrayList<VectorClock>();
  clockList.add(latestClock);
  for (  Node node : adminClient.getCluster().getNodes()) {
    VectorClock newClock=null;
    try {
      newClock=(VectorClock)adminClient.getRemoteCluster(node.getId()).getVersion();
    }
 catch (    Exception e) {
      if (requiredNodes.contains(node.getId()))       throw new VoldemortException("Failed to get Cluster version from node:" + node,e);
 else       logger.debug("Failed to get Cluster version from node:" + node,e);
    }
    logger.debug("latestClock:" + latestClock + " clockList:"+ clockList+ " newClock:"+ newClock);
    if (null != newClock && !clockList.contains(newClock)) {
      checkNotConcurrent(clockList,newClock);
      clockList.add(newClock);
      Occured occured=newClock.compare(latestClock);
      if (Occured.AFTER.equals(occured))       latestClock=newClock;
    }
  }
  return latestClock;
}
