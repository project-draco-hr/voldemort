{
synchronized (adminClient) {
    Versioned<Cluster> latestVersionedCluster=RebalanceUtils.getLatestCluster(Arrays.asList(stealerNode.getId(),rebalanceStealInfo.getDonorId()),adminClient);
    Cluster latestCluster=latestVersionedCluster.getValue();
    VectorClock latestClock=(VectorClock)latestVersionedCluster.getVersion();
    try {
      Cluster newCluster=RebalanceUtils.createUpdatedCluster(latestCluster,stealerNode,latestCluster.getNodeById(rebalanceStealInfo.getDonorId()),rebalanceStealInfo.getPartitionList());
      latestClock.incrementVersion(stealerNode.getId(),System.currentTimeMillis());
      RebalanceUtils.propagateCluster(adminClient,newCluster,latestClock,Arrays.asList(stealerNode.getId(),rebalanceStealInfo.getDonorId()));
      adminClient.setCluster(newCluster);
    }
 catch (    Exception e) {
      logger.error("Failed to commit rebalance on node:" + stealerNode.getId() + " REVERTING cluster changes ...",e);
      latestClock.incrementVersion(stealerNode.getId(),System.currentTimeMillis());
      RebalanceUtils.propagateCluster(adminClient,latestCluster,latestClock,new ArrayList<Integer>());
      throw new VoldemortException(e);
    }
  }
}
