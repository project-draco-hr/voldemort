{
  List<Integer> zoneIds=new ArrayList<Integer>(targetCluster.getZoneIds());
  Cluster returnCluster=ClusterUtils.copyCluster(targetCluster);
  double currentUtility=new ClusterInstance(returnCluster,storeDefs).getPartitionBalance().getUtility();
  for (int i=0; i < greedyAttempts; i++) {
    Collections.shuffle(zoneIds,new Random(System.currentTimeMillis()));
    for (    Integer zoneId : zoneIds) {
      System.out.println("Greedy swap attempt: zone " + zoneId + " , attempt "+ i+ " of "+ greedyAttempts);
      Cluster shuffleResults=swapGreedyRandomPartitionsWithinZone(returnCluster,zoneId,greedySwapMaxPartitionsPerNode,greedySwapMaxPartitionsPerZone,storeDefs);
      double nextUtility=new ClusterInstance(shuffleResults,storeDefs).getPartitionBalance().getUtility();
      if (nextUtility == currentUtility) {
        System.out.println("Not improving for zone: " + zoneId);
      }
 else {
        System.out.println("Swap improved max-min ratio: " + currentUtility + " -> "+ nextUtility+ " (swap attempt "+ i+ " in zone "+ zoneId+ ")");
        returnCluster=shuffleResults;
        currentUtility=nextUtility;
      }
    }
  }
  return returnCluster;
}
