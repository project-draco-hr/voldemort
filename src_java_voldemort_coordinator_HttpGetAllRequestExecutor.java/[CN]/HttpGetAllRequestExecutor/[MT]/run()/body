{
  try {
    Map<ByteArray,List<Versioned<byte[]>>> versionedResponses=storeClient.getAllWithCustomTimeout(this.getAllRequestObject);
    if (versionedResponses == null || versionedResponses.entrySet().size() == 0) {
      RESTErrorHandler.handleError(NOT_FOUND,this.getRequestMessageEvent,"Requested Key does not exist");
    }
    writeResponse(versionedResponses);
  }
 catch (  IllegalArgumentException illegalArgsException) {
    String errorDescription="GETALL Failed !!! Illegal Arguments : " + illegalArgsException.getMessage();
    logger.error(errorDescription);
    RESTErrorHandler.handleError(BAD_REQUEST,this.getRequestMessageEvent,errorDescription);
  }
catch (  StoreTimeoutException timeoutException) {
    String errorDescription="GET Request timed out: " + timeoutException.getMessage();
    logger.error(errorDescription);
    RESTErrorHandler.handleError(REQUEST_TIMEOUT,this.getRequestMessageEvent,errorDescription);
  }
catch (  InsufficientOperationalNodesException exception) {
    long nowInNs=System.nanoTime();
    if (nowInNs - startTimestampInNs > getAllRequestObject.getRoutingTimeoutInMs() * Time.NS_PER_MS) {
      String errorDescription="GET Request timed out: " + exception.getMessage();
      logger.error(errorDescription);
      RESTErrorHandler.handleError(REQUEST_TIMEOUT,this.getRequestMessageEvent,errorDescription);
    }
 else {
      String errorDescription="Voldemort Exception: " + exception.getMessage();
      RESTErrorHandler.handleError(INTERNAL_SERVER_ERROR,this.getRequestMessageEvent,errorDescription);
    }
  }
catch (  VoldemortException ve) {
    String errorDescription="Voldemort Exception: " + ve.getMessage();
    RESTErrorHandler.handleError(INTERNAL_SERVER_ERROR,this.getRequestMessageEvent,errorDescription);
  }
catch (  Exception e) {
    String errorDescription="Exception: " + e.getMessage();
    RESTErrorHandler.handleError(INTERNAL_SERVER_ERROR,this.getRequestMessageEvent,errorDescription);
  }
}
