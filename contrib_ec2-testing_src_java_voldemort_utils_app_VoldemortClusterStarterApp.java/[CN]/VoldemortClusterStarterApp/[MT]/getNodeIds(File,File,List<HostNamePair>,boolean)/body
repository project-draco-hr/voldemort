{
  Map<String,Integer> nodeIds=new HashMap<String,Integer>();
  DocumentBuilder documentBuilder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  Document document=documentBuilder.parse(clusterXmlFile);
  NodeList documentChildren=document.getChildNodes().item(0).getChildNodes();
  for (int i=0; i < documentChildren.getLength(); i++) {
    Node documentChild=documentChildren.item(i);
    if (documentChild.getNodeName().equals("server")) {
      NodeList serverChildren=documentChild.getChildNodes();
      String hostName=null;
      String id=null;
      for (int j=0; j < serverChildren.getLength(); j++) {
        Node serverChild=serverChildren.item(j);
        if (serverChild.getNodeName().equals("host"))         hostName=serverChild.getTextContent();
 else         if (serverChild.getNodeName().equals("id"))         id=serverChild.getTextContent();
      }
      if (hostName != null && id != null) {
        for (        HostNamePair hostNamePair : hostNamePairs) {
          if (useInternal) {
            if (hostNamePair.getInternalHostName().equals(hostName))             nodeIds.put(hostNamePair.getExternalHostName(),Integer.parseInt(id));
          }
 else {
            if (hostNamePair.getExternalHostName().equals(hostName))             nodeIds.put(hostNamePair.getExternalHostName(),Integer.parseInt(id));
          }
        }
      }
 else {
        throw new Exception(clusterXmlFile.getAbsolutePath() + " appears to be corrupt; could not determine the <host> and/or <id> values for the <server> node");
      }
    }
  }
  if (nodeIds.size() != hostNamePairs.size()) {
    throw new Exception(clusterXmlFile.getAbsolutePath() + " appears to be corrupt; not all of the hosts from " + hostNamesFile.getAbsolutePath()+ " were represented in "+ clusterXmlFile.getAbsolutePath());
  }
  return nodeIds;
}
