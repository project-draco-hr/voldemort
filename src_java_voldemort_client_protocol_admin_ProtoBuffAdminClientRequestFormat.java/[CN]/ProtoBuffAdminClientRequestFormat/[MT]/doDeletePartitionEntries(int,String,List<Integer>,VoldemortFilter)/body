{
  Node node=this.getMetadata().getCluster().getNodeById(nodeId);
  SocketDestination destination=new SocketDestination(node.getHost(),node.getAdminPort(),RequestFormatType.ADMIN_PROTOCOL_BUFFERS);
  SocketAndStreams sands=pool.checkout(destination);
  try {
    DataOutputStream outputStream=sands.getOutputStream();
    DataInputStream inputStream=sands.getInputStream();
    VAdminProto.DeletePartitionEntriesRequest.Builder deleteRequest=VAdminProto.DeletePartitionEntriesRequest.newBuilder().addAllPartitions(partitionList).setStore(storeName);
    if (filter != null) {
      deleteRequest.setFilter(encodeFilter(filter));
    }
    VAdminProto.VoldemortAdminRequest.Builder request=VAdminProto.VoldemortAdminRequest.newBuilder().setType(VAdminProto.AdminRequestType.DELETE_PARTITION_ENTRIES).setDeletePartitionEntries(deleteRequest);
    ProtoUtils.writeMessage(outputStream,request.build());
    outputStream.flush();
    VAdminProto.DeletePartitionEntriesResponse.Builder response=ProtoUtils.readToBuilder(inputStream,VAdminProto.DeletePartitionEntriesResponse.newBuilder());
    if (response.hasError())     throwException(response.getError());
    return response.getCount();
  }
 catch (  IOException e) {
    close(sands.getSocket());
    throw new VoldemortException(e);
  }
 finally {
    pool.checkin(destination,sands);
  }
}
