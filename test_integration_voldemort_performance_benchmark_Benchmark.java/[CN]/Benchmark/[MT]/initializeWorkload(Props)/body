{
  if (!this.storeInitialized) {
    throw new VoldemortException("Store not initialized correctly");
  }
  this.targetThroughput=workloadProps.getInt(TARGET_THROUGHPUT,-1);
  this.perThreadThroughputPerMs=-1;
  if (targetThroughput > 0) {
    double targetPerThread=((double)targetThroughput) / ((double)numThreads);
    this.perThreadThroughputPerMs=targetPerThread / 1000.0;
  }
  if (workloadProps.containsKey(OPS_COUNT)) {
    this.opsCount=workloadProps.getInt(OPS_COUNT);
  }
 else {
    throw new VoldemortException("Missing compulsory parameters - " + OPS_COUNT);
  }
  this.recordCount=workloadProps.getInt(RECORD_COUNT,-1);
  this.pluginName=workloadProps.getString(PLUGIN_CLASS,null);
  Metrics.setProperties(workloadProps);
  Metrics.getInstance().reset();
  String workloadType=workloadProps.getString(WORKLOAD_TYPE,DEFAULT_WORKLOAD_TYPE);
  this.workLoad=getWorkloadInstance(workloadType);
  this.workLoad.init(workloadProps);
  this.workLoad.loadSampleValues(storeClient);
  System.out.println(String.format("INFO: %s is used.",this.workLoad.getClass().getName()));
}
