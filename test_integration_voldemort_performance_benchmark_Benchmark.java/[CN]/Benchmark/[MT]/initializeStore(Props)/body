{
  this.numThreads=benchmarkProps.getInt(THREADS,MAX_WORKERS);
  this.numIterations=benchmarkProps.getInt(ITERATIONS,1);
  this.statusIntervalSec=benchmarkProps.getInt(INTERVAL,0);
  this.verbose=benchmarkProps.getBoolean(VERBOSE,false);
  this.verifyRead=benchmarkProps.getBoolean(VERIFY,false);
  this.ignoreNulls=benchmarkProps.getBoolean(IGNORE_NULLS,false);
  if (benchmarkProps.containsKey(URL)) {
    if (!benchmarkProps.containsKey(STORE_NAME)) {
      throw new VoldemortException("Missing storename");
    }
    String socketUrl=benchmarkProps.getString(URL);
    String storeName=benchmarkProps.getString(STORE_NAME);
    ClientConfig clientConfig=new ClientConfig().setMaxThreads(numThreads).setMaxTotalConnections(numThreads).setMaxConnectionsPerNode(numThreads).setBootstrapUrls(socketUrl).setConnectionTimeout(60,TimeUnit.SECONDS).setSocketTimeout(60,TimeUnit.SECONDS).setFailureDetectorRequestLengthThreshold(TimeUnit.SECONDS.toMillis(60)).setSocketBufferSize(4 * 1024);
    SocketStoreClientFactory socketFactory=new SocketStoreClientFactory(clientConfig);
    this.storeClient=socketFactory.getStoreClient(storeName);
    StoreDefinition storeDef=getStoreDefinition(socketFactory,storeName);
    this.keyType=findKeyType(storeDef);
    benchmarkProps.put(Benchmark.KEY_TYPE,this.keyType);
    this.factory=socketFactory;
    if (benchmarkProps.getBoolean(HANDSHAKE,false)) {
      final Object key=getTempKey(this.keyType);
      this.storeClient.delete(key);
      this.storeClient.put(key,"123");
      this.storeClient.delete(key);
    }
  }
 else {
    String storageEngineType=benchmarkProps.getString(STORAGE_ENGINE_TYPE);
    this.keyType=benchmarkProps.getString(KEY_TYPE,STRING_KEY_TYPE);
    Serializer serializer=findKeyType(this.keyType);
    Store<Object,Object> store=null;
    StorageConfiguration conf=null;
    if (storageEngineType.compareTo(BdbStorageConfiguration.TYPE_NAME) == 0) {
      conf=new BdbStorageConfiguration(ServerTestUtils.getVoldemortConfig());
    }
 else     if (storageEngineType.compareTo(MysqlStorageConfiguration.TYPE_NAME) == 0) {
      conf=new MysqlStorageConfiguration(ServerTestUtils.getVoldemortConfig());
    }
 else     if (storageEngineType.compareTo(InMemoryStorageConfiguration.TYPE_NAME) == 0) {
      conf=new InMemoryStorageConfiguration(ServerTestUtils.getVoldemortConfig());
    }
    store=SerializingStore.wrap(conf.getStore(DUMMY_DB),serializer,new StringSerializer());
    this.factory=new StaticStoreClientFactory(store);
    this.storeClient=factory.getStoreClient(store.getName());
  }
  this.storeInitialized=true;
}
