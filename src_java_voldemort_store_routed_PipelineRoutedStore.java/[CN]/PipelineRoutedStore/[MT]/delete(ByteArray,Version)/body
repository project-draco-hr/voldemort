{
  StoreUtils.assertValidKey(key);
  long startTimeMs=-1;
  long startTimeNs=-1;
  if (logger.isDebugEnabled()) {
    startTimeMs=System.currentTimeMillis();
    startTimeNs=System.nanoTime();
  }
  BasicPipelineData<Boolean> pipelineData=new BasicPipelineData<Boolean>();
  if (zoneRoutingEnabled)   pipelineData.setZonesRequired(storeDef.getZoneCountWrites());
 else   pipelineData.setZonesRequired(null);
  pipelineData.setStoreName(name);
  pipelineData.setStats(stats);
  Pipeline pipeline=new Pipeline(Operation.DELETE,timeoutConfig.getOperationTimeout(VoldemortOpCode.DELETE_OP_CODE),TimeUnit.MILLISECONDS);
  pipeline.setEnableHintedHandoff(isHintedHandoffEnabled());
  HintedHandoff hintedHandoff=null;
  if (isHintedHandoffEnabled())   hintedHandoff=new HintedHandoff(failureDetector,slopStores,nonblockingSlopStores,handoffStrategy,pipelineData.getFailedNodes(),timeoutConfig.getOperationTimeout(VoldemortOpCode.DELETE_OP_CODE));
  pipeline.addEventAction(Event.STARTED,new ConfigureNodes<Boolean,BasicPipelineData<Boolean>>(pipelineData,Event.CONFIGURED,failureDetector,storeDef.getRequiredWrites(),routingStrategy,key,clientZone));
  pipeline.addEventAction(Event.CONFIGURED,new PerformParallelDeleteRequests<Boolean,BasicPipelineData<Boolean>>(pipelineData,isHintedHandoffEnabled() ? Event.RESPONSES_RECEIVED : Event.COMPLETED,key,failureDetector,storeDef.getPreferredWrites(),storeDef.getRequiredWrites(),timeoutConfig.getOperationTimeout(VoldemortOpCode.DELETE_OP_CODE),nonblockingStores,hintedHandoff,version));
  if (isHintedHandoffEnabled()) {
    pipeline.addEventAction(Event.RESPONSES_RECEIVED,new PerformDeleteHintedHandoff(pipelineData,Event.COMPLETED,key,version,hintedHandoff));
    pipeline.addEventAction(Event.ABORTED,new PerformDeleteHintedHandoff(pipelineData,Event.ERROR,key,version,hintedHandoff));
  }
  pipeline.addEvent(Event.STARTED);
  if (logger.isDebugEnabled()) {
    logger.debug("Operation " + pipeline.getOperation().getSimpleName() + " Key "+ ByteUtils.toHexString(key.get()));
  }
  try {
    pipeline.execute();
  }
 catch (  VoldemortException e) {
    stats.reportException(e);
    throw e;
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Finished " + pipeline.getOperation().getSimpleName() + " for key "+ ByteUtils.toHexString(key.get())+ " keyRef: "+ System.identityHashCode(key)+ "; started at "+ startTimeMs+ " took "+ (System.nanoTime() - startTimeNs));
  }
  if (pipelineData.getFatalError() != null)   throw pipelineData.getFatalError();
  for (  Response<ByteArray,Boolean> response : pipelineData.getResponses()) {
    if (response.getValue().booleanValue())     return true;
  }
  return false;
}
