{
  StoreUtils.assertValidKey(key);
  BasicPipelineData<List<Version>> pipelineData=new BasicPipelineData<List<Version>>();
  final Pipeline pipeline=new Pipeline(Operation.GET_VERSIONS,timeoutMs,TimeUnit.MILLISECONDS);
  NonblockingStoreRequest storeRequest=new NonblockingStoreRequest(){
    public void submit(    Node node,    NonblockingStore store,    NonblockingStoreCallback callback){
      store.submitGetVersionsRequest(key,callback);
    }
  }
;
  pipeline.addEventAction(Event.STARTED,new ConfigureNodes<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.CONFIGURED,failureDetector,storeDef.getRequiredReads(),routingStrategy,key));
  pipeline.addEventAction(Event.CONFIGURED,new PerformParallelRequests<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.COMPLETED,key,failureDetector,storeDef.getPreferredReads(),storeDef.getRequiredReads(),timeoutMs,nonblockingStores,storeRequest,null));
  pipeline.addEvent(Event.STARTED);
  pipeline.execute();
  if (pipelineData.getFatalError() != null)   throw pipelineData.getFatalError();
  List<Version> results=new ArrayList<Version>();
  for (  Response<ByteArray,List<Version>> response : pipelineData.getResponses())   results.addAll(response.getValue());
  return results;
}
