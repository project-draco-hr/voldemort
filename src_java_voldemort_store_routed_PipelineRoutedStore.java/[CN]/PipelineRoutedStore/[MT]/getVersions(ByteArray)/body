{
  StoreUtils.assertValidKey(key);
  BasicPipelineData<List<Version>> pipelineData=new BasicPipelineData<List<Version>>();
  if (zoneRoutingEnabled)   pipelineData.setZonesRequired(storeDef.getZoneCountReads());
 else   pipelineData.setZonesRequired(null);
  Pipeline pipeline=new Pipeline(Operation.GET_VERSIONS,timeoutMs,TimeUnit.MILLISECONDS);
  StoreRequest<List<Version>> blockingStoreRequest=new StoreRequest<List<Version>>(){
    public List<Version> request(    Store<ByteArray,byte[],byte[]> store){
      return store.getVersions(key);
    }
  }
;
  pipeline.addEventAction(Event.STARTED,new ConfigureNodes<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.CONFIGURED,failureDetector,storeDef.getRequiredReads(),routingStrategy,key,clientZone));
  pipeline.addEventAction(Event.CONFIGURED,new PerformParallelRequests<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.COMPLETED,key,null,failureDetector,storeDef.getPreferredReads(),storeDef.getRequiredReads(),timeoutMs,nonblockingStores,Event.INSUFFICIENT_SUCCESSES,Event.INSUFFICIENT_ZONES));
  pipeline.addEventAction(Event.INSUFFICIENT_SUCCESSES,new PerformSerialRequests<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.COMPLETED,key,failureDetector,innerStores,storeDef.getPreferredReads(),storeDef.getRequiredReads(),blockingStoreRequest,null));
  if (zoneRoutingEnabled)   pipeline.addEventAction(Event.INSUFFICIENT_ZONES,new PerformZoneSerialRequests<List<Version>,BasicPipelineData<List<Version>>>(pipelineData,Event.COMPLETED,key,failureDetector,innerStores,blockingStoreRequest));
  pipeline.addEvent(Event.STARTED);
  if (logger.isDebugEnabled()) {
    logger.debug("Operation  " + pipeline.getOperation().getSimpleName() + "Key "+ ByteUtils.toHexString(key.get()));
  }
  pipeline.execute();
  if (pipelineData.getFatalError() != null)   throw pipelineData.getFatalError();
  List<Version> results=new ArrayList<Version>();
  for (  Response<ByteArray,List<Version>> response : pipelineData.getResponses())   results.addAll(response.getValue());
  return results;
}
