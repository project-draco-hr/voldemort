{
  super(storeDef.getName(),innerStores,cluster,storeDef,repairReads,timeoutConfig,failureDetector,SystemTime.INSTANCE);
  this.nonblockingSlopStores=nonblockingSlopStores;
  this.clientZone=cluster.getZoneById(clientZoneId);
  this.nonblockingStores=new ConcurrentHashMap<Integer,NonblockingStore>(nonblockingStores);
  this.slopStores=slopStores;
  if (storeDef.getRoutingStrategyType().compareTo(RoutingStrategyType.ZONE_STRATEGY) == 0) {
    zoneRoutingEnabled=true;
  }
 else {
    zoneRoutingEnabled=false;
  }
  if (storeDef.hasHintedHandoffStrategyType()) {
    HintedHandoffStrategyFactory factory=new HintedHandoffStrategyFactory(zoneRoutingEnabled,clientZone.getId());
    this.handoffStrategy=factory.updateHintedHandoffStrategy(storeDef,cluster);
  }
 else {
    this.handoffStrategy=null;
  }
  this.jmxEnabled=isJmxEnabled;
  this.jmxId=jmxId;
  if (this.jmxEnabled) {
    stats=new PipelineRoutedStats();
    JmxUtils.registerMbean(stats,JmxUtils.createObjectName(JmxUtils.getPackageName(stats.getClass()),getName() + "-" + JmxUtils.getJmxId(this.jmxId)));
  }
}
