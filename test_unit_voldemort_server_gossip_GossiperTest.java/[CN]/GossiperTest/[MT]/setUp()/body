{
  props.put("enable.gossip","true");
  props.put("gossip.interval.ms","250");
  props.put("socket.buffer.size",String.valueOf(socketBufferSize));
  props.put("admin.streams.buffer.size",String.valueOf(adminSocketBufferSize));
  cluster=ServerTestUtils.getLocalCluster(3,new int[][]{{0,1,2,3},{4,5,6,7},{8,9,10,11}});
  ExecutorService executorService=Executors.newFixedThreadPool(3);
  final CountDownLatch countDownLatch=new CountDownLatch(3);
  for (int i=0; i < 3; i++) {
    final int j=i;
    executorService.submit(new Runnable(){
      public void run(){
        try {
          servers.add(ServerTestUtils.startVoldemortServer(socketStoreFactory,ServerTestUtils.createServerConfig(useNio,j,TestUtils.createTempDir().getAbsolutePath(),null,storesXmlfile,props),cluster));
          countDownLatch.countDown();
        }
 catch (        IOException e) {
          throw new RuntimeException();
        }
      }
    }
);
  }
  try {
    countDownLatch.await();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
}
