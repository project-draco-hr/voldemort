{
  Multimap<Integer,ByteArray> scatterMap=HashMultimap.create(stealInfoList.size(),keys.size());
  int numKeys=0;
  for (  ByteArray key : keys) {
    numKeys++;
    for (    RebalancePartitionsInfo stealInfo : stealInfoList) {
      byte[] keyBytes=key.get();
      for (      int p : metadata.getRoutingStrategy(getName()).getPartitionList(keyBytes)) {
        if (stealInfo.getPartitionList().contains(p))         scatterMap.put(stealInfo.getDonorId(),key);
      }
    }
  }
  Map<ByteArray,List<Versioned<byte[]>>> gatherMap=Maps.newHashMapWithExpectedSize(numKeys);
  for (  int donorNodeId : scatterMap.keySet()) {
    Node donorNode=metadata.getCluster().getNodeById(donorNodeId);
    checkNodeAvailable(donorNode);
    long startNs=System.nanoTime();
    try {
      Map<ByteArray,List<Versioned<byte[]>>> resultsForNode=getRedirectingSocketStore(getName(),donorNodeId).getAll(scatterMap.get(donorNodeId),transforms);
      recordSuccess(donorNode,startNs);
      for (      Map.Entry<ByteArray,List<Versioned<byte[]>>> entry : resultsForNode.entrySet()) {
        gatherMap.put(entry.getKey(),entry.getValue());
      }
    }
 catch (    UnreachableStoreException e) {
      recordException(donorNode,startNs,e);
      throw new ProxyUnreachableException("Failed to reach proxy node " + donorNode,e);
    }
  }
  return gatherMap;
}
