{
  String offlineHostName=hostNames.get(0);
  Integer offlineNodeId=nodeIds.get(offlineHostName);
  StoreClientFactory scf=new SocketStoreClientFactory(new ClientConfig().setBootstrapUrls("tcp://" + hostNamePairs.get(0).getInternalHostName() + ":6666"));
  FailureDetector failureDetector=scf.getFailureDetector();
  Node node=null;
  for (  Node n : failureDetector.getConfig().getNodes()) {
    if (offlineNodeId.equals(n.getId())) {
      node=n;
      break;
    }
  }
  StoreClient<String,String> store1=scf.getStoreClient("test");
  test(store1,true);
  assertEquals(hostNamePairs.size(),failureDetector.getAvailableNodeCount());
  assertTrue(failureDetector.isAvailable(node));
  stopClusterNode(offlineHostName,ec2RemoteTestConfig);
  test(store1,false);
  assertEquals(hostNamePairs.size() - 1,failureDetector.getAvailableNodeCount());
  assertFalse(failureDetector.isAvailable(node));
  startClusterNode(offlineHostName,ec2RemoteTestConfig,offlineNodeId);
  failureDetector.waitForAvailability(node);
  test(store1,true);
  assertEquals(hostNamePairs.size(),failureDetector.getAvailableNodeCount());
  assertTrue(failureDetector.isAvailable(node));
}
