{
  StoreClientFactory scf=new SocketStoreClientFactory(new ClientConfig().setBootstrapUrls("tcp://" + hostNamePairs.get(0).getInternalHostName() + ":6666"));
  FailureDetector failureDetector=scf.getFailureDetector();
  StoreClient<String,String> store1=scf.getStoreClient("test");
  test(store1,true);
  assertEquals(hostNamePairs.size(),failureDetector.getAvailableNodeCount());
  for (  Node n : failureDetector.getConfig().getNodes())   assertTrue(failureDetector.isAvailable(n));
  stopClusterQuiet(hostNames,ec2RemoteTestConfig);
  test(store1,false);
  assertEquals(0,failureDetector.getAvailableNodeCount());
  for (  Node n : failureDetector.getConfig().getNodes())   assertFalse(failureDetector.isAvailable(n));
  startClusterAsync(hostNames,ec2RemoteTestConfig,nodeIds);
  for (  Node n : failureDetector.getConfig().getNodes())   failureDetector.waitForAvailability(n);
  test(store1,true);
  assertEquals(hostNamePairs.size(),failureDetector.getAvailableNodeCount());
  for (  Node n : failureDetector.getConfig().getNodes())   assertTrue(failureDetector.isAvailable(n));
}
