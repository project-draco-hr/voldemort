{
  Path path=new Path(TestUtils.createTempDir().getAbsolutePath(),"tempFile");
  FileSystem fs=path.getFileSystem(new Configuration());
  fs.create(path);
  HdfsDataFileChunk chunk=new HdfsDataFileChunk(fs,fs.getFileStatus(path));
  int jumps=10;
  ByteBuffer buffer=ByteBuffer.allocate(jumps);
  try {
    chunk.read(buffer,0);
    fail("Should have thrown EOFException");
  }
 catch (  EOFException e) {
  }
  for (int numBytes=100; numBytes <= 1000; numBytes+=100) {
    fs.delete(path,true);
    fs.create(path);
    byte[] randomBytes=TestUtils.randomBytes(numBytes);
    FileOutputStream stream=new FileOutputStream(path.toString());
    stream.write(randomBytes);
    stream.close();
    chunk=new HdfsDataFileChunk(fs,fs.getFileStatus(path));
    for (int offset=0; offset < numBytes; offset+=jumps) {
      buffer.clear();
      assertEquals(chunk.read(buffer,offset),jumps);
      assertEquals(0,ByteUtils.compare(buffer.array(),ByteUtils.copy(randomBytes,offset,offset + jumps)));
    }
  }
}
