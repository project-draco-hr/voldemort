{
  assertEquals(JsonTypes.INT8,fromJson(quote("int8")).getType());
  assertEquals(JsonTypes.INT16,fromJson(quote("int16")).getType());
  assertEquals(JsonTypes.INT32,fromJson(quote("int32")).getType());
  assertEquals(JsonTypes.INT64,fromJson(quote("int64")).getType());
  assertEquals(JsonTypes.FLOAT32,fromJson(quote("float32")).getType());
  assertEquals(JsonTypes.FLOAT64,fromJson(quote("float64")).getType());
  assertEquals(JsonTypes.STRING,fromJson(quote("string")).getType());
  assertEquals(JsonTypes.BYTES,fromJson(quote("bytes")).getType());
  assertEquals(asList(JsonTypes.INT8),fromJson("[\"int8\"]").getType());
  assertEquals(asList(JsonTypes.STRING),fromJson("[\"string\"]").getType());
  assertEquals(asList(asList(JsonTypes.INT16)),fromJson("[[\"int16\"]]").getType());
  assertEquals(Maps.newHashMap(),fromJson("{}").getType());
  assertEquals(ImmutableMap.of("hello",JsonTypes.INT32,"blah",JsonTypes.FLOAT32),fromJson("{\"hello\":\"int32\",\"blah\":\"float32\"}").getType());
}
