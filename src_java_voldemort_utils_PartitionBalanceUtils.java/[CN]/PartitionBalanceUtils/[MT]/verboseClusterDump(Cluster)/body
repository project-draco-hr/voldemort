{
  StringBuilder builder=new StringBuilder();
  builder.append("CLUSTER XML SUMMARY\n");
  Map<Integer,Integer> zoneIdToPartitionCount=Maps.newHashMap();
  Map<Integer,Integer> zoneIdToNodeCount=Maps.newHashMap();
  for (  Zone zone : cluster.getZones()) {
    zoneIdToPartitionCount.put(zone.getId(),0);
    zoneIdToNodeCount.put(zone.getId(),0);
  }
  for (  Node node : cluster.getNodes()) {
    zoneIdToPartitionCount.put(node.getZoneId(),zoneIdToPartitionCount.get(node.getZoneId()) + node.getNumberOfPartitions());
    zoneIdToNodeCount.put(node.getZoneId(),zoneIdToNodeCount.get(node.getZoneId()) + 1);
  }
  builder.append("\n");
  builder.append("Number of partitions per zone:\n");
  for (  Zone zone : cluster.getZones()) {
    builder.append("\tZone: " + zone.getId() + " - "+ zoneIdToPartitionCount.get(zone.getId())+ "\n");
  }
  builder.append("\n");
  builder.append("Number of nodes per zone:\n");
  for (  Zone zone : cluster.getZones()) {
    builder.append("\tZone: " + zone.getId() + " - "+ zoneIdToNodeCount.get(zone.getId())+ "\n");
  }
  builder.append("\n");
  builder.append("Nodes in each zone:\n");
  for (  Zone zone : cluster.getZones()) {
    builder.append("\tZone: " + zone.getId() + " - "+ cluster.getNodeIdsInZone(zone.getId())+ "\n");
  }
  builder.append("\n");
  builder.append("Number of partitions per node:\n");
  for (  Node node : cluster.getNodes()) {
    builder.append("\tNode ID: " + node.getId() + " - "+ node.getNumberOfPartitions()+ " ("+ node.getHost()+ ")\n");
  }
  builder.append("\n");
  if (cluster.getZones().size() > 1) {
    builder.append("ZONE-PARTITION SUMMARY:\n");
    builder.append("\n");
    builder.append("Partitions in each zone:\n");
    for (    Zone zone : cluster.getZones()) {
      builder.append("\tZone: " + zone.getId() + " - "+ compressedListOfPartitionsInZone(cluster,zone.getId())+ "\n");
    }
    builder.append("\n");
    builder.append("Contiguous partition run lengths in each zone ('{run length : count}'):\n");
    for (    Zone zone : cluster.getZones()) {
      builder.append("\tZone: " + zone.getId() + " - "+ getPrettyMapOfContiguousPartitionRunLengths(cluster,zone.getId())+ "\n");
    }
    builder.append("\n");
    builder.append("The following nodes have hot partitions:\n");
    builder.append(getHotPartitionsDueToContiguity(cluster,5));
    builder.append("\n");
  }
  return builder.toString();
}
