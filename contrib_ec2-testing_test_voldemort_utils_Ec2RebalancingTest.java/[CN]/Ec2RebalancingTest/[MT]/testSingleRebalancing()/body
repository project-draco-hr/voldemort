{
  int clusterSize=ec2RebalancingTestConfig.getInstanceCount();
  int[][] targetLayout=insertNode(partitionMap,partitionMap[clusterSize - 1].length - 1);
  Cluster targetCluster=ServerTestUtils.getLocalCluster(clusterSize + 1,getPorts(clusterSize + 1),targetLayout);
  List<Integer> originalNodes=Lists.transform(Lists.<Node>newLinkedList(originalCluster.getNodes()),new Function<Node,Integer>(){
    public Integer apply(    Node node){
      return node.getId();
    }
  }
);
  targetCluster=expandCluster(targetCluster.getNumberOfNodes() - clusterSize,targetCluster);
  try {
    RebalanceClient rebalanceClient=new RebalanceClient(getBootstrapUrl(hostNames),new RebalanceClientConfig());
    populateData(originalCluster,originalNodes);
    rebalanceAndCheck(originalCluster,targetCluster,rebalanceClient,Arrays.asList(clusterSize));
  }
  finally {
    stopCluster(hostNames,ec2RebalancingTestConfig);
  }
}
