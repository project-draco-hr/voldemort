{
  Queue<AsyncResourceRequest<V>> requestQueue=getRequestQueueForKey(key);
  if (requestQueue.isEmpty()) {
    return false;
  }
  Pool<V> resourcePool=getResourcePoolForKey(key);
  V resource=null;
  Exception ex=null;
  try {
    resource=attemptNonBlockingCheckout(key,resourcePool);
  }
 catch (  Exception e) {
    destroyResource(key,resourcePool,resource);
    ex=e;
    resource=null;
  }
  if (resource == null && ex == null) {
    return false;
  }
  AsyncResourceRequest<V> resourceRequest=getNextUnexpiredResourceRequest(requestQueue);
  if (resourceRequest == null) {
    if (resource != null) {
      try {
        super.checkin(key,resource);
      }
 catch (      Exception e) {
        logger.error("Exception checking in resource: ",e);
      }
    }
 else {
    }
    return false;
  }
 else {
    if (resource != null) {
      resourceRequest.useResource(resource);
    }
 else {
      resourceRequest.handleException(ex);
    }
    return true;
  }
}
