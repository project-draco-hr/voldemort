{
  if (requiredReads < 1)   throw new IllegalArgumentException("Cannot have a requiredReads number less than 1.");
 else   if (requiredReads > replicationFactor)   throw new IllegalArgumentException("Cannot have more requiredReads then there are replicas.");
  if (requiredWrites < 1)   throw new IllegalArgumentException("Cannot have a requiredWrites number less than 1.");
 else   if (requiredWrites > replicationFactor)   throw new IllegalArgumentException("Cannot have more requiredWrites then there are replicas.");
  if (preferredWrites != null) {
    if (preferredWrites < requiredWrites)     throw new IllegalArgumentException("preferredWrites must be greater or equal to requiredWrites.");
    if (preferredWrites > replicationFactor)     throw new IllegalArgumentException("Cannot have more preferredWrites then there are replicas.");
  }
  if (preferredReads != null) {
    if (preferredReads < requiredReads)     throw new IllegalArgumentException("preferredReads must be greater or equal to requiredReads.");
    if (preferredReads > replicationFactor)     throw new IllegalArgumentException("Cannot have more preferredReads then there are replicas.");
  }
  if (retentionPeriodDays != null && retentionPeriodDays < 0)   throw new IllegalArgumentException("Retention days must be non-negative.");
  if (zoneCountReads != null && zoneCountReads < 0)   throw new IllegalArgumentException("Zone Counts reads must be non-negative");
  if (zoneCountWrites != null && zoneCountWrites < 0)   throw new IllegalArgumentException("Zone Counts writes must be non-negative");
  if (zoneReplicationFactor != null && zoneReplicationFactor.size() != 0) {
    int sumZoneReplicationFactor=0;
    for (    Integer zoneId : zoneReplicationFactor.keySet()) {
      sumZoneReplicationFactor+=zoneReplicationFactor.get(zoneId);
    }
    if (sumZoneReplicationFactor != replicationFactor) {
      throw new IllegalArgumentException("Sum total of zones does not match the total replication factor");
    }
  }
}
