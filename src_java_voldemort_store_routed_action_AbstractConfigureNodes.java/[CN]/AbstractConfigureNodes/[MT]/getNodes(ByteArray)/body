{
  List<Node> nodes=new ArrayList<Node>();
  List<Integer> failedNodes=new ArrayList<Integer>();
  List<Integer> allNodes=new ArrayList<Integer>();
  for (  Node node : routingStrategy.routeRequest(key.get())) {
    allNodes.add(node.getId());
    if (failureDetector.isAvailable(node))     nodes.add(node);
 else {
      pipelineData.addFailedNode(node);
      failedNodes.add(node.getId());
      if (logger.isDebugEnabled()) {
        logger.debug(String.format("Key %s Node %d down",ByteUtils.toHexString(key.get()),node.getId()));
      }
    }
  }
  if (nodes.size() < required) {
    throw new InsufficientOperationalNodesException("Only " + nodes.size() + " nodes up in preference list "+ allNodes+ ", but "+ required+ " required. Nodes down: "+ failedNodes);
  }
  return nodes;
}
