{
  System.out.println("*********** testing get all ***********");
  Map<ByteArray,Versioned<byte[]>> expected=new java.util.HashMap<ByteArray,Versioned<byte[]>>();
  ByteArray key1, key2;
  Versioned<byte[]> value1, value2;
  key1=generateRandomKeys(50);
  value1=generateVersionedValue(100);
  try {
    this.rocksDbStore.put(key1,value1,null);
  }
 catch (  PersistenceFailureException pfe) {
    Assert.fail("Could not do a put. Unexpectedlt getting exception - " + pfe.getMessage());
  }
  expected.put(key1,value1);
  key2=generateRandomKeys(50);
  value2=generateVersionedValue(100);
  try {
    this.rocksDbStore.put(key2,value2,null);
  }
 catch (  PersistenceFailureException pfe) {
    Assert.fail("Could not do a put. Unexpectedlt getting exception - " + pfe.getMessage());
  }
  expected.put(key2,value2);
  Map<ByteArray,List<Versioned<byte[]>>> found=null;
  try {
    found=this.rocksDbStore.getAll(expected.keySet(),null);
  }
 catch (  PersistenceFailureException pfe) {
    Assert.fail("Get all operation did not succeed for some reason - " + pfe.getMessage());
  }
  if (found.size() == 0) {
    Assert.fail("GetAll returned an empty value unexpectedly");
  }
  for (  ByteArray key : found.keySet()) {
    Versioned<byte[]> value=found.get(key).get(0);
    if (ByteUtils.compare(value.getValue(),expected.get(key).getValue()) != 0) {
      Assert.fail("The found value and expected value dont match!");
    }
  }
}
