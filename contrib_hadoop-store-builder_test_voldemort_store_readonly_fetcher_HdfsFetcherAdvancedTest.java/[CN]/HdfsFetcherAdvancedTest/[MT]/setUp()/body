{
  cleanUp();
  testSourceDir=createTempDir();
  testDestDir=testSourceDir;
  indexFileName="0_0.index";
  File indexFile=new File(testSourceDir,indexFileName);
  byte[] indexBytes=TestUtils.randomBytes(VoldemortConfig.DEFAULT_FETCHER_BUFFER_SIZE * 3);
  FileUtils.writeByteArrayToFile(indexFile,indexBytes);
  source=new Path(indexFile.getAbsolutePath());
  checksumCalculated=calculateCheckSumForFile(source);
  String sourceString=testSourceDir.getAbsolutePath();
  String finalIndexFileName=indexFileName;
  if (isCompressed) {
    testCompressedSourceDir=new File(testSourceDir.getAbsolutePath() + "_compressed");
    Utils.mkdirs(testCompressedSourceDir);
    File compressedIndexFile=new File(testCompressedSourceDir,indexFileName + ".gz");
    gzipFile(indexFile.getAbsolutePath(),compressedIndexFile.getAbsolutePath());
    source=new Path(compressedIndexFile.getAbsolutePath());
    sourceString=testCompressedSourceDir.getAbsolutePath();
    finalIndexFileName+=".gz";
  }
  VoldemortConfig config=new VoldemortConfig(-1,"");
  config.setReadOnlyFetchRetryCount(3);
  config.setReadOnlyFetchRetryDelayMs(1000);
  config.setReadOnlyStatsFileEnabled(true);
  config.setReadOnlyMaxVersionsStatsFile(50);
  fetcher=new HdfsFetcher(config);
  fs=source.getFileSystem(new Configuration());
  HdfsPathInfo hdfsPathInfo=new HdfsPathInfo(Lists.newArrayList(new HdfsDirectory(fs,source,config)));
  File destination=new File(testDestDir.getAbsolutePath() + "1");
  stats=new HdfsCopyStats(sourceString,destination,enableStatsFile,5,false,hdfsPathInfo);
  copyLocation=new File(destination,finalIndexFileName);
  Utils.mkdirs(destination);
  buffer=new byte[VoldemortConfig.DEFAULT_FETCHER_BUFFER_SIZE];
}
