{
  OptionParser parser=new OptionParser();
  parser.accepts("help","print usage information");
  parser.accepts("stores","[REQUIRED] path to stores xml config file").withRequiredArg().describedAs("stores.xml");
  parser.accepts("cluster","[REQUIRED] path to cluster xml config file").withRequiredArg().describedAs("cluster.xml");
  parser.accepts("other-cluster","Cluster to compare with").withRequiredArg().describedAs("targetCluster.xml");
  parser.accepts("store-name","[REQUIRED] store name").withRequiredArg().describedAs("store name");
  OptionSet options=parser.parse(args);
  if (options.has("help")) {
    parser.printHelpOn(System.out);
    System.exit(0);
  }
  Set<String> missing=CmdUtils.missing(options,"store-name","cluster","stores");
  if (missing.size() > 0) {
    System.err.println("Missing required arguments: " + Joiner.on(", ").join(missing));
    parser.printHelpOn(System.err);
    System.exit(1);
  }
  String clusterFile=(String)options.valueOf("cluster");
  String storesFile=(String)options.valueOf("stores");
  String storeName=(String)options.valueOf("store-name");
  try {
    Cluster cluster=new ClusterMapper().readCluster(new BufferedReader(new FileReader(clusterFile)));
    List<StoreDefinition> stores=new StoreDefinitionsMapper().readStoreList(new BufferedReader(new FileReader(storesFile)));
    StoreDefinition storeDef=null;
    for (    StoreDefinition def : stores) {
      if (def.getName().equals(storeName))       storeDef=def;
    }
    if (storeDef == null)     Utils.croak("No store found with name \"" + storeName + "\"");
    RoutingStrategy routingStrategy=new RoutingStrategyFactory().updateRoutingStrategy(storeDef,cluster);
    ClusterViewer clusterViewer=new ClusterViewer(cluster,storeDef,routingStrategy);
    System.out.println("Original cluster: ");
    clusterViewer.view();
    if (options.has("other-cluster")) {
      String otherClusterFile=(String)options.valueOf("other-cluster");
      Cluster otherCluster=new ClusterMapper().readCluster(new BufferedReader(new FileReader(otherClusterFile)));
      RoutingStrategy otherRoutingStrategy=new RoutingStrategyFactory().updateRoutingStrategy(storeDef,otherCluster);
      System.out.println("New cluster: ");
      clusterViewer.view(otherCluster,otherRoutingStrategy);
      clusterViewer.compareMapping(otherCluster,otherRoutingStrategy);
    }
  }
 catch (  FileNotFoundException e) {
    Utils.croak(e.getMessage());
  }
}
