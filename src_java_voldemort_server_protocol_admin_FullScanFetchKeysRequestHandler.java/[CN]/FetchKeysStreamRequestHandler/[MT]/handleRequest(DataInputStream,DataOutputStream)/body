{
  if (!keyIterator.hasNext()) {
    return StreamRequestHandlerState.COMPLETE;
  }
  long startNs=System.nanoTime();
  ByteArray key=keyIterator.next();
  reportStorageOpTime(startNs);
  throttler.maybeThrottle(key.length());
  boolean keyAccepted=false;
  if (!fetchOrphaned) {
    if (keyIsNeeded(key.get()) && filter.accept(key,null)) {
      keyAccepted=true;
    }
  }
 else {
    if (!StoreInstance.checkKeyBelongsToNode(key.get(),nodeId,initialCluster,storeDef)) {
      keyAccepted=true;
    }
  }
  if (keyAccepted) {
    keyFetched(key.get());
    VAdminProto.FetchPartitionEntriesResponse.Builder response=VAdminProto.FetchPartitionEntriesResponse.newBuilder();
    response.setKey(ProtoUtils.encodeBytes(key));
    Message message=response.build();
    sendMessage(outputStream,message);
  }
  scanned++;
  if (0 == scanned % STAT_RECORDS_INTERVAL) {
    progressInfoMessage("Fetch keys (progress)");
  }
  if (keyIterator.hasNext() && !fetchedEnough()) {
    return StreamRequestHandlerState.WRITING;
  }
 else {
    logger.info("Finished fetch keys for store '" + storageEngine.getName() + "' with replica to partition mapping "+ replicaToPartitionList);
    progressInfoMessage("Fetch keys (end of scan)");
    return StreamRequestHandlerState.COMPLETE;
  }
}
