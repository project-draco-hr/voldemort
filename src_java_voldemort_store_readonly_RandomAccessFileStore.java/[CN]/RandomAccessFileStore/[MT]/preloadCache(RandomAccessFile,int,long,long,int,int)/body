{
  long mid=(low + high) / 2;
  if (currentDepth < maxDepth && low <= mid - 1)   preloadCache(index,2 * cacheIndex + 1,low,mid - 1,currentDepth + 1,maxDepth);
  byte[] key=new byte[KEY_HASH_SIZE];
  readFrom(index,mid * INDEX_ENTRY_SIZE,key);
  this.keyCache[cacheIndex]=key;
  if (currentDepth < maxDepth && mid + 1 <= high)   preloadCache(index,2 * cacheIndex + 2,mid + 1,high,currentDepth + 1,maxDepth);
}
