{
  byte[] keyMd5=ByteUtils.md5(key);
  byte[] keyBuffer=new byte[KEY_HASH_SIZE];
  long low=0;
  long high=indexFileSize / INDEX_ENTRY_SIZE - 1;
  int cacheIndex=0;
  int depth=0;
  while (low <= high) {
    depth++;
    long mid=(low + high) / 2;
    byte[] foundKey=readKey(index,mid * INDEX_ENTRY_SIZE,keyBuffer,depth,cacheIndex);
    int cmp=ByteUtils.compare(foundKey,keyMd5);
    if (cmp == 0) {
      index.seek(mid * INDEX_ENTRY_SIZE + KEY_HASH_SIZE);
      return index.readLong();
    }
 else     if (cmp > 0) {
      high=mid - 1;
      cacheIndex=2 * cacheIndex + 1;
    }
 else     if (cmp < 0) {
      low=mid + 1;
      cacheIndex=2 * cacheIndex + 2;
    }
  }
  return -1;
}
