{
  if (!readingChunks) {
    HttpRequest request=this.request=(HttpRequest)e.getMessage();
    byte operationType=getOperationType(this.request.getMethod());
    String requestURI=this.request.getUri();
    logger.info(requestURI);
    if (request.isChunked()) {
      readingChunks=true;
    }
 else {
      VoldemortRequestWrapper requestObject=parseRequest(requestURI,e,operationType);
      if (requestObject == null) {
        return;
      }
switch (operationType) {
case VoldemortOpCode.GET_OP_CODE:
        this.fatClientWrapper.submitGetRequest(requestObject,e);
      break;
case VoldemortOpCode.PUT_OP_CODE:
    this.fatClientWrapper.submitPutRequest(requestObject,e);
  break;
default :
String errorMessage="Illegal operation.";
logger.error(errorMessage);
RESTErrorHandler.handleError(BAD_REQUEST,e,isKeepAlive(request),errorMessage);
return;
}
}
}
 else {
HttpChunk chunk=(HttpChunk)e.getMessage();
if (chunk.isLast()) {
readingChunks=false;
buf.append("END OF CONTENT\r\n");
HttpChunkTrailer trailer=(HttpChunkTrailer)chunk;
if (!trailer.getHeaderNames().isEmpty()) {
buf.append("\r\n");
for (String name : trailer.getHeaderNames()) {
for (String value : trailer.getHeaders(name)) {
buf.append("TRAILING HEADER: " + name + " = "+ value+ "\r\n");
}
}
buf.append("\r\n");
}
}
 else {
buf.append("CHUNK: " + chunk.getContent().toString(CharsetUtil.UTF_8) + "\r\n");
}
}
}
