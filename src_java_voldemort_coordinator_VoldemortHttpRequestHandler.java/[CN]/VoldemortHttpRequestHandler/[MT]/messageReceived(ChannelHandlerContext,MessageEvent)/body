{
  if (!readingChunks) {
    HttpRequest request=this.request=(HttpRequest)e.getMessage();
    String requestURI=this.request.getUri();
    if (logger.isDebugEnabled()) {
      logger.debug("Request URI: " + requestURI);
    }
    if (request.isChunked()) {
      readingChunks=true;
    }
 else {
      long startTimeStampInNs=System.nanoTime();
      CompositeVoldemortRequest<ByteArray,byte[]> requestObject=parseRequest(requestURI,e,this.request.getMethod());
      String storeName=getStoreName(requestURI);
      FatClientWrapper fatClientWrapper=null;
      if (storeName != null) {
        if (storeName.equalsIgnoreCase(SCHEMATA)) {
          String queryStore=ByteUtils.getString(requestObject.getKey().get(),"UTF-8");
          fatClientWrapper=this.fatClientMap.get(queryStore);
          if (queryStore == null || fatClientWrapper == null) {
            this.errorStats.reportException(new IllegalArgumentException());
            handleBadRequest(e,"Invalid store name. Critical error.");
            return;
          }
          fatClientWrapper.submitGetSchemataRequest(e);
          return;
        }
 else {
          fatClientWrapper=this.fatClientMap.get(storeName);
        }
      }
      if (storeName == null || fatClientWrapper == null) {
        this.errorStats.reportException(new IllegalArgumentException());
        handleBadRequest(e,"Invalid store name. Critical error.");
        return;
      }
      if (requestObject == null) {
        this.errorStats.reportException(new IllegalArgumentException());
        handleBadRequest(e,"Illegal request.");
        return;
      }
switch (requestObject.getOperationType()) {
case VoldemortOpCode.GET_OP_CODE:
        if (logger.isDebugEnabled()) {
          logger.debug("Incoming get request");
        }
      fatClientWrapper.submitGetRequest(requestObject,e,startTimeStampInNs);
    break;
case VoldemortOpCode.GET_ALL_OP_CODE:
  fatClientWrapper.submitGetAllRequest(requestObject,e,storeName,startTimeStampInNs);
break;
case VoldemortOpCode.PUT_OP_CODE:
if (logger.isDebugEnabled()) {
logger.debug("Incoming put request");
}
fatClientWrapper.submitPutRequest(requestObject,e,startTimeStampInNs);
break;
case VoldemortOpCode.DELETE_OP_CODE:
fatClientWrapper.submitDeleteRequest(requestObject,e,startTimeStampInNs);
break;
default :
String errorMessage="Illegal operation.";
logger.error(errorMessage);
RESTErrorHandler.handleError(BAD_REQUEST,e,errorMessage);
return;
}
}
}
 else {
HttpChunk chunk=(HttpChunk)e.getMessage();
if (chunk.isLast()) {
readingChunks=false;
}
}
}
