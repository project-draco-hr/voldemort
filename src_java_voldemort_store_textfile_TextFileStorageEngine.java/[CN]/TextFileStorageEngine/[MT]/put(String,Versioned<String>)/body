{
  ArrayList<String> deleteList=new ArrayList<String>();
  StoreUtils.assertValidKey(key);
  File[] files=this.directory.listFiles();
  for (  File file : files) {
    if (file.getName().startsWith(key)) {
      VectorClock clock=getVersion(file,key);
      if (null != clock) {
        if (clock.compare(value.getVersion()) == Occured.AFTER)         throw new ObsoleteVersionException("A successor version to this exists.");
 else         if (clock.compare(value.getVersion()) == Occured.BEFORE) {
          deleteList.add(file.getAbsolutePath());
        }
      }
    }
  }
  VectorClock clock=(VectorClock)value.getVersion();
  String path=this.directory.getAbsolutePath() + File.separator + key+ "-"+ new String(Hex.encodeHex(clock.toBytes()))+ ".version";
  File newFile=new File(path);
  try {
    if (!newFile.createNewFile())     throw new ObsoleteVersionException("File " + path + " already exists.");
    FileUtils.writeStringToFile(newFile,value.getValue(),"UTF-8");
  }
 catch (  IOException e) {
    throw new VoldemortException(e);
  }
  for (  String file : deleteList) {
    try {
      FileDeleteStrategy.FORCE.delete(new File(file));
    }
 catch (    IOException e) {
      logger.warn("Failed to Delete File:" + file);
    }
  }
}
