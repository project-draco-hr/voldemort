{
  try {
    for (int i=0; i < keys.length; i++) {
      if (isFound[i])       testPutRequest(keys[i],values[i],null,versions[i],null,false);
    }
    ByteArrayOutputStream getAllRequest=new ByteArrayOutputStream();
    this.clientWireFormat.writeGetAllRequest(new DataOutputStream(getAllRequest),storeName,Arrays.asList(keys),transforms,RequestRoutingType.NORMAL);
    testIsCompleteRequest(getAllRequest);
    ByteArrayOutputStream getAllResponse=handleRequest(getAllRequest);
    Map<ByteArray,List<Versioned<byte[]>>> found=this.clientWireFormat.readGetAllResponse(inputStream(getAllResponse));
    for (int i=0; i < keys.length; i++) {
      if (isFound[i]) {
        assertTrue(keys[i] + " is not in the found set.",found.containsKey(keys[i]));
        assertEquals(1,found.get(keys[i]).size());
        Versioned<byte[]> versioned=found.get(keys[i]).get(0);
        assertEquals(versions[i],versioned.getVersion());
        assertTrue(Arrays.equals(values[i],versioned.getValue()));
      }
 else {
        assertTrue(keys[i] + " is in the found set but should not be.",!found.containsKey(keys[i]));
      }
    }
  }
  finally {
    this.store.deleteAll();
  }
}
