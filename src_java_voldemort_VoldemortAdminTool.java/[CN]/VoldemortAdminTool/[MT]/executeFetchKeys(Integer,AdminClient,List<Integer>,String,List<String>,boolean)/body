{
  List<StoreDefinition> storeDefinitionList=adminClient.getRemoteStoreDefList(nodeId).getValue();
  Map<String,StoreDefinition> storeDefinitionMap=Maps.newHashMap();
  for (  StoreDefinition storeDefinition : storeDefinitionList) {
    storeDefinitionMap.put(storeDefinition.getName(),storeDefinition);
  }
  File directory=new File(outputDir);
  if (directory.exists() || directory.mkdir()) {
    List<String> stores=storeNames;
    if (stores == null) {
      stores=Lists.newArrayList();
      stores.addAll(storeDefinitionMap.keySet());
    }
    for (    String store : stores) {
      System.out.println("Fetching keys in partitions " + Joiner.on(", ").join(partitionIdList) + " of "+ store);
      Iterator<ByteArray> keyIterator=adminClient.fetchKeys(nodeId,store,partitionIdList,null,false);
      File outputFile=new File(directory,store + ".keys");
      if (useAscii) {
        StoreDefinition storeDefinition=storeDefinitionMap.get(store);
        writeKeysAscii(keyIterator,outputFile,storeDefinition);
      }
 else {
        writeKeysBinary(keyIterator,outputFile);
      }
      System.out.println("Fetched keys from " + store + " to "+ outputFile);
    }
  }
 else {
    Utils.croak("Can't find or create directory " + outputDir);
  }
}
