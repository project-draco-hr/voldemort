{
  BufferedWriter writer=null;
  CompressionStrategy keyCompressionStrategy=null;
  CompressionStrategy valueCompressionStrategy=null;
  if (outputFile != null) {
    writer=new BufferedWriter(new FileWriter(outputFile));
  }
 else {
    writer=new BufferedWriter(new OutputStreamWriter(System.out));
  }
  SerializerFactory serializerFactory=new DefaultSerializerFactory();
  StringWriter stringWriter=new StringWriter();
  JsonGenerator generator=new JsonFactory(new ObjectMapper()).createJsonGenerator(stringWriter);
  SerializerDefinition keySerializerDef=storeDefinition.getKeySerializer();
  if (null != keySerializerDef && keySerializerDef.hasCompression()) {
    keyCompressionStrategy=new CompressionStrategyFactory().get(keySerializerDef.getCompression());
  }
  SerializerDefinition valueSerializerDef=storeDefinition.getValueSerializer();
  if (null != valueSerializerDef && valueSerializerDef.hasCompression()) {
    valueCompressionStrategy=new CompressionStrategyFactory().get(valueSerializerDef.getCompression());
  }
  @SuppressWarnings("unchecked") Serializer<Object> keySerializer=(Serializer<Object>)serializerFactory.getSerializer(storeDefinition.getKeySerializer());
  @SuppressWarnings("unchecked") Serializer<Object> valueSerializer=(Serializer<Object>)serializerFactory.getSerializer(storeDefinition.getValueSerializer());
  try {
    while (iterator.hasNext()) {
      Pair<ByteArray,Versioned<byte[]>> kvPair=iterator.next();
      byte[] keyBytes=kvPair.getFirst().get();
      VectorClock version=(VectorClock)kvPair.getSecond().getVersion();
      byte[] valueBytes=kvPair.getSecond().getValue();
      Object keyObject=keySerializer.toObject((null == keyCompressionStrategy) ? keyBytes : keyCompressionStrategy.inflate(keyBytes));
      Object valueObject=valueSerializer.toObject((null == valueCompressionStrategy) ? valueBytes : valueCompressionStrategy.inflate(valueBytes));
      generator.writeObject(keyObject);
      stringWriter.write(' ');
      stringWriter.write(version.toString());
      generator.writeObject(valueObject);
      StringBuffer buf=stringWriter.getBuffer();
      if (buf.charAt(0) == ' ') {
        buf.setCharAt(0,'\n');
      }
      writer.write(buf.toString());
      buf.setLength(0);
    }
    writer.write('\n');
  }
  finally {
    writer.close();
  }
}
