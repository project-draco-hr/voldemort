{
  List<StoreDefinition> storeDefinitionList=adminClient.getRemoteStoreDefList(nodeId).getValue();
  Map<String,StoreDefinition> storeDefinitionMap=Maps.newHashMap();
  for (  StoreDefinition storeDefinition : storeDefinitionList) {
    storeDefinitionMap.put(storeDefinition.getName(),storeDefinition);
  }
  File directory=new File(outputDir);
  if (directory.exists() || directory.mkdir()) {
    List<String> stores=storeNames;
    if (stores == null) {
      stores=Lists.newArrayList();
      stores.addAll(storeDefinitionMap.keySet());
    }
    for (    String store : stores) {
      System.out.println("Fetching entries in partitions " + Joiner.on(", ").join(partitionIdList) + " of "+ store);
      Iterator<Pair<ByteArray,Versioned<byte[]>>> entriesIterator=adminClient.fetchEntries(nodeId,store,partitionIdList,null);
      File outputFile=new File(directory,store + ".entries");
      if (useAscii) {
        StoreDefinition storeDefinition=storeDefinitionMap.get(store);
        writeEntriesAscii(entriesIterator,outputFile,storeDefinition);
      }
 else {
        writeEntriesBinary(entriesIterator,outputFile);
      }
    }
  }
}
