{
  BufferedWriter writer=null;
  CompressionStrategy keysCompressionStrategy=null;
  if (outputFile != null) {
    writer=new BufferedWriter(new FileWriter(outputFile));
  }
 else {
    writer=new BufferedWriter(new OutputStreamWriter(System.out));
  }
  SerializerDefinition serializerDef=storeDefinition.getKeySerializer();
  if (null != serializerDef && serializerDef.hasCompression()) {
    keysCompressionStrategy=new CompressionStrategyFactory().get(serializerDef.getCompression());
  }
  SerializerFactory serializerFactory=new DefaultSerializerFactory();
  StringWriter stringWriter=new StringWriter();
  JsonGenerator generator=new JsonFactory(new ObjectMapper()).createJsonGenerator(stringWriter);
  @SuppressWarnings("unchecked") Serializer<Object> serializer=(Serializer<Object>)serializerFactory.getSerializer(storeDefinition.getKeySerializer());
  try {
    while (keyIterator.hasNext()) {
      byte[] keyBytes=keyIterator.next().get();
      Object keyObject=serializer.toObject((null == keysCompressionStrategy) ? keyBytes : keysCompressionStrategy.inflate(keyBytes));
      generator.writeObject(keyObject);
      StringBuffer buf=stringWriter.getBuffer();
      if (buf.charAt(0) == ' ') {
        buf.setCharAt(0,'\n');
      }
      writer.write(buf.toString());
      buf.setLength(0);
    }
    writer.write('\n');
  }
  finally {
    writer.close();
  }
}
