{
  final long startTime=1445468640;
  final int delay=1000;
  Time mockTime=mock(Time.class);
  when(mockTime.milliseconds()).thenReturn(startTime);
  RequestCounter rc=new RequestCounter("tests.StatsTest.statsExpireOnTime",delay,mockTime);
  rc.addRequest(100 * NS_PER_MS,1,200,0,1);
  rc.addRequest(50 * NS_PER_MS,0,1000,0,2);
  assertEquals(1,rc.getNumEmptyResponses());
  assertEquals(100,rc.getMaxLatencyInMs());
  assertEquals(75d,rc.getAverageTimeInMs(),0.0f);
  assertEquals(1000,rc.getMaxValueSizeInBytes());
  assertEquals(3,rc.getGetAllAggregatedCount());
  when(mockTime.milliseconds()).thenReturn(startTime + delay * 2 + 1);
  assertEquals(0,rc.getNumEmptyResponses());
  assertEquals(0,rc.getMaxLatencyInMs());
  assertEquals(Double.NaN,rc.getAverageTimeInMs(),0.0f);
  assertEquals(0,rc.getMaxValueSizeInBytes());
  assertEquals(0,rc.getGetAllAggregatedCount());
}
