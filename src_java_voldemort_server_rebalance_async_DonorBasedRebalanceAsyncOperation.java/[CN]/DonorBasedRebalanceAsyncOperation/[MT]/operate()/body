{
  adminClient=RebalanceUtils.createTempAdminClient(voldemortConfig,metadataStore.getCluster(),voldemortConfig.getMaxParallelStoresRebalancing());
  final CopyOnWriteArrayList<Exception> failures=new CopyOnWriteArrayList<Exception>();
  final ConcurrentLinkedQueue<String> storesRebalancing=new ConcurrentLinkedQueue<String>();
  final ConcurrentLinkedQueue<String> storesCompleted=new ConcurrentLinkedQueue<String>();
  final int totalStoresCount=storeToNodePartitionMapping.keySet().size();
  try {
    for (    final String storeName : ImmutableList.copyOf(storeToNodePartitionMapping.keySet())) {
      executors.submit(new Runnable(){
        public void run(){
          try {
            Set<Pair<Integer,HashMap<Integer,List<Integer>>>> stealerNodeToMappingTuples=storeToNodePartitionMapping.get(storeName);
            boolean isReadOnlyStore=metadataStore.getStoreDef(storeName).getType().compareTo(ReadOnlyStorageConfiguration.TYPE_NAME) == 0;
            storesRebalancing.add(storeName);
            updateStatus(getHeader(stealInfos) + "Completed working on " + storesCompleted.size()+ " out of "+ totalStoresCount+ " stores. Still rebalancing "+ storesRebalancing);
            rebalanceStore(storeName,adminClient,stealerNodeToMappingTuples,isReadOnlyStore);
            for (            Pair<Integer,HashMap<Integer,List<Integer>>> entry : stealerNodeToMappingTuples) {
              adminClient.deleteStoreRebalanceState(metadataStore.getNodeId(),entry.getFirst(),storeName);
            }
            storesRebalancing.remove(storeName);
            storesCompleted.add(storeName);
            updateStatus(getHeader(stealInfos) + "Completed working on " + storesCompleted.size()+ " out of "+ totalStoresCount+ " stores. Still rebalancing "+ storesRebalancing);
          }
 catch (          Exception e) {
            logger.error(getHeader(stealInfos) + "Error while rebalancing for store " + storeName+ " - "+ e.getMessage(),e);
            failures.add(e);
          }
        }
      }
);
    }
    waitForShutdown();
    if (storesCompleted.size() != totalStoresCount) {
      logger.error(getHeader(stealInfos) + "Could not complete all stores. Completed stores - " + storesCompleted);
      throw new VoldemortRebalancingException(getHeader(stealInfos) + "Could not complete all stores. Completed stores - " + storesCompleted,failures);
    }
 else {
      logger.info(getHeader(stealInfos) + "Rebalance of " + stealInfos+ " completed successfully for all "+ totalStoresCount+ " stores");
    }
  }
  finally {
    adminClient.stop();
    adminClient=null;
    for (    RebalancePartitionsInfo stealInfo : stealInfos) {
      rebalancer.releaseRebalancingPermit(stealInfo.getStealerId());
    }
  }
}
