{
  boolean updated=voldemortStore.applyUpdate(new UpdateAction<Object,Object>(){
    @Override public void update(    StoreClient<Object,Object> storeClient){
      long startNs=System.nanoTime();
      Versioned<Object> vs=storeClient.get(key);
      boolean noCurrentValue=(vs == null);
      if (localMode) {
        VectorClock clock=(vs == null) ? new VectorClock() : (VectorClock)vs.getVersion();
        clock=clock.incremented(1,System.currentTimeMillis());
        Versioned<Object> versionedNewValue=new Versioned<Object>(newValue,clock);
        ((DefaultStoreClient<Object,Object>)storeClient).put(key,versionedNewValue,transforms);
      }
 else {
        storeClient.put(key,newValue,transforms);
      }
      long endNs=System.nanoTime();
      measurement.recordLatency(Operations.Mixed.getOpString(),(int)((endNs - startNs) / Time.NS_PER_MS));
      if (noCurrentValue) {
        measurement.recordWarningCode(Operations.Mixed.getOpString(),WarningCode.NO_CURRENT_VALUE.ordinal());
      }
    }
  }
);
  ReturnCode res=ReturnCode.Error;
  if (updated) {
    res=ReturnCode.Ok;
  }
  measurement.recordReturnCode(Operations.Mixed.getOpString(),res.ordinal());
}
