{
  this.nodes=ImmutableList.of(new Node(1,"test1",1,1,1,ImmutableList.of(1,2,3)),new Node(2,"test1",2,2,2,ImmutableList.of(3,5,6)),new Node(3,"test1",3,3,3,ImmutableList.of(7,8,9)),new Node(4,"test1",4,4,4,ImmutableList.of(10,11,12)));
  this.cluster=new Cluster(clusterName,nodes);
  this.time=SystemTime.INSTANCE;
  Map<Integer,Store<ByteArray,byte[]>> stores=new HashMap<Integer,Store<ByteArray,byte[]>>();
  for (  Node node : nodes) {
    stores.put(node.getId(),new Store<ByteArray,byte[]>(){
      public void close() throws VoldemortException {
      }
      public boolean delete(      ByteArray key,      Version version) throws VoldemortException {
        return false;
      }
      public List<Versioned<byte[]>> get(      ByteArray key) throws VoldemortException {
        return null;
      }
      public Map<ByteArray,List<Versioned<byte[]>>> getAll(      Iterable<ByteArray> keys) throws VoldemortException {
        return null;
      }
      public Object getCapability(      StoreCapabilityType capability){
        return null;
      }
      public String getName(){
        return null;
      }
      public void put(      ByteArray key,      Versioned<byte[]> value) throws VoldemortException {
      }
    }
);
  }
  FailureDetectorConfig config=new BasicFailureDetectorConfig(failureDetectorClass.getName(),BANNAGE_TIME,stores,time);
  failureDetector=FailureDetectorUtils.create(config);
}
