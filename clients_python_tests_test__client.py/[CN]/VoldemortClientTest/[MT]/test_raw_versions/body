def test_raw_versions(self):
    '\n        Tests the put_maybe() method in raw mode.\n        '
    s = self._reinit_raw_client()
    v1 = s.put('a', '1')
    self.assertTrue((v1 is not None))
    v2 = s.put('a', '2')
    self.assertTrue((v2 is not None))
    self.assertFalse(_vector_clock_equal(v2, v1))
    v3 = s.put('a', '3')
    self.assertTrue((v3 is not None))
    self.assertFalse(_vector_clock_equal(v3, v1))
    self.assertFalse(_vector_clock_equal(v3, v2))
    resp = s.get('a')
    self.assertEquals(resp[0][0], '3')
    self.assertRaises(VoldemortException, s.put, 'a', '4', version=v2)
    v4 = s.maybe_put('a', '4', version=v2)
    self.assertTrue((v4 is None))
    v4 = s.put('a', '4', version=v3)
    self.assertTrue((v4 is not None))
    self.assertFalse(_vector_clock_equal(v4, v1))
    self.assertFalse(_vector_clock_equal(v4, v2))
    self.assertFalse(_vector_clock_equal(v4, v2))
    v5 = s.maybe_put('a', '5', version=v4)
    self.assertTrue((v5 is not None))
    self.assertFalse(_vector_clock_equal(v5, v1))
    self.assertFalse(_vector_clock_equal(v5, v2))
    self.assertFalse(_vector_clock_equal(v5, v3))
    self.assertFalse(_vector_clock_equal(v5, v4))
    resp = s.get('a')
    self.assertEquals(resp[0][0], '5')
    self.assertTrue(_vector_clock_equal(resp[0][1], v5))
    s.delete('a', version=v3)
    resp = s.get('a')
    self.assertEquals(len(resp), 1)
    self.assertEquals(resp[0][0], '5')
    self.assertTrue(_vector_clock_equal(resp[0][1], v5))
    s.delete('a', version=v5)
    resp = s.get('a')
    self.assertEquals(resp, [])
