{
  super.setConf(conf);
  this.mapper.configure(conf);
  List<StoreDefinition> storeDefs=new StoreDefinitionsMapper().readStoreList(new StringReader(conf.get("stores.xml")));
  if (storeDefs.size() != 1)   throw new IllegalStateException("Expected to find only a single store, but found multiple!");
  this.storeDef=storeDefs.get(0);
  keySerializerDefinition=getStoreDef().getKeySerializer();
  valueSerializerDefinition=getStoreDef().getValueSerializer();
  try {
    SerializerFactory factory=new DefaultSerializerFactory();
    if (conf.get("serializer.factory") != null) {
      factory=(SerializerFactory)Class.forName(conf.get("serializer.factory")).newInstance();
    }
    keySerializer=factory.getSerializer(keySerializerDefinition);
    valueSerializer=factory.getSerializer(valueSerializerDefinition);
    keyField=conf.get(VoldemortBuildAndPushJob.AVRO_KEY_FIELD);
    valField=conf.get(VoldemortBuildAndPushJob.AVRO_VALUE_FIELD);
    keySchema=conf.get("avro.key.schema");
    valSchema=conf.get("avro.val.schema");
    if (keySerializerDefinition.getName().equals(DefaultSerializerFactory.AVRO_GENERIC_TYPE_NAME)) {
      keySerializer=new AvroGenericSerializer(keySchema);
      valueSerializer=new AvroGenericSerializer(valSchema);
    }
 else {
      if (keySerializerDefinition.hasVersion()) {
        Map<Integer,String> versions=new HashMap<Integer,String>();
        for (        Map.Entry<Integer,String> entry : keySerializerDefinition.getAllSchemaInfoVersions().entrySet())         versions.put(entry.getKey(),entry.getValue());
        keySerializer=new AvroVersionedGenericSerializer(versions);
      }
 else       keySerializer=new AvroVersionedGenericSerializer(keySerializerDefinition.getCurrentSchemaInfo());
      if (valueSerializerDefinition.hasVersion()) {
        Map<Integer,String> versions=new HashMap<Integer,String>();
        for (        Map.Entry<Integer,String> entry : valueSerializerDefinition.getAllSchemaInfoVersions().entrySet())         versions.put(entry.getKey(),entry.getValue());
        valueSerializer=new AvroVersionedGenericSerializer(versions);
      }
 else       valueSerializer=new AvroVersionedGenericSerializer(valueSerializerDefinition.getCurrentSchemaInfo());
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
