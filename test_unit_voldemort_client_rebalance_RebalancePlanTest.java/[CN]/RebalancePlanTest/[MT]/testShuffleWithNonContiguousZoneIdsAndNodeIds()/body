{
  RebalancePlan rebalancePlan;
  rebalancePlan=ClusterTestUtils.makePlan(z1z3Current,z1z3Stores,z1z3Shuffle,z1z3Stores);
  assertEquals(rebalancePlan.getPlan().size(),1);
  assertTrue(rebalancePlan.getPrimariesMoved() > 0);
  assertTrue(rebalancePlan.getPartitionStoresMoved() > 0);
  assertEquals(rebalancePlan.getPartitionStoresMovedXZone(),0);
  MoveMap zoneMoves=rebalancePlan.getZoneMoveMap();
  assertTrue(zoneMoves.get(1,1) > 0);
  assertTrue(zoneMoves.get(1,3) == 0);
  assertTrue(zoneMoves.get(3,1) == 0);
  assertTrue(zoneMoves.get(3,3) > 0);
  rebalancePlan=ClusterTestUtils.makePlan(z1z3z5Current,z1z3z5Stores,z1z3z5Shuffle,z1z3z5Stores);
  assertEquals(rebalancePlan.getPlan().size(),1);
  assertTrue(rebalancePlan.getPrimariesMoved() > 0);
  assertTrue(rebalancePlan.getPartitionStoresMoved() > 0);
  assertEquals(rebalancePlan.getPartitionStoresMovedXZone(),0);
  zoneMoves=rebalancePlan.getZoneMoveMap();
  assertTrue(zoneMoves.get(1,1) > 0);
  assertTrue(zoneMoves.get(1,3) == 0);
  assertTrue(zoneMoves.get(1,5) == 0);
  assertTrue(zoneMoves.get(3,1) == 0);
  assertTrue(zoneMoves.get(3,3) > 0);
  assertTrue(zoneMoves.get(3,5) == 0);
  assertTrue(zoneMoves.get(5,1) == 0);
  assertTrue(zoneMoves.get(5,3) == 0);
  assertTrue(zoneMoves.get(5,5) > 0);
}
