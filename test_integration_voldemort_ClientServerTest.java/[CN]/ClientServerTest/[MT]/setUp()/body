{
  Props serverProps=new Props();
  this.tempDir=System.getProperty("java.io.tmpdir") + File.separator + new Random().nextInt(Integer.MAX_VALUE);
  assertTrue(new File(tempDir).mkdir());
  String dataDir=tempDir + File.separator + "data";
  assertTrue(new File(dataDir).mkdir());
  String metaDir=tempDir + File.separator + "meta";
  assertTrue(new File(metaDir).mkdir());
  String storesDir=tempDir + File.separator + "stores";
  assertTrue(new File(storesDir).mkdir());
  serverProps.put("voldemort.home",tempDir);
  serverProps.put("bdb.data.directory",dataDir);
  serverProps.put("metadata.directory",metaDir);
  serverProps.put("data.directory",storesDir);
  serverProps.put("node.id",0);
  serverProps.put("bdb.cache.size","50MB");
  serverProps.put("max.threads",1);
  Cluster cluster=new ClusterMapper().readCluster(new StringReader(getOneNodeClusterXml()));
  List<StoreDefinition> storeDefs=new StoreDefinitionsMapper().readStoreList(new StringReader(getSimpleStoreDefinitionsXml()));
  server=new VoldemortServer(serverProps,cluster);
  server.start();
  String storeName=storeDefs.get(0).getName();
  Node node=server.getIdentityNode();
  Store<String,String> store=new SerializingStore<String,String>(new HttpStore(storeName,node.getHost(),node.getHttpPort(),new HttpClient()),new StringSerializer(),new StringSerializer());
}
