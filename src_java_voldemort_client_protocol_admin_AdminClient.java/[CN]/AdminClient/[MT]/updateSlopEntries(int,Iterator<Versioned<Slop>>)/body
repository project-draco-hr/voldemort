{
  Node node=this.getAdminClientCluster().getNodeById(nodeId);
  SocketDestination destination=new SocketDestination(node.getHost(),node.getAdminPort(),RequestFormatType.ADMIN_PROTOCOL_BUFFERS);
  SocketAndStreams sands=pool.checkout(destination);
  DataOutputStream outputStream=sands.getOutputStream();
  DataInputStream inputStream=sands.getInputStream();
  boolean firstMessage=true;
  try {
    if (entryIterator.hasNext()) {
      while (entryIterator.hasNext()) {
        Versioned<Slop> versionedSlop=entryIterator.next();
        Slop slop=versionedSlop.getValue();
        RequestType requestType=null;
        if (slop.getOperation().equals(Operation.PUT)) {
          requestType=RequestType.PUT;
        }
 else         if (slop.getOperation().equals(Operation.DELETE)) {
          requestType=RequestType.DELETE;
        }
 else {
          logger.error("Unsupported operation. Skipping");
          continue;
        }
        VAdminProto.UpdateSlopEntriesRequest.Builder updateRequest=VAdminProto.UpdateSlopEntriesRequest.newBuilder().setStore(slop.getStoreName()).setKey(ProtoUtils.encodeBytes(slop.getKey())).setVersion(ProtoUtils.encodeClock(versionedSlop.getVersion())).setRequestType(requestType);
        if (slop.getTransforms() != null)         updateRequest.setTransform(ProtoUtils.encodeTransform(slop.getTransforms()));
        if (slop.getValue() != null)         updateRequest.setValue(ByteString.copyFrom(slop.getValue()));
        if (firstMessage) {
          ProtoUtils.writeMessage(outputStream,VAdminProto.VoldemortAdminRequest.newBuilder().setType(VAdminProto.AdminRequestType.UPDATE_SLOP_ENTRIES).setUpdateSlopEntries(updateRequest).build());
          outputStream.flush();
          firstMessage=false;
        }
 else {
          ProtoUtils.writeMessage(outputStream,updateRequest.build());
        }
      }
      ProtoUtils.writeEndOfStream(outputStream);
      outputStream.flush();
      VAdminProto.UpdateSlopEntriesResponse.Builder updateResponse=ProtoUtils.readToBuilder(inputStream,VAdminProto.UpdateSlopEntriesResponse.newBuilder());
      if (updateResponse.hasError()) {
        throwException(updateResponse.getError());
      }
    }
  }
 catch (  IOException e) {
    close(sands.getSocket());
    throw new VoldemortException(e);
  }
 finally {
    pool.checkin(destination,sands);
  }
}
