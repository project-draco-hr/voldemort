{
  HashMap<Integer,List<RebalancePartitionsInfo>> stealerNodeToPlan=groupPartitionsInfoByStealerNode(rebalancePartitionPlanList);
  int nodeId=0;
  try {
    while (nodeId < transitionCluster.getNumberOfNodes()) {
      boolean isStealerNode=false;
      if (stealerNodeToPlan.containsKey(nodeId)) {
        isStealerNode=true;
      }
      sendRebalanceStateChange(nodeId,transitionCluster,stealerNodeToPlan.get(nodeId),swapRO,changeClusterMetadata,changeRebalanceState,isStealerNode);
      completedNodeIds.add(nodeId);
      nodeId++;
    }
  }
 catch (  Exception e) {
    logger.error("Got exceptions from node " + nodeId + " while changing state");
    throw new VoldemortException("Got exceptions from node " + nodeId + " nodes while changing state");
  }
}
