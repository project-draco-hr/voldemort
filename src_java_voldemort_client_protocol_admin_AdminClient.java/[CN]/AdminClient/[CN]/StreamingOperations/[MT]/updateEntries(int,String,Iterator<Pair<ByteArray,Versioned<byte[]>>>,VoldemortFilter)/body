{
  Node node=AdminClient.this.getAdminClientCluster().getNodeById(nodeId);
  SocketDestination destination=new SocketDestination(node.getHost(),node.getAdminPort(),RequestFormatType.ADMIN_PROTOCOL_BUFFERS);
  SocketAndStreams sands=socketPool.checkout(destination);
  DataOutputStream outputStream=sands.getOutputStream();
  DataInputStream inputStream=sands.getInputStream();
  boolean firstMessage=true;
  long printStatsTimer=System.currentTimeMillis() + PRINT_STATS_INTERVAL;
  long entryCount=0;
  try {
    if (entryIterator.hasNext()) {
      while (entryIterator.hasNext()) {
        Pair<ByteArray,Versioned<byte[]>> entry=entryIterator.next();
        VAdminProto.PartitionEntry partitionEntry=VAdminProto.PartitionEntry.newBuilder().setKey(ProtoUtils.encodeBytes(entry.getFirst())).setVersioned(ProtoUtils.encodeVersioned(entry.getSecond())).build();
        VAdminProto.UpdatePartitionEntriesRequest.Builder updateRequest=VAdminProto.UpdatePartitionEntriesRequest.newBuilder().setStore(storeName).setPartitionEntry(partitionEntry);
        entryCount++;
        if (firstMessage) {
          if (filter != null) {
            updateRequest.setFilter(helperOps.encodeFilter(filter));
          }
          ProtoUtils.writeMessage(outputStream,VAdminProto.VoldemortAdminRequest.newBuilder().setType(VAdminProto.AdminRequestType.UPDATE_PARTITION_ENTRIES).setUpdatePartitionEntries(updateRequest).build());
          outputStream.flush();
          firstMessage=false;
        }
 else {
          ProtoUtils.writeMessage(outputStream,updateRequest.build());
          if (printStatsTimer <= System.currentTimeMillis() || 0 == entryCount % PRINT_STATS_THRESHOLD) {
            logger.info("UpdatePartitionEntries: fetched " + entryCount + " to node "+ nodeId+ " for store "+ storeName);
            printStatsTimer=System.currentTimeMillis() + PRINT_STATS_INTERVAL;
          }
        }
      }
      ProtoUtils.writeEndOfStream(outputStream);
      outputStream.flush();
      VAdminProto.UpdatePartitionEntriesResponse.Builder updateResponse=ProtoUtils.readToBuilder(inputStream,VAdminProto.UpdatePartitionEntriesResponse.newBuilder());
      if (updateResponse.hasError()) {
        helperOps.throwException(updateResponse.getError());
      }
    }
  }
 catch (  IOException e) {
    helperOps.close(sands.getSocket());
    throw new VoldemortException(e);
  }
 finally {
    socketPool.checkin(destination,sands);
  }
}
