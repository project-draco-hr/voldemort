{
  Map<Integer,List<Integer>> returnMap=Maps.newHashMap();
  RoutingStrategy strategy=new RoutingStrategyFactory().updateRoutingStrategy(storeDef,cluster);
  List<Integer> restoringNodePartition=cluster.getNodeById(restoringNode).getPartitionIds();
  for (  Node node : cluster.getNodes()) {
    for (    int partitionId : node.getPartitionIds()) {
      List<Integer> replicatingPartitions=strategy.getReplicatingPartitionList(partitionId);
      List<Integer> extraCopyReplicatingPartitions=Lists.newArrayList(replicatingPartitions);
      if (replicatingPartitions.size() <= 1) {
        throw new VoldemortException("Store " + storeDef.getName() + " cannot be restored from replica because replication factor = 1");
      }
      if (replicatingPartitions.removeAll(restoringNodePartition)) {
        if (replicatingPartitions.size() == 0) {
          throw new VoldemortException("Found a case where-in the overlap of " + "the node partition list results in no replicas " + "being left in replicating list");
        }
        addDonorWithZonePreference(replicatingPartitions,extraCopyReplicatingPartitions,returnMap,zoneId,cluster,storeDef);
      }
    }
  }
  return returnMap;
}
