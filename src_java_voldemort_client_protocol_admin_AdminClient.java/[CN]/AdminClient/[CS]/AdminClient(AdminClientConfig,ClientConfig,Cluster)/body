{
  Utils.notNull(adminClientConfig);
  Utils.notNull(clientConfig);
  if (clientConfig.getBootstrapUrls().length == 0) {
    throw new IllegalArgumentException("Client config does not have valid bootstrapUrls");
  }
  debugInfo="AdminClient with BootStrapUrls: " + Arrays.toString(clientConfig.getBootstrapUrls());
  this.helperOps=this.new HelperOperations();
  this.replicaOps=this.new ReplicationOperations();
  this.rpcOps=this.new RPCOperations();
  this.metadataMgmtOps=this.new MetadataManagementOperations();
  this.storeMgmtOps=this.new StoreManagementOperations();
  this.storeMntOps=this.new StoreMaintenanceOperations();
  this.bulkFetchOps=this.new BulkStreamingFetchOperations();
  this.streamingOps=this.new StreamingOperations();
  this.storeOps=this.new StoreOperations();
  this.restoreOps=this.new RestoreOperations();
  this.rebalanceOps=this.new RebalancingOperations();
  this.readonlyOps=this.new ReadOnlySpecificOperations();
  this.quotaMgmtOps=this.new QuotaManagementOperations();
  this.errorMapper=new ErrorCodeMapper();
  this.networkClassLoader=new NetworkClassLoader(Thread.currentThread().getContextClassLoader());
  this.adminClientConfig=adminClientConfig;
  this.socketPool=helperOps.createSocketPool(adminClientConfig);
  this.adminStoreClient=new AdminStoreClient(clientConfig);
  this.clusterVersion=System.currentTimeMillis();
  if (cluster != null) {
    this.currentCluster=cluster;
  }
 else {
    this.currentCluster=getClusterFromBootstrapURL(clientConfig);
  }
  Utils.notNull(this.currentCluster);
  helperOps.initSystemStoreClient(clientConfig);
}
