{
  Properties props=new Properties();
  props.setProperty(ClientConfig.BOOTSTRAP_URLS_PROPERTY,"http://localhost:8080");
  props.setProperty(ClientConfig.ROUTING_TIMEOUT_MS_PROPERTY,"1500");
  RESTClientFactory.Config mainConfig=new RESTClientFactory.Config(props,null);
  RESTClientFactory factory=new RESTClientFactory(mainConfig);
  StoreClient<String,String> clientStore=factory.getStoreClient("test");
  try {
    System.out.println("First valid put");
    clientStore.put("a","Howdy!!!!");
    System.out.println("Second valid put");
    clientStore.put("b","Partner!!!!");
    Versioned<String> versionedValue=clientStore.get("a");
    System.out.println("Received response : " + versionedValue);
    Version obsoleteVersion=((VectorClock)versionedValue.getVersion()).clone();
    System.out.println("First versioned put");
    versionedValue.setObject("New Value !!!");
    System.out.println("************* original version : " + versionedValue.getVersion());
    Version putVersion=clientStore.put("a",versionedValue);
    System.out.println("************* Updated version : " + putVersion);
    System.out.println("Obsolete put");
    Versioned<String> obsoleteVersionedValue=new Versioned<String>("Obsolete value",obsoleteVersion);
    try {
      clientStore.put("a",obsoleteVersionedValue);
      System.err.println(" **************** Should not reach this point **************** ");
    }
 catch (    Exception e) {
      System.out.println("Exception occured as expected: " + e.getMessage());
    }
    versionedValue=clientStore.get("a");
    System.out.println("Received response on the versioned put: " + versionedValue);
    System.out.println("Versioned put based on the last put ");
    Versioned<String> newVersionedPut=new Versioned<String>("Yet another value !!!",putVersion);
    clientStore.put("a",newVersionedPut);
    versionedValue=clientStore.get("a");
    System.out.println("Received response on the (second) versioned put: " + versionedValue);
    List<String> keyList=new ArrayList<String>();
    keyList.add("a");
    keyList.add("b");
    System.out.println("Received response : " + clientStore.getAll(keyList));
  }
  finally {
    factory.close();
  }
}
