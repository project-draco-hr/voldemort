{
  Node proxyDestNode=this.getMetadata().getCluster().getNodeById(proxyDestNodeId);
  SocketDestination destination=new SocketDestination(proxyDestNode.getHost(),proxyDestNode.getSocketPort(),RequestFormatType.ADMIN);
  SocketAndStreams sands=pool.checkout(destination);
  try {
    DataOutputStream outputStream=sands.getOutputStream();
    outputStream.writeByte(VoldemortOpCode.REDIRECT_GET_OP_CODE);
    outputStream.writeUTF(storeName);
    outputStream.writeInt(key.length());
    outputStream.write(key.get());
    outputStream.flush();
    DataInputStream inputStream=sands.getInputStream();
    checkException(inputStream);
    int resultSize=inputStream.readInt();
    List<Versioned<byte[]>> results=new ArrayList<Versioned<byte[]>>(resultSize);
    for (int i=0; i < resultSize; i++) {
      int valueSize=inputStream.readInt();
      byte[] bytes=new byte[valueSize];
      ByteUtils.read(inputStream,bytes);
      VectorClock clock=new VectorClock(bytes);
      results.add(new Versioned<byte[]>(ByteUtils.copy(bytes,clock.sizeInBytes(),bytes.length),clock));
    }
    return results;
  }
 catch (  IOException e) {
    close(sands.getSocket());
    throw new VoldemortException(e);
  }
 finally {
    pool.checkin(destination,sands);
  }
}
