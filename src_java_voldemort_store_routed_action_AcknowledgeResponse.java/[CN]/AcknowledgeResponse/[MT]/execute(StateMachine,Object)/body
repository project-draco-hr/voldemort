{
  RequestCompletedCallback rcc=(RequestCompletedCallback)eventData;
  stateData.incrementCompleted();
  if (rcc.getResult() instanceof Exception) {
    Node node=rcc.getNode();
    Exception e=(Exception)rcc.getResult();
    long requestTime=rcc.getRequestTime();
    if (e instanceof UnreachableStoreException) {
      stateData.recordFailure(e);
      failureDetector.recordException(node,requestTime,(UnreachableStoreException)e);
    }
 else     if (e instanceof VoldemortApplicationException) {
      stateData.setFatalError((VoldemortApplicationException)e);
      stateMachine.addEvent(Event.ERROR);
      return;
    }
 else {
      stateData.recordFailure(e);
      if (logger.isEnabledFor(Level.WARN))       logger.warn("Error in " + stateData.getOperation() + " on node "+ node.getId()+ "("+ node.getHost()+ ")",e);
    }
  }
 else {
    stateData.incrementSuccesses();
    stateData.getInterimResults().add(rcc);
    failureDetector.recordSuccess(rcc.getNode(),rcc.getRequestTime());
  }
  if (logger.isDebugEnabled())   logger.debug("Response received, successes: " + stateData.getSuccesses() + ", attempts: "+ stateData.getAttempts()+ ", completed: "+ stateData.getCompleted()+ ", preferred: "+ preferred+ ", required: "+ required);
  if (stateData.getCompleted() == stateData.getAttempts() && stateData.getSuccesses() < required) {
    if (insufficientSuccessesEvent != null) {
      stateMachine.addEvent(insufficientSuccessesEvent);
    }
 else {
      stateData.setFatalError(new InsufficientOperationalNodesException(required + " " + stateData.getOperation().getSimpleName()+ "s required, but "+ stateData.getSuccesses()+ " succeeded",stateData.getFailures()));
      stateMachine.addEvent(Event.ERROR);
    }
  }
 else   if (stateData.getSuccesses() >= preferred && !isComplete) {
    isComplete=true;
    stateMachine.addEvent(completeEvent);
  }
}
