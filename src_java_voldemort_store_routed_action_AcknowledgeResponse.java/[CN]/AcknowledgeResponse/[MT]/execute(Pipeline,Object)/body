{
  Response<V> response=(Response<V>)eventData;
  pipelineData.incrementCompleted();
  if (response.getValue() instanceof Exception) {
    Node node=response.getNode();
    Exception e=(Exception)response.getValue();
    long requestTime=response.getRequestTime();
    if (e instanceof UnreachableStoreException) {
      pipelineData.recordFailure(e);
      failureDetector.recordException(node,requestTime,(UnreachableStoreException)e);
    }
 else     if (e instanceof VoldemortApplicationException) {
      pipelineData.setFatalError((VoldemortApplicationException)e);
      pipeline.addEvent(Event.ERROR);
      return;
    }
 else {
      pipelineData.recordFailure(e);
      if (logger.isEnabledFor(Level.WARN))       logger.warn("Error in " + pipeline.getOperation() + " on node "+ node.getId()+ "("+ node.getHost()+ ")",e);
    }
  }
 else {
    pipelineData.incrementSuccesses();
    pipelineData.getResponses().add(response);
    failureDetector.recordSuccess(response.getNode(),response.getRequestTime());
  }
  if (logger.isDebugEnabled())   logger.debug("Response received, successes: " + pipelineData.getSuccesses() + ", attempts: "+ pipelineData.getAttempts()+ ", completed: "+ pipelineData.getCompleted()+ ", preferred: "+ preferred+ ", required: "+ required);
  if (pipelineData.getCompleted() == pipelineData.getAttempts() && pipelineData.getSuccesses() < required) {
    if (insufficientSuccessesEvent != null) {
      pipeline.addEvent(insufficientSuccessesEvent);
    }
 else {
      pipelineData.setFatalError(new InsufficientOperationalNodesException(required + " " + pipeline.getOperation().getSimpleName()+ "s required, but "+ pipelineData.getSuccesses()+ " succeeded",pipelineData.getFailures()));
      pipeline.addEvent(Event.ERROR);
    }
  }
 else   if (pipelineData.getSuccesses() >= preferred && !isComplete) {
    isComplete=true;
    pipeline.addEvent(completeEvent);
  }
}
