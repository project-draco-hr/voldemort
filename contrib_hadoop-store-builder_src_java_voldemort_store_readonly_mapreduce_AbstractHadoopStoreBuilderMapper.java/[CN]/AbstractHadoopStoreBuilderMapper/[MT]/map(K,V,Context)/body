{
  byte[] keyBytes=keySerializer.toBytes(makeKey(key,value));
  byte[] valBytes=valueSerializer.toBytes(makeValue(key,value));
  if (keySerializerDefinition.hasCompression()) {
    keyBytes=keyCompressor.deflate(keyBytes);
  }
  if (valueSerializerDefinition.hasCompression()) {
    valBytes=valueCompressor.deflate(valBytes);
  }
  byte[] idsAndValue=new byte[valBytes.length + 4 + 4];
  System.arraycopy(valBytes,0,idsAndValue,8,valBytes.length);
  BytesWritable outputKey=new BytesWritable(md5er.digest(keyBytes));
  List<Integer> partitionList=routingStrategy.getPartitionList(keyBytes);
  Node[] partitionToNode=routingStrategy.getPartitionToNode();
  for (  Integer partition : partitionList) {
    ByteUtils.writeInt(idsAndValue,partitionToNode[partition].getId(),0);
    ByteUtils.writeInt(idsAndValue,partition,4);
    BytesWritable outputVal=new BytesWritable(idsAndValue);
    context.write(outputKey,outputVal);
  }
  md5er.reset();
}
