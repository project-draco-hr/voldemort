{
  int monitoringCount=this.checkoutCount.get() + this.resourceRequestCount.get();
  if (parent == null && statsMap != null) {
    int monitoringInterval=this.monitoringInterval.get();
    if (monitoringCount % (monitoringInterval + 1) == monitoringInterval) {
      long startTimeNs=0;
      if (logger.isDebugEnabled()) {
        startTimeNs=System.nanoTime();
      }
      Iterator<SocketDestination> it=statsMap.keySet().iterator();
      while (it.hasNext()) {
        ClientSocketStats stats=statsMap.get(it.next());
        stats.resetForInterval();
      }
      resetForInterval();
      if (logger.isDebugEnabled()) {
        logger.debug("ClientSocketStats(" + System.identityHashCode(this) + ")::checkMonitoringInterval: reset self and all children in "+ (System.nanoTime() - startTimeNs)+ " ns.");
      }
    }
  }
}
