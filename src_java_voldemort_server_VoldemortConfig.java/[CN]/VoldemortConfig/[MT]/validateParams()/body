{
  if (coreThreads < 0)   throw new IllegalArgumentException(CORE_THREADS + " cannot be less than 1");
 else   if (coreThreads > maxThreads)   throw new IllegalArgumentException(CORE_THREADS + " cannot be greater than " + MAX_THREADS);
  if (maxThreads < 1)   throw new ConfigurationException(MAX_THREADS + " cannot be less than 1.");
  if (slopFrequencyMs < 1)   throw new ConfigurationException(SLOP_FREQUENCY_MS + " cannot be less than 1.");
  if (socketTimeoutMs < 0)   throw new ConfigurationException(SOCKET_TIMEOUT_MS + " must be 0 or more ms.");
  if (clientSelectors < 1)   throw new ConfigurationException(CLIENT_SELECTORS + " must be 1 or more.");
  if (clientRoutingTimeoutMs < 0)   throw new ConfigurationException(CLIENT_ROUTING_TIMEOUT_MS + " must be 0 or more ms.");
  if (schedulerThreads < 1)   throw new ConfigurationException("Must have at least 1 scheduler thread, " + this.schedulerThreads + " set.");
  if (enableServerRouting && !enableSocketServer)   throw new ConfigurationException("Server-side routing is enabled, this requires the socket server to also be enabled.");
  if (numRestServiceNettyBossThreads < 1)   throw new ConfigurationException(NUM_REST_SERVICE_NETTY_BOSS_THREADS + " cannot be less than 1");
  if (numRestServiceNettyWorkerThreads < 1)   throw new ConfigurationException(NUM_REST_SERVICE_NETTY_WORKER_THREADS + " cannot be less than 1");
  if (numRestServiceStorageThreads < 1)   throw new ConfigurationException(NUM_REST_SERVICE_STORAGE_THREADS + " cannot be less than 1");
  if (numRestServiceNettyServerBacklog < 0)   throw new ConfigurationException(NUM_REST_SERVICE_NETTY_SERVER_BACKLOG + " cannot be negative");
  if (restServiceStorageThreadPoolQueueSize < 0)   throw new ConfigurationException(REST_SERVICE_STORAGE_THREAD_POOL_QUEUE_SIZE + " cannot be negative.");
  if (maxHttpAggregatedContentLength <= 0)   throw new ConfigurationException(MAX_HTTP_AGGREGATED_CONTENT_LENGTH + " must be positive");
  if (this.highAvailabilityPushEnabled) {
    if (this.highAvailabilityPushClusterId == null)     throw new ConfigurationException(PUSH_HA_CLUSTER_ID + " must be set if " + PUSH_HA_ENABLED+ "=true");
    if (this.highAvailabilityPushLockPath == null)     throw new ConfigurationException(PUSH_HA_LOCK_PATH + " must be set if " + PUSH_HA_ENABLED+ "=true");
    if (this.highAvailabilityPushLockImplementation == null)     throw new ConfigurationException(PUSH_HA_LOCK_IMPLEMENTATION + " must be set if " + PUSH_HA_ENABLED+ "=true");
    if (this.highAvailabilityPushMaxNodeFailures < 1)     throw new ConfigurationException(PUSH_HA_MAX_NODE_FAILURES + " must be 1 or more if " + PUSH_HA_ENABLED+ "=true");
  }
}
