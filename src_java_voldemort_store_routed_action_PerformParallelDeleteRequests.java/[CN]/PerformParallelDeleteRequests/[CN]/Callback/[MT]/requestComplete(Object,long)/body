{
  if (logger.isTraceEnabled())   logger.trace(pipeline.getOperation().getSimpleName() + " response received (" + requestTime+ " ms.) from node "+ node.getId());
  Response<ByteArray,Object> response=new Response<ByteArray,Object>(node,key,result,requestTime);
  responses.put(node.getId(),response);
  if (enableHintedHandoff && pipeline.isFinished() && response.getValue() instanceof UnreachableStoreException) {
    Slop slop=new Slop(pipelineData.getStoreName(),Slop.Operation.DELETE,key,null,null,node.getId(),new Date());
    pipelineData.addFailedNode(node);
    hintedHandoff.sendHintSerial(node,version,slop);
  }
  attemptsLatch.countDown();
  blocksLatch.countDown();
  if (logger.isTraceEnabled())   logger.trace(attemptsLatch.getCount() + " attempts remaining. Will block " + " for "+ blocksLatch.getCount()+ " more ");
  if (pipeline.isFinished() && response.getValue() instanceof Exception && !(response.getValue() instanceof ObsoleteVersionException)) {
    if (response.getValue() instanceof InvalidMetadataException) {
      pipelineData.reportException((InvalidMetadataException)response.getValue());
      logger.warn("Received invalid metadata problem after a successful " + pipeline.getOperation().getSimpleName() + " call on node "+ node.getId()+ ", store '"+ pipelineData.getStoreName()+ "'");
    }
 else {
      handleResponseError(response,pipeline,failureDetector);
    }
  }
}
