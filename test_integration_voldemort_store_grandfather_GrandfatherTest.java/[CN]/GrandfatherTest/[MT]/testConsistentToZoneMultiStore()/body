{
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,1);
  }
  StoreDefinition beforeStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY), beforeStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  StoreDefinition afterStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY), afterStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  test(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef1,beforeStoreDef2),Lists.newArrayList(afterStoreDef1,afterStoreDef2));
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,2);
  }
  beforeStoreDef1=ServerTestUtils.getStoreDef("test1",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  beforeStoreDef2=ServerTestUtils.getStoreDef("test2",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  afterStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  afterStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  test(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef1,beforeStoreDef2),Lists.newArrayList(afterStoreDef1,afterStoreDef2));
  beforeStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  beforeStoreDef2=ServerTestUtils.getStoreDef("test2",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,1);
  }
  afterStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,2);
  }
  afterStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  test(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef1,beforeStoreDef2),Lists.newArrayList(afterStoreDef1,afterStoreDef2));
  beforeStoreDef1=ServerTestUtils.getStoreDef("test1",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  beforeStoreDef2=ServerTestUtils.getStoreDef("test2",3,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,2);
  }
  afterStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,3);
  }
  afterStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  test(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef1,beforeStoreDef2),Lists.newArrayList(afterStoreDef1,afterStoreDef2));
  beforeStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  beforeStoreDef2=ServerTestUtils.getStoreDef("test2",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  StoreDefinition beforeStoreDef3=ServerTestUtils.getStoreDef("test3",3,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,1);
  }
  afterStoreDef1=ServerTestUtils.getStoreDef("test1",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,2);
  }
  afterStoreDef2=ServerTestUtils.getStoreDef("test2",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < NUM_ZONES; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,3);
  }
  StoreDefinition afterStoreDef3=ServerTestUtils.getStoreDef("test3",1,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  test(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef1,beforeStoreDef2,beforeStoreDef3),Lists.newArrayList(afterStoreDef1,afterStoreDef2,afterStoreDef3));
}
