{
  List<Zone> zones=ServerTestUtils.getZones(NUM_ZONES);
  final Cluster firstCluster=ServerTestUtils.getLocalCluster(NUM_NODES,10,NUM_ZONES);
  final Cluster secondCluster=new Cluster("b",getBestNodes(firstCluster),zones);
  final List<StoreDefinition> storeDefs=Lists.newArrayList();
  for (int storeNo=1; storeNo <= NUMBER_STORES; storeNo++) {
    StoreDefinition def=null;
    if (NUM_ZONES == 1) {
      def=ServerTestUtils.getStoreDef("test" + storeNo,storeNo,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
    }
 else {
      HashMap<Integer,Integer> zoneRepFactor=Maps.newHashMap();
      for (int zoneId=0; zoneId < NUM_ZONES; zoneId++) {
        zoneRepFactor.put(zoneId,storeNo);
      }
      def=ServerTestUtils.getStoreDef("test" + storeNo,1,1,1,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
    }
    storeDefs.add(def);
  }
  test(firstCluster,secondCluster,storeDefs,storeDefs);
}
