{
  Set<Integer> failedNodes=getFailedNodes();
  Multimap<Integer,ByteArray> failedKeys=populateStore(failedNodes);
  Thread.sleep(5000);
  ExecutorService executor=Executors.newFixedThreadPool(slopPusherJobs.size());
  final CountDownLatch latch=new CountDownLatch(slopPusherJobs.size());
  for (  final StreamingSlopPusherJob job : slopPusherJobs) {
    executor.submit(new Runnable(){
      public void run(){
        try {
          if (logger.isTraceEnabled())           logger.trace("Started slop pusher job " + job);
          job.run();
          if (logger.isTraceEnabled())           logger.trace("Finished slop pusher job " + job);
        }
  finally {
          latch.countDown();
        }
      }
    }
);
  }
  latch.await();
  Thread.sleep(5000);
  for (  Map.Entry<Integer,ByteArray> entry : failedKeys.entries()) {
    List<Versioned<byte[]>> values=store.get(entry.getValue(),null);
    assertTrue("slop entry should be pushed for " + entry.getValue() + ", preflist "+ keysToNodes.get(entry.getValue()),values.size() > 0);
    assertEquals("slop entry should be correct for " + entry.getValue(),keyValues.get(entry.getValue()),new ByteArray(values.get(0).getValue()));
  }
}
