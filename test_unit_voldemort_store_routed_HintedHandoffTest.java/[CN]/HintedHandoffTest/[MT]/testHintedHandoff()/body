{
  Set<Integer> failedNodes=getFailedNodes();
  Thread.sleep(500);
  Multimap<Integer,ByteArray> failedKeys=populateStore(failedNodes);
  Thread.sleep(5000);
  Map<ByteArray,byte[]> dataInSlops=Maps.newHashMap();
  Set<ByteArray> slopKeys=makeSlopKeys(failedKeys,Slop.Operation.PUT);
  for (  Store<ByteArray,Slop,byte[]> slopStore : slopStores.values()) {
    Map<ByteArray,List<Versioned<Slop>>> res=slopStore.getAll(slopKeys,null);
    for (    Map.Entry<ByteArray,List<Versioned<Slop>>> entry : res.entrySet()) {
      Slop slop=entry.getValue().get(0).getValue();
      dataInSlops.put(slop.getKey(),slop.getValue());
      if (logger.isTraceEnabled())       logger.trace(slop);
    }
  }
  for (  Map.Entry<Integer,ByteArray> failedKey : failedKeys.entries()) {
    byte[] expected=keyValues.get(failedKey.getValue()).get();
    byte[] actual=dataInSlops.get(failedKey.getValue());
    assertNotNull("data should be stored in the slop",actual);
    assertEquals("correct should be stored in slop",0,ByteUtils.compare(actual,expected));
  }
}
