{
  testEntries=ServerTestUtils.createRandomKeyValueString(NUM_KEYS);
  socketStoreFactory=new ClientRequestExecutorPool(2,10000,100000,32 * 1024);
  roStoreDefWithoutReplication=new StoreDefinitionBuilder().setName(testStoreNameRO).setType(ReadOnlyStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.SERVER).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(1).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  rwStoreDefWithoutReplication=new StoreDefinitionBuilder().setName(testStoreNameRW).setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.SERVER).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(1).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  storeDefWithoutReplication=Lists.newArrayList(roStoreDefWithoutReplication,rwStoreDefWithoutReplication);
  String storeDefWithoutReplicationString=new StoreDefinitionsMapper().writeStoreList(storeDefWithoutReplication);
  File file=File.createTempFile("two-stores-",".xml");
  FileUtils.writeStringToFile(file,storeDefWithoutReplicationString);
  storeDefFileWithoutReplication=file.getAbsolutePath();
  roStoreDefWithReplication=new StoreDefinitionBuilder().setName(testStoreNameRO).setType(ReadOnlyStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.SERVER).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(2).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  file=File.createTempFile("ro-stores-",".xml");
  FileUtils.writeStringToFile(file,new StoreDefinitionsMapper().writeStoreList(Lists.newArrayList(roStoreDefWithReplication)));
  roStoreDefFileWithReplication=file.getAbsolutePath();
  rwStoreDefWithReplication=new StoreDefinitionBuilder().setName(testStoreNameRW).setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.SERVER).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(2).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  file=File.createTempFile("rw-stores-",".xml");
  FileUtils.writeStringToFile(file,new StoreDefinitionsMapper().writeStoreList(Lists.newArrayList(rwStoreDefWithReplication)));
  rwStoreDefFileWithReplication=file.getAbsolutePath();
  storeDefWithReplication=Lists.newArrayList(roStoreDefWithReplication,rwStoreDefWithReplication);
  String storeDefWithReplicationString=new StoreDefinitionsMapper().writeStoreList(storeDefWithReplication);
  file=File.createTempFile("two-stores-",".xml");
  FileUtils.writeStringToFile(file,storeDefWithReplicationString);
  storeDefFileWithReplication=file.getAbsolutePath();
}
