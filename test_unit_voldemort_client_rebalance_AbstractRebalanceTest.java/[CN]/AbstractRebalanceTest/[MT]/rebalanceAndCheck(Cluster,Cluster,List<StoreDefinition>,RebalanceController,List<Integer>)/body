{
  rebalanceClient.rebalance(targetCluster);
  for (  StoreDefinition storeDef : storeDefs) {
    Map<Integer,Set<Pair<Integer,Integer>>> currentNodeToPartitionTuples=RebalanceUtils.getNodeIdToAllPartitions(currentCluster,storeDef,true);
    Map<Integer,Set<Pair<Integer,Integer>>> targetNodeToPartitionTuples=RebalanceUtils.getNodeIdToAllPartitions(targetCluster,storeDef,true);
    for (    int nodeId : nodeCheckList) {
      Set<Pair<Integer,Integer>> currentPartitionTuples=currentNodeToPartitionTuples.get(nodeId);
      Set<Pair<Integer,Integer>> targetPartitionTuples=targetNodeToPartitionTuples.get(nodeId);
      HashMap<Integer,List<Integer>> flattenedPresentTuples=RebalanceUtils.flattenPartitionTuples(RebalanceUtils.getAddedInTarget(currentPartitionTuples,targetPartitionTuples));
      Store<ByteArray,byte[],byte[]> store=getSocketStore(storeDef.getName(),targetCluster.getNodeById(nodeId).getHost(),targetCluster.getNodeById(nodeId).getSocketPort());
      checkGetEntries(targetCluster.getNodeById(nodeId),targetCluster,storeDef,store,flattenedPresentTuples);
    }
  }
}
