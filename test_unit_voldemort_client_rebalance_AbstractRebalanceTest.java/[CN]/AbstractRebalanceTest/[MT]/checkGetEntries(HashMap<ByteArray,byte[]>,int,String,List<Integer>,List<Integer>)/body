{
  RoutingStrategy routing=new ConsistentRoutingStrategy(targetCluster.getNodes(),1);
  Store<ByteArray,byte[]> store=null;
  for (  Entry<ByteArray,byte[]> entry : entryMap.entrySet()) {
    List<Integer> partitions=routing.getPartitionList(entry.getKey().get());
    List<Versioned<byte[]>> values=store.get(entry.getKey());
    if (unavailablePartitions.containsAll(partitions)) {
      assertEquals("Store.get() for non-available partitions:" + partitions + " should return empty list.",0,values.size());
    }
 else     if (availablePartitions.containsAll(partitions)) {
      assertEquals("Store.get() for non-available partitions:" + partitions + " should return non-empty list.",1,values.size());
      assertEquals("Value version should match",new VectorClock(),values.get(0).getVersion());
      assertEquals("Value bytes should match",0,ByteUtils.compare(entry.getValue(),values.get(0).getValue()));
    }
  }
}
