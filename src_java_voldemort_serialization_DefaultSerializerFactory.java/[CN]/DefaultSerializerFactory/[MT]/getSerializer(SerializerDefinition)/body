{
  String name=serializerDef.getName();
  if (name.equals(JAVA_SERIALIZER_TYPE_NAME)) {
    return new ObjectSerializer<Object>();
  }
 else   if (name.equals(STRING_SERIALIZER_TYPE_NAME)) {
    return new StringSerializer(serializerDef.getCurrentSchemaInfo());
  }
 else   if (name.equals(IDENTITY_SERIALIZER_TYPE_NAME)) {
    return new IdentitySerializer();
  }
 else   if (name.equals(JSON_SERIALIZER_TYPE_NAME)) {
    Map<Integer,JsonTypeDefinition> versions=new HashMap<Integer,JsonTypeDefinition>();
    for (    Map.Entry<Integer,String> entry : serializerDef.getAllSchemaInfoVersions().entrySet())     versions.put(entry.getKey(),JsonTypeDefinition.fromJson(entry.getValue()));
    return new JsonTypeSerializer(versions);
  }
 else   if (name.equals(PROTO_BUF_TYPE_NAME)) {
    return new ProtoBufSerializer<Message>(serializerDef.getCurrentSchemaInfo());
  }
 else   if (name.equals(THRIFT_TYPE_NAME)) {
    return new ThriftSerializer<TBase>(serializerDef.getCurrentSchemaInfo());
  }
 else {
    throw new IllegalArgumentException("No known serializer type: " + serializerDef.getName());
  }
}
