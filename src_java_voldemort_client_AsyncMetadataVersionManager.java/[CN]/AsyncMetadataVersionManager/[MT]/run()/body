{
  Versioned<Long> newStoresVersion, newClusterVersion;
  while (!Thread.currentThread().isInterrupted() && isRunning) {
    newStoresVersion=newClusterVersion=null;
    try {
      Thread.sleep(asyncMetadataCheckInterval);
    }
 catch (    InterruptedException e) {
      break;
    }
    newStoresVersion=fetchNewVersion(STORES_VERSION_KEY,currentStoreVersion);
    newClusterVersion=fetchNewVersion(CLUSTER_VERSION_KEY,currentClusterVersion);
    if (newStoresVersion == null && newClusterVersion == null) {
      continue;
    }
    logger.info("Metadata version mismatch detected.");
    int delta=randomGenerator.nextInt(DELTA_MAX);
    try {
      logger.info("Sleeping for delta : " + delta + " (ms) before re-bootstrapping.");
      Thread.sleep(delta);
    }
 catch (    InterruptedException e) {
      break;
    }
    try {
      this.storeClientThunk.call();
      if (newStoresVersion != null) {
        currentStoreVersion=newStoresVersion;
      }
      if (newClusterVersion != null) {
        currentClusterVersion=newClusterVersion;
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
      logger.info(e.getMessage());
    }
  }
}
