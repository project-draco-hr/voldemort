{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasStealerId()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(1,getStealerId());
  }
  if (hasDonorId()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(2,getDonorId());
  }
  if (hasOBSOLETEDONOTUSEAttempt()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(3,getOBSOLETEDONOTUSEAttempt());
  }
  for (  voldemort.client.protocol.pb.VAdminProto.PerStorePartitionTuple element : getReplicaToAddPartitionList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,element);
  }
  for (  voldemort.client.protocol.pb.VAdminProto.PerStorePartitionTuple element : getReplicaToDeletePartitionList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,element);
  }
  if (hasInitialCluster()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(6,getInitialCluster());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
