{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    return this;
default :
{
    if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
      this.setUnknownFields(unknownFields.build());
      return this;
    }
    break;
  }
case 8:
{
  int rawValue=input.readEnum();
  voldemort.client.protocol.pb.VAdminProto.AdminRequestType value=voldemort.client.protocol.pb.VAdminProto.AdminRequestType.valueOf(rawValue);
  if (value == null) {
    unknownFields.mergeVarintField(1,rawValue);
  }
 else {
    setType(value);
  }
  break;
}
case 18:
{
voldemort.client.protocol.pb.VAdminProto.GetMetadataRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.GetMetadataRequest.newBuilder();
if (hasGetMetadata()) {
  subBuilder.mergeFrom(getGetMetadata());
}
input.readMessage(subBuilder,extensionRegistry);
setGetMetadata(subBuilder.buildPartial());
break;
}
case 26:
{
voldemort.client.protocol.pb.VAdminProto.UpdateMetadataRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.UpdateMetadataRequest.newBuilder();
if (hasUpdateMetadata()) {
subBuilder.mergeFrom(getUpdateMetadata());
}
input.readMessage(subBuilder,extensionRegistry);
setUpdateMetadata(subBuilder.buildPartial());
break;
}
case 34:
{
voldemort.client.protocol.pb.VAdminProto.UpdatePartitionEntriesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.UpdatePartitionEntriesRequest.newBuilder();
if (hasUpdatePartitionEntries()) {
subBuilder.mergeFrom(getUpdatePartitionEntries());
}
input.readMessage(subBuilder,extensionRegistry);
setUpdatePartitionEntries(subBuilder.buildPartial());
break;
}
case 42:
{
voldemort.client.protocol.pb.VAdminProto.FetchPartitionEntriesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.FetchPartitionEntriesRequest.newBuilder();
if (hasFetchPartitionEntries()) {
subBuilder.mergeFrom(getFetchPartitionEntries());
}
input.readMessage(subBuilder,extensionRegistry);
setFetchPartitionEntries(subBuilder.buildPartial());
break;
}
case 50:
{
voldemort.client.protocol.pb.VAdminProto.DeletePartitionEntriesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.DeletePartitionEntriesRequest.newBuilder();
if (hasDeletePartitionEntries()) {
subBuilder.mergeFrom(getDeletePartitionEntries());
}
input.readMessage(subBuilder,extensionRegistry);
setDeletePartitionEntries(subBuilder.buildPartial());
break;
}
case 58:
{
voldemort.client.protocol.pb.VAdminProto.InitiateFetchAndUpdateRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.InitiateFetchAndUpdateRequest.newBuilder();
if (hasInitiateFetchAndUpdate()) {
subBuilder.mergeFrom(getInitiateFetchAndUpdate());
}
input.readMessage(subBuilder,extensionRegistry);
setInitiateFetchAndUpdate(subBuilder.buildPartial());
break;
}
case 66:
{
voldemort.client.protocol.pb.VAdminProto.AsyncOperationStatusRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.AsyncOperationStatusRequest.newBuilder();
if (hasAsyncOperationStatus()) {
subBuilder.mergeFrom(getAsyncOperationStatus());
}
input.readMessage(subBuilder,extensionRegistry);
setAsyncOperationStatus(subBuilder.buildPartial());
break;
}
case 74:
{
voldemort.client.protocol.pb.VAdminProto.InitiateRebalanceNodeRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.InitiateRebalanceNodeRequest.newBuilder();
if (hasInitiateRebalanceNode()) {
subBuilder.mergeFrom(getInitiateRebalanceNode());
}
input.readMessage(subBuilder,extensionRegistry);
setInitiateRebalanceNode(subBuilder.buildPartial());
break;
}
case 82:
{
voldemort.client.protocol.pb.VAdminProto.AsyncOperationStopRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.AsyncOperationStopRequest.newBuilder();
if (hasAsyncOperationStop()) {
subBuilder.mergeFrom(getAsyncOperationStop());
}
input.readMessage(subBuilder,extensionRegistry);
setAsyncOperationStop(subBuilder.buildPartial());
break;
}
case 90:
{
voldemort.client.protocol.pb.VAdminProto.AsyncOperationListRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.AsyncOperationListRequest.newBuilder();
if (hasAsyncOperationList()) {
subBuilder.mergeFrom(getAsyncOperationList());
}
input.readMessage(subBuilder,extensionRegistry);
setAsyncOperationList(subBuilder.buildPartial());
break;
}
case 98:
{
voldemort.client.protocol.pb.VAdminProto.TruncateEntriesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.TruncateEntriesRequest.newBuilder();
if (hasTruncateEntries()) {
subBuilder.mergeFrom(getTruncateEntries());
}
input.readMessage(subBuilder,extensionRegistry);
setTruncateEntries(subBuilder.buildPartial());
break;
}
case 106:
{
voldemort.client.protocol.pb.VAdminProto.AddStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.AddStoreRequest.newBuilder();
if (hasAddStore()) {
subBuilder.mergeFrom(getAddStore());
}
input.readMessage(subBuilder,extensionRegistry);
setAddStore(subBuilder.buildPartial());
break;
}
case 114:
{
voldemort.client.protocol.pb.VAdminProto.DeleteStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.DeleteStoreRequest.newBuilder();
if (hasDeleteStore()) {
subBuilder.mergeFrom(getDeleteStore());
}
input.readMessage(subBuilder,extensionRegistry);
setDeleteStore(subBuilder.buildPartial());
break;
}
case 122:
{
voldemort.client.protocol.pb.VAdminProto.FetchStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.FetchStoreRequest.newBuilder();
if (hasFetchStore()) {
subBuilder.mergeFrom(getFetchStore());
}
input.readMessage(subBuilder,extensionRegistry);
setFetchStore(subBuilder.buildPartial());
break;
}
case 130:
{
voldemort.client.protocol.pb.VAdminProto.SwapStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.SwapStoreRequest.newBuilder();
if (hasSwapStore()) {
subBuilder.mergeFrom(getSwapStore());
}
input.readMessage(subBuilder,extensionRegistry);
setSwapStore(subBuilder.buildPartial());
break;
}
case 138:
{
voldemort.client.protocol.pb.VAdminProto.RollbackStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.RollbackStoreRequest.newBuilder();
if (hasRollbackStore()) {
subBuilder.mergeFrom(getRollbackStore());
}
input.readMessage(subBuilder,extensionRegistry);
setRollbackStore(subBuilder.buildPartial());
break;
}
case 146:
{
voldemort.client.protocol.pb.VAdminProto.GetROMaxVersionDirRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.GetROMaxVersionDirRequest.newBuilder();
if (hasGetRoMaxVersionDir()) {
subBuilder.mergeFrom(getGetRoMaxVersionDir());
}
input.readMessage(subBuilder,extensionRegistry);
setGetRoMaxVersionDir(subBuilder.buildPartial());
break;
}
case 154:
{
voldemort.client.protocol.pb.VAdminProto.GetROCurrentVersionDirRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.GetROCurrentVersionDirRequest.newBuilder();
if (hasGetRoCurrentVersionDir()) {
subBuilder.mergeFrom(getGetRoCurrentVersionDir());
}
input.readMessage(subBuilder,extensionRegistry);
setGetRoCurrentVersionDir(subBuilder.buildPartial());
break;
}
case 162:
{
voldemort.client.protocol.pb.VAdminProto.FetchPartitionFilesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.FetchPartitionFilesRequest.newBuilder();
if (hasFetchPartitionFiles()) {
subBuilder.mergeFrom(getFetchPartitionFiles());
}
input.readMessage(subBuilder,extensionRegistry);
setFetchPartitionFiles(subBuilder.buildPartial());
break;
}
case 178:
{
voldemort.client.protocol.pb.VAdminProto.UpdateSlopEntriesRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.UpdateSlopEntriesRequest.newBuilder();
if (hasUpdateSlopEntries()) {
subBuilder.mergeFrom(getUpdateSlopEntries());
}
input.readMessage(subBuilder,extensionRegistry);
setUpdateSlopEntries(subBuilder.buildPartial());
break;
}
case 194:
{
voldemort.client.protocol.pb.VAdminProto.FailedFetchStoreRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.FailedFetchStoreRequest.newBuilder();
if (hasFailedFetchStore()) {
subBuilder.mergeFrom(getFailedFetchStore());
}
input.readMessage(subBuilder,extensionRegistry);
setFailedFetchStore(subBuilder.buildPartial());
break;
}
case 202:
{
voldemort.client.protocol.pb.VAdminProto.GetROStorageFormatRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.GetROStorageFormatRequest.newBuilder();
if (hasGetRoStorageFormat()) {
subBuilder.mergeFrom(getGetRoStorageFormat());
}
input.readMessage(subBuilder,extensionRegistry);
setGetRoStorageFormat(subBuilder.buildPartial());
break;
}
case 210:
{
voldemort.client.protocol.pb.VAdminProto.RebalanceStateChangeRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.RebalanceStateChangeRequest.newBuilder();
if (hasRebalanceStateChange()) {
subBuilder.mergeFrom(getRebalanceStateChange());
}
input.readMessage(subBuilder,extensionRegistry);
setRebalanceStateChange(subBuilder.buildPartial());
break;
}
case 218:
{
voldemort.client.protocol.pb.VAdminProto.InitiateRebalanceNodeOnDonorRequest.Builder subBuilder=voldemort.client.protocol.pb.VAdminProto.InitiateRebalanceNodeOnDonorRequest.newBuilder();
if (hasInitiateRebalanceNodeOnDonor()) {
subBuilder.mergeFrom(getInitiateRebalanceNodeOnDonor());
}
input.readMessage(subBuilder,extensionRegistry);
setInitiateRebalanceNodeOnDonor(subBuilder.buildPartial());
break;
}
}
}
}
