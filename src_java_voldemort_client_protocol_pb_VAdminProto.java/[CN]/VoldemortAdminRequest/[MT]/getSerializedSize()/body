{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasType()) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(1,getType().getNumber());
  }
  if (hasGetMetadata()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(2,getGetMetadata());
  }
  if (hasUpdateMetadata()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(3,getUpdateMetadata());
  }
  if (hasUpdatePartitionEntries()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,getUpdatePartitionEntries());
  }
  if (hasFetchPartitionEntries()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,getFetchPartitionEntries());
  }
  if (hasDeletePartitionEntries()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,getDeletePartitionEntries());
  }
  if (hasInitiateFetchAndUpdate()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,getInitiateFetchAndUpdate());
  }
  if (hasAsyncOperationStatus()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,getAsyncOperationStatus());
  }
  if (hasInitiateRebalanceNode()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(9,getInitiateRebalanceNode());
  }
  if (hasAsyncOperationStop()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,getAsyncOperationStop());
  }
  if (hasAsyncOperationList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(11,getAsyncOperationList());
  }
  if (hasTruncateEntries()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(12,getTruncateEntries());
  }
  if (hasAddStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(13,getAddStore());
  }
  if (hasDeleteStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(14,getDeleteStore());
  }
  if (hasFetchStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(15,getFetchStore());
  }
  if (hasSwapStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(16,getSwapStore());
  }
  if (hasRollbackStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(17,getRollbackStore());
  }
  if (hasGetRoMaxVersionDir()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(18,getGetRoMaxVersionDir());
  }
  if (hasGetRoCurrentVersionDir()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(19,getGetRoCurrentVersionDir());
  }
  if (hasFetchPartitionFiles()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(20,getFetchPartitionFiles());
  }
  if (hasUpdateSlopEntries()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(22,getUpdateSlopEntries());
  }
  if (hasFailedFetchStore()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(24,getFailedFetchStore());
  }
  if (hasGetRoStorageFormat()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(25,getGetRoStorageFormat());
  }
  if (hasRebalanceStateChange()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(26,getRebalanceStateChange());
  }
  if (hasRepairJob()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(27,getRepairJob());
  }
  if (hasInitiateRebalanceNodeOnDonor()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(28,getInitiateRebalanceNodeOnDonor());
  }
  if (hasDeleteStoreRebalanceState()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(29,getDeleteStoreRebalanceState());
  }
  if (hasNativeBackup()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(30,getNativeBackup());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
