{
switch (value) {
case 0:
    return GET_METADATA;
case 1:
  return UPDATE_METADATA;
case 2:
return UPDATE_PARTITION_ENTRIES;
case 3:
return FETCH_PARTITION_ENTRIES;
case 4:
return DELETE_PARTITION_ENTRIES;
case 5:
return INITIATE_FETCH_AND_UPDATE;
case 6:
return ASYNC_OPERATION_STATUS;
case 7:
return INITIATE_REBALANCE_NODE;
case 8:
return ASYNC_OPERATION_STOP;
case 9:
return ASYNC_OPERATION_LIST;
case 10:
return TRUNCATE_ENTRIES;
case 11:
return ADD_STORE;
case 12:
return DELETE_STORE;
case 13:
return FETCH_STORE;
case 14:
return SWAP_STORE;
case 15:
return ROLLBACK_STORE;
case 16:
return GET_RO_MAX_VERSION_DIR;
case 17:
return GET_RO_CURRENT_VERSION_DIR;
case 18:
return FETCH_PARTITION_FILES;
case 20:
return UPDATE_SLOP_ENTRIES;
case 22:
return FAILED_FETCH_STORE;
case 23:
return GET_RO_STORAGE_FORMAT;
case 24:
return REBALANCE_STATE_CHANGE;
case 25:
return REPAIR_JOB;
case 27:
return DELETE_STORE_REBALANCE_STATE;
case 28:
return NATIVE_BACKUP;
case 29:
return RESERVE_MEMORY;
case 30:
return PRUNE_JOB;
case 31:
return SLOP_PURGE_JOB;
case 32:
return UPDATE_METADATA_PAIR;
case 33:
return UPDATE_STORE_DEFINITIONS;
case 34:
return SET_OFFLINE_STATE;
case 35:
return GET_RO_STORAGE_FILE_LIST;
case 36:
return GET_RO_COMPRESSION_CODEC_LIST;
case 37:
return LIST_SCHEDULED_JOBS;
case 38:
return GET_SCHEDULED_JOB_STATUS;
case 39:
return STOP_SCHEDULED_JOB;
case 40:
return ENABLE_SCHEDULED_JOB;
case 41:
return GET_HA_SETTINGS;
case 42:
return DISABLE_STORE_VERSION;
default :
return null;
}
}
