{
  if (numberOfZones > 0 && numberOfNodes > 0 && numberOfNodes % numberOfZones != 0) {
    throw new VoldemortException("The number of nodes (" + numberOfNodes + ") is not divisible by number of zones ("+ numberOfZones+ ")");
  }
  List<Node> nodes=new ArrayList<Node>();
  for (int i=0; i < numberOfNodes; i++) {
    List<Integer> partitions=new ArrayList<Integer>(partitionMapping[i].length);
    for (    int p : partitionMapping[i]) {
      partitions.add(p);
    }
    nodes.add(new Node(i,"localhost",ports[3 * i],ports[3 * i + 1],ports[3 * i + 2],nodeToZoneMapping[i],partitions));
  }
  List<Zone> zones=Lists.newArrayList();
  for (int i=0; i < numberOfZones; i++) {
    LinkedList<Integer> proximityList=Lists.newLinkedList();
    int zoneId=i + 1;
    for (int j=0; j < numberOfZones - 1; j++) {
      proximityList.add(zoneId % numberOfZones);
      zoneId++;
    }
    zones.add(new Zone(i,proximityList));
  }
  return new Cluster("cluster",nodes,zones);
}
