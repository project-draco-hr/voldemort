{
  if (instanceIds.isEmpty())   return;
  if (logger.isDebugEnabled())   logger.debug("Deleting instances: " + instanceIds);
  ec2.terminateInstances(instanceIds);
  int count=instanceIds.size();
  while (count > 0) {
    try {
      if (logger.isDebugEnabled())       logger.debug("Sleeping for " + POLL_INTERVAL + " seconds...");
      Thread.sleep(POLL_INTERVAL * 1000);
    }
 catch (    InterruptedException e) {
      break;
    }
    for (    ReservationDescription res : ec2.describeInstances(instanceIds)) {
      if (res.getInstances() == null)       break;
      for (      Instance instance : res.getInstances()) {
        String state=String.valueOf(instance.getState()).toLowerCase();
        String instanceId=instance.getInstanceId();
        if (!state.equals("terminated")) {
          if (logger.isDebugEnabled())           logger.debug("Instance " + instanceId + " in state: "+ state);
          continue;
        }
        count--;
        if (listener != null)         listener.instanceDestroyed(instanceId);
      }
    }
  }
}
