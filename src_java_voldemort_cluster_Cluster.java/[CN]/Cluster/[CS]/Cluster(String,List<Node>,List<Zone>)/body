{
  this.name=Utils.notNull(name);
  if (zones.size() != 0) {
    zonesById=new LinkedHashMap<Integer,Zone>(zones.size());
    for (    Zone zone : zones) {
      if (zonesById.containsKey(zone.getId()))       throw new IllegalArgumentException("Zone id " + zone.getId() + " appears twice in the zone list.");
      zonesById.put(zone.getId(),zone);
    }
  }
 else {
    zonesById=new LinkedHashMap<Integer,Zone>(1);
    zonesById.put(Zone.DEFAULT_ZONE_ID,new Zone());
  }
  this.nodesById=new LinkedHashMap<Integer,Node>(nodes.size());
  for (  Node node : nodes) {
    if (nodesById.containsKey(node.getId()))     throw new IllegalArgumentException("Node id " + node.getId() + " appears twice in the node list.");
    nodesById.put(node.getId(),node);
  }
  this.numberOfTags=getNumberOfTags(nodes);
}
