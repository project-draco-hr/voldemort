{
  ToolRunner.run(new Configuration(),new TextBatchIndexer(),null);
  File dataDir=new File("contrib/batch-indexer/temp-output/text");
  new File(dataDir,"users.index_0").renameTo(new File(dataDir,"users.index"));
  new File(dataDir,"users.data_0").renameTo(new File(dataDir,"users.data"));
  SerializerDefinition serDef=new SerializerDefinition("string","UTF-8");
  Serializer<Object> Keyserializer=(Serializer<Object>)new DefaultSerializerFactory().getSerializer(serDef);
  Serializer<Object> Valueserializer=(Serializer<Object>)new DefaultSerializerFactory().getSerializer(new SerializerDefinition("java-serialization"));
  Store<Object,Object> store=new SerializingStore<Object,Object>(new RandomAccessFileStore("users",dataDir,1,3,1000,100 * 1000 * 1000),Keyserializer,Valueserializer);
  BufferedReader reader=new BufferedReader(new FileReader(new File("contrib/test/common/test-data/usersCSV.txt")));
  String line;
  while (null != (line=reader.readLine())) {
    String[] tokens=line.split("\\|");
    List<Versioned<Object>> found=store.get(tokens[0]);
    String result=(String)found.get(0).getValue();
    assertEquals("Value for key should match for set value",tokens[1],result);
    int changeIndex=(int)(Math.random() * tokens[0].length());
    found=store.get(tokens[0].replace(tokens[0].charAt(changeIndex),'|'));
    if (found.size() > 0) {
      result=(String)found.get(0).getValue();
      assertNotSame("Value for key should not match for set value",tokens[1],result);
    }
  }
}
