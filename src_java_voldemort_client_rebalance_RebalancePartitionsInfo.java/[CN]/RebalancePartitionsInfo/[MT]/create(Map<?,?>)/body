{
  int stealerId=(Integer)map.get("stealerId");
  int donorId=(Integer)map.get("donorId");
  List<String> unbalancedStoreList=Utils.uncheckedCast(map.get("unbalancedStores"));
  int maxReplicas=(Integer)map.get("maxReplicas");
  Cluster initialCluster=new ClusterMapper().readCluster(new StringReader((String)map.get("initialCluster")));
  HashMap<String,HashMap<Integer,List<Integer>>> storeToReplicaToAddPartition=Maps.newHashMap();
  for (  String unbalancedStore : unbalancedStoreList) {
    HashMap<Integer,List<Integer>> replicaToAddPartition=Maps.newHashMap();
    for (int replicaNo=0; replicaNo <= maxReplicas; replicaNo++) {
      List<Integer> partitionList=Utils.uncheckedCast(map.get(unbalancedStore + "replicaToAddPartitionList" + Integer.toString(replicaNo)));
      if (partitionList.size() > 0)       replicaToAddPartition.put(replicaNo,partitionList);
    }
    if (replicaToAddPartition.size() > 0)     storeToReplicaToAddPartition.put(unbalancedStore,replicaToAddPartition);
  }
  return new RebalancePartitionsInfo(stealerId,donorId,storeToReplicaToAddPartition,initialCluster);
}
