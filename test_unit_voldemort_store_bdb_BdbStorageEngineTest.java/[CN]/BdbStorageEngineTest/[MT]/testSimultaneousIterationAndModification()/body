{
  ExecutorService executor=Executors.newFixedThreadPool(2);
  final Random rand=new Random();
  final AtomicInteger count=new AtomicInteger(0);
  final AtomicBoolean keepRunning=new AtomicBoolean(true);
  executor.execute(new Runnable(){
    public void run(){
      while (keepRunning.get()) {
        byte[] bytes=Integer.toString(count.getAndIncrement()).getBytes();
        store.put(new ByteArray(bytes),Versioned.value(bytes),null);
        count.incrementAndGet();
      }
    }
  }
);
  executor.execute(new Runnable(){
    public void run(){
      while (keepRunning.get()) {
        byte[] bytes=Integer.toString(rand.nextInt(count.get())).getBytes();
        store.delete(new ByteArray(bytes),new VectorClock());
        count.incrementAndGet();
      }
    }
  }
);
  while (count.get() < 300)   continue;
  ClosableIterator<Pair<ByteArray,Versioned<byte[]>>> iter=this.store.entries();
  while (iter.hasNext())   iter.next();
  iter.close();
  keepRunning.set(false);
  executor.shutdown();
  assertTrue(executor.awaitTermination(5,TimeUnit.SECONDS));
}
