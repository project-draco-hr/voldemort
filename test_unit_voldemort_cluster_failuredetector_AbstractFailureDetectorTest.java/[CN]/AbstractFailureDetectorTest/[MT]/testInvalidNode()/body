{
  Node invalidNode=new Node(10000,"localhost",8081,6666,6667,Collections.<Integer>emptyList());
  try {
    failureDetector.getLastChecked(invalidNode);
    fail("Should not be able to call getLastChecked on invalid node");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    failureDetector.isAvailable(invalidNode);
    fail("Should not be able to call isAvailable on invalid node");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    failureDetector.recordException(invalidNode,0,null);
    fail("Should not be able to call recordException on invalid node");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    failureDetector.recordSuccess(invalidNode,0);
    fail("Should not be able to call recordSuccess on invalid node");
  }
 catch (  IllegalArgumentException e) {
  }
}
