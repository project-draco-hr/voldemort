{
  logger.info("messageReceived!! (omg)");
  if (!readingChunks) {
    HttpRequest request=this.request=(HttpRequest)messageEvent.getMessage();
    String requestURI=this.request.getUri();
    if (logger.isDebugEnabled()) {
      logger.debug("Request URI: " + requestURI);
    }
    if (request.isChunked()) {
      readingChunks=true;
    }
 else {
      HttpResponse response;
      HttpMethod httpMethod=request.getMethod();
      if (httpMethod.equals(HttpMethod.GET)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Received a Http GET request at " + System.currentTimeMillis() + " ms");
        }
        response=handleGet();
      }
 else       if (httpMethod.equals(HttpMethod.POST)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Recieved a Http POST request at " + System.currentTimeMillis() + " ms");
        }
        response=handlePut();
      }
 else       if (httpMethod.equals(HttpMethod.DELETE)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Received a Http DELETE request at " + System.currentTimeMillis() + " ms");
        }
        response=handleDelete();
      }
 else {
        String errorMessage="Illegal Http request received at " + System.currentTimeMillis() + " ms";
        logger.error(errorMessage);
        RestErrorHandler.writeErrorResponse(messageEvent,BAD_REQUEST,errorMessage);
        return;
      }
      messageEvent.getChannel().write(response);
    }
  }
 else {
    HttpChunk chunk=(HttpChunk)messageEvent.getMessage();
    if (chunk.isLast()) {
      readingChunks=false;
    }
  }
}
