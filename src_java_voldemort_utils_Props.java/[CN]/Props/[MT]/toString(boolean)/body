{
  StringBuilder builder=new StringBuilder("{");
  boolean firstLine=true;
  SortedSet<Entry<String,String>> sortedEntries=new TreeSet<Entry<String,String>>(new Comparator<Entry<String,String>>(){
    @Override public int compare(    Entry<String,String> o1,    Entry<String,String> o2){
      return o1.getKey().compareTo(o2.getKey());
    }
  }
);
  sortedEntries.addAll(this.props.entrySet());
  for (  Entry<String,String> entry : sortedEntries) {
    if (oneLinePerEntry) {
      builder.append("\n\t");
    }
 else {
      if (firstLine) {
        firstLine=false;
      }
 else {
        builder.append(", ");
      }
    }
    builder.append(entry.getKey());
    builder.append(": ");
    builder.append(entry.getValue());
  }
  if (oneLinePerEntry) {
    builder.append("\n");
  }
  builder.append("}");
  return builder.toString();
}
