{
  OptionParser parser=getParser();
  List<String> quotaTypes=null;
  List<String> storeNames=null;
  List<Integer> nodeIds=null;
  Boolean allNodes=null;
  String url=null;
  args=AdminToolUtils.copyArrayAddFirst(args,"--" + OPT_HEAD_QUOTA_GET);
  OptionSet options=parser.parse(args);
  if (options.has(AdminParserUtils.OPT_HELP)) {
    printHelp(System.out);
    return;
  }
  AdminParserUtils.checkRequired(options,OPT_HEAD_QUOTA_GET);
  AdminParserUtils.checkRequired(options,AdminParserUtils.OPT_STORE);
  AdminParserUtils.checkRequired(options,AdminParserUtils.OPT_URL);
  AdminParserUtils.checkOptional(options,AdminParserUtils.OPT_NODE,AdminParserUtils.OPT_ALL_NODES);
  try {
    quotaTypes=AdminToolUtils.getQuotaTypes((List<String>)options.valuesOf(OPT_HEAD_QUOTA_GET));
  }
 catch (  VoldemortException e) {
    printHelp(System.out);
    throw e;
  }
  storeNames=(List<String>)options.valuesOf(AdminParserUtils.OPT_STORE);
  url=(String)options.valueOf(AdminParserUtils.OPT_URL);
  allNodes=options.has(AdminParserUtils.OPT_ALL_NODES);
  if (options.has(AdminParserUtils.OPT_NODE)) {
    nodeIds=(List<Integer>)options.valuesOf(AdminParserUtils.OPT_NODE);
  }
  AdminClient adminClient=AdminToolUtils.getAdminClient(url);
  if (allNodes) {
    nodeIds=AdminToolUtils.getAllNodeIds(adminClient);
  }
  doQuotaGet(adminClient,storeNames,quotaTypes,nodeIds);
}
