{
  OptionParser parser=getParser();
  List<String> quotaTypes=null;
  List<String> storeNames=null;
  String url=null;
  Boolean confirm=false;
  args=AdminToolUtils.copyArrayAddFirst(args,"--" + OPT_HEAD_QUOTA_UNSET);
  OptionSet options=parser.parse(args);
  if (options.has(AdminParserUtils.OPT_HELP)) {
    printHelp(System.out);
    return;
  }
  AdminParserUtils.checkRequired(options,OPT_HEAD_QUOTA_UNSET);
  AdminParserUtils.checkRequired(options,AdminParserUtils.OPT_STORE);
  AdminParserUtils.checkRequired(options,AdminParserUtils.OPT_URL);
  quotaTypes=AdminToolUtils.getQuotaTypes((List<String>)options.valuesOf(OPT_HEAD_QUOTA_UNSET));
  storeNames=(List<String>)options.valuesOf(AdminParserUtils.OPT_STORE);
  url=(String)options.valueOf(AdminParserUtils.OPT_URL);
  if (options.has(AdminParserUtils.OPT_CONFIRM)) {
    confirm=true;
  }
  System.out.println("Unset quota for stores");
  System.out.println("Quota:");
  System.out.println("  " + Joiner.on(", ").join(quotaTypes));
  System.out.println("Store:");
  System.out.println("  " + Joiner.on(", ").join(storeNames));
  System.out.println("Location:");
  System.out.println("  bootstrap url = " + url);
  System.out.println("  node = all nodes");
  if (!AdminToolUtils.askConfirm(confirm,"unset quota")) {
    return;
  }
  AdminClient adminClient=AdminToolUtils.getAdminClient(url);
  AdminToolUtils.assertServerNotInRebalancingState(adminClient);
  doQuotaUnset(adminClient,storeNames,quotaTypes);
}
