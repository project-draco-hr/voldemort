{
  if (cls == Integer.class) {
    IntegerKeyProvider kp=new IntegerKeyProvider(start,keys);
    return percentCached != 0 ? new CachedKeyProvider<Integer>(kp,percentCached) : kp;
  }
 else   if (cls == String.class) {
    StringKeyProvider kp=new StringKeyProvider(start,keys);
    return percentCached != 0 ? new CachedKeyProvider<String>(kp,percentCached) : kp;
  }
 else   if (cls == byte[].class) {
    ByteArrayKeyProvider kp=new ByteArrayKeyProvider(start,keys);
    return percentCached != 0 ? new CachedKeyProvider<byte[]>(kp,percentCached) : kp;
  }
 else {
    throw new IllegalArgumentException("No KeyProvider exists for class " + cls);
  }
}
