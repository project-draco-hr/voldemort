{
  this.nodeId=metadataStore.getNodeId();
  this.request=request;
  this.errorCodeMapper=errorCodeMapper;
  this.replicaToPartitionList=ProtoUtils.decodePartitionTuple(request.getReplicaToPartitionList());
  this.stats=stats;
  this.handle=stats.makeHandle(operation,replicaToPartitionList);
  this.storageEngine=AdminServiceRequestHandler.getStorageEngine(storeRepository,request.getStore());
  this.storeDef=metadataStore.getStoreDef(request.getStore());
  if (request.hasInitialCluster()) {
    this.initialCluster=new ClusterMapper().readCluster(new StringReader(request.getInitialCluster()));
  }
 else {
    this.initialCluster=metadataStore.getCluster();
  }
  this.throttler=new EventThrottler(voldemortConfig.getStreamMaxReadBytesPerSec());
  if (request.hasFilter()) {
    this.filter=AdminServiceRequestHandler.getFilterFromRequest(request.getFilter(),voldemortConfig,networkClassLoader);
  }
 else {
    this.filter=new DefaultVoldemortFilter();
  }
  this.keyIterator=storageEngine.keys();
  this.startTime=System.currentTimeMillis();
  this.counter=0;
  this.skipRecords=1;
  if (request.hasSkipRecords() && request.getSkipRecords() >= 0) {
    this.skipRecords=request.getSkipRecords() + 1;
  }
}
