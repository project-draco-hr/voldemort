{
  VAdminProto.AsyncOperationStatusResponse.Builder response=VAdminProto.AsyncOperationStatusResponse.newBuilder();
  try {
    if (!voldemortConfig.isEnableRebalanceService())     throw new VoldemortException("Rebalance service is not enabled for node:" + metadataStore.getNodeId());
    if (!rebalancer.acquireRebalancingPermit()) {
      throw new VoldemortException("Node:" + metadataStore.getNodeId() + " is already rebalancing cannot start new rebalancing request.");
    }
    RebalanceStealInfo rebalanceStealInfo=new RebalanceStealInfo(request.getStealerId(),request.getDonorId(),request.getPartitionsList(),request.getUnbalancedStoreList(),request.getAttempt());
    int requestId=rebalancer.rebalanceLocalNode(request.getCurrentStore(),rebalanceStealInfo);
    response.setRequestId(requestId).setDescription(rebalanceStealInfo.toString()).setStatus("started").setComplete(false);
  }
 catch (  VoldemortException e) {
    response.setError(ProtoUtils.encodeError(errorCodeMapper,e));
    logger.error("handleRebalanceNode failed for request(" + request.toString() + ")",e);
  }
  return response.build();
}
