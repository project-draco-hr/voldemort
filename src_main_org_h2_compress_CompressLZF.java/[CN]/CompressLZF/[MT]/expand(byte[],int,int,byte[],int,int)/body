{
  do {
    int ctrl=in[inPos++] & 255;
    if (ctrl < (1 << 5)) {
      ctrl+=inPos;
      do {
        out[outPos++]=in[inPos];
      }
 while (inPos++ < ctrl);
    }
 else {
      int len=ctrl >> 5;
      ctrl=-((ctrl & 0x1f) << 8) - 1;
      if (len == 7) {
        len+=in[inPos++] & 255;
      }
      ctrl-=in[inPos++] & 255;
      len+=outPos + 2;
      out[outPos]=out[outPos++ + ctrl];
      out[outPos]=out[outPos++ + ctrl];
      while (outPos < len - 8) {
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
        out[outPos]=out[outPos++ + ctrl];
      }
      while (outPos < len) {
        out[outPos]=out[outPos++ + ctrl];
      }
    }
  }
 while (outPos < outLen);
}
