{
  Props props=new Props(properties);
  if (props.containsKey(BOOTSTRAP_URLS_PROPERTY)) {
    setBootstrapURLs(props.getList(BOOTSTRAP_URLS_PROPERTY));
  }
  if (props.containsKey(FAT_CLIENTS_CONFIG_SOURCE)) {
    setFatClientConfigSource(StoreClientConfigSource.get(props.getString(FAT_CLIENTS_CONFIG_SOURCE)));
  }
  if (props.containsKey(FAT_CLIENTS_CONFIG_FILE_PATH_PROPERTY)) {
    setFatClientConfigPath(props.getString(FAT_CLIENTS_CONFIG_FILE_PATH_PROPERTY));
  }
  if (props.containsKey(METADATA_CHECK_INTERVAL_IN_MS)) {
    setMetadataCheckIntervalInMs(props.getInt(METADATA_CHECK_INTERVAL_IN_MS));
  }
  if (props.containsKey(NETTY_SERVER_PORT)) {
    setServerPort(props.getInt(NETTY_SERVER_PORT));
  }
  if (props.containsKey(NETTY_SERVER_BACKLOG)) {
    setNettyServerBacklog(props.getInt(NETTY_SERVER_BACKLOG));
  }
  if (props.containsKey(COORDINATOR_CORE_THREADS)) {
    setCoordinatorCoreThreads(props.getInt(COORDINATOR_CORE_THREADS));
  }
  if (props.containsKey(COORDINATOR_MAX_THREADS)) {
    setCoordinatorMaxThreads(props.getInt(COORDINATOR_MAX_THREADS));
  }
  if (props.containsKey(COORDINATOR_QUEUED_REQUESTS)) {
    setCoordinatorQueuedRequestsSize(props.getInt(COORDINATOR_QUEUED_REQUESTS));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_INITIAL_LINE_LENGTH)) {
    setHttpMessageDecoderMaxInitialLength(props.getInt(HTTP_MESSAGE_DECODER_MAX_INITIAL_LINE_LENGTH));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_HEADER_SIZE)) {
    setHttpMessageDecoderMaxHeaderSize(props.getInt(HTTP_MESSAGE_DECODER_MAX_HEADER_SIZE));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_CHUNK_SIZE)) {
    setHttpMessageDecoderMaxChunkSize(props.getInt(HTTP_MESSAGE_DECODER_MAX_CHUNK_SIZE));
  }
  if (props.containsKey(ADMIN_ENABLE)) {
    setAdminServiceEnabled(props.getBoolean(ADMIN_ENABLE));
  }
  if (props.containsKey(ADMIN_PORT)) {
    setAdminPort(props.getInt(ADMIN_PORT));
  }
}
