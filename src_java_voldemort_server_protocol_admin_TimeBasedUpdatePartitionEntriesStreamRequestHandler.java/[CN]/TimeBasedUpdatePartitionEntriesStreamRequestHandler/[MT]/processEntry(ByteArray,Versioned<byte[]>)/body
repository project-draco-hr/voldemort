{
  KeyLockHandle<byte[]> handle=null;
  try {
    handle=storageEngine.getAndLock(key);
    boolean foundGreaterTs=false;
    VectorClock streamedClock=(VectorClock)value.getVersion();
    for (    Versioned<byte[]> versioned : handle.getValues()) {
      VectorClock storedClock=(VectorClock)versioned.getVersion();
      if (storedClock.getTimestamp() >= streamedClock.getTimestamp()) {
        foundGreaterTs=true;
        break;
      }
    }
    if (!foundGreaterTs) {
      List<Versioned<byte[]>> streamedVals=new ArrayList<Versioned<byte[]>>(1);
      streamedVals.add(value);
      handle.setValues(streamedVals);
      storageEngine.putAndUnlock(key,handle);
    }
 else {
      storageEngine.releaseLock(handle);
    }
  }
 catch (  Exception e) {
    logger.error("Error in time based update entries",e);
    throw new IOException(e);
  }
 finally {
    if (handle != null && !handle.isClosed()) {
      storageEngine.releaseLock(handle);
    }
  }
}
