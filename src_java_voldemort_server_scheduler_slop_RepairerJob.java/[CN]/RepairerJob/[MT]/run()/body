{
  if (!metadataStore.getServerState().equals(MetadataStore.VoldemortState.NORMAL_SERVER)) {
    logger.error("Cannot run repair job since cluster is rebalancing");
    return;
  }
  Date startTime=new Date();
  logger.info("Started repair job at " + startTime);
  acquireRepairPermit();
  try {
    RoutingStrategyFactory routingStrategyFactory=new RoutingStrategyFactory();
    StorageEngine<ByteArray,Slop,byte[]> slopStorageEngine=storeRepo.getSlopStore().asSlopStore();
    for (    StoreDefinition storeDef : metadataStore.getStoreDefList()) {
      if (isWritableStore(storeDef)) {
        StorageEngine<ByteArray,byte[],byte[]> engine=storeRepo.getStorageEngine(storeDef.getName());
        ClosableIterator<Pair<ByteArray,Versioned<byte[]>>> iterator=engine.entries();
        RoutingStrategy routingStrategy=routingStrategyFactory.updateRoutingStrategy(storeDef,metadataStore.getCluster());
        while (iterator.hasNext()) {
          Pair<ByteArray,Versioned<byte[]>> keyAndVal;
          keyAndVal=iterator.next();
          List<Node> nodes=routingStrategy.routeRequest(keyAndVal.getFirst().get());
          if (!hasDestination(nodes)) {
            for (            Node node : nodes) {
              Slop slop=new Slop(storeDef.getName(),Slop.Operation.PUT,keyAndVal.getFirst(),keyAndVal.getSecond().getValue(),null,node.getId(),new Date());
              Versioned<Slop> slopVersioned=new Versioned<Slop>(slop,keyAndVal.getSecond().getVersion());
              slopStorageEngine.put(slop.makeKey(),slopVersioned,null);
            }
          }
        }
      }
    }
  }
  finally {
    this.repairPermits.release();
    logger.info("Completed repair job started at " + startTime);
  }
}
