{
  int numServers=4;
  int ports[]=ServerTestUtils.findFreePorts(3 * numServers);
  currentCluster=ServerTestUtils.getLocalCluster(numServers,ports,new int[][]{{3,6,9,12,15},{1,4,7,10,13,16},{2,5,8,11,14,17},{0}});
  finalCluster=ServerTestUtils.getLocalCluster(numServers,ports,new int[][]{{0,3,6,9,12,15},{1,4,7,10,13,16},{2,5,8,11,14,17},{}});
  List<RebalanceTaskInfo> orderedRebalanceTaskInfoList=ClusterTestUtils.getBatchPlan(currentCluster,finalCluster,storeDefList2);
  assertEquals("There should have exactly 1 rebalancing node",1,getUniqueNodeCount(orderedRebalanceTaskInfoList,false));
  assertEquals("There should be exactly 1 rebalancing partition info",1,orderedRebalanceTaskInfoList.size());
  assertEquals("Stealer 0 should have 1 entry",1,getStealerNodePartitionTaskCount(0,orderedRebalanceTaskInfoList));
  HashMap<String,List<Integer>> storeToPartitionsToMove=Maps.newHashMap();
  storeToPartitionsToMove.put("test",Lists.newArrayList(0,16,17));
  checkAllRebalanceInfoPresent(getStealerNodePartitionTaskList(0,orderedRebalanceTaskInfoList),Arrays.asList(new RebalanceTaskInfo(0,3,storeToPartitionsToMove,currentCluster)));
}
