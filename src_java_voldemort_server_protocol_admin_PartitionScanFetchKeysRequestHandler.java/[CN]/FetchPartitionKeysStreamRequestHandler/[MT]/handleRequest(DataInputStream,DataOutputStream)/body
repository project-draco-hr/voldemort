{
  if (keysPartitionIterator == null) {
    if (currentIndex == partitionList.size()) {
      return StreamRequestHandlerState.COMPLETE;
    }
    boolean found=false;
    while (!found && (currentIndex < partitionList.size())) {
      currentPartition=partitionList.get(currentIndex);
      currentReplicaType=replicaTypeList.get(currentIndex);
      if (!fetchedPartitions.contains(currentPartition) && StoreInstance.checkPartitionBelongsToNode(currentPartition,currentReplicaType,nodeId,initialCluster,storeDef)) {
        found=true;
        fetchedPartitions.add(currentPartition);
        partitionFetched=0;
        keysPartitionIterator=storageEngine.keys(currentPartition);
        statusInfoMessage("Starting fetch keys");
      }
      currentIndex++;
    }
  }
 else {
    long startNs=System.nanoTime();
    if (keysPartitionIterator.hasNext()) {
      ByteArray key=keysPartitionIterator.next();
      reportStorageOpTime(startNs);
      throttler.maybeThrottle(key.length());
      if (filter.accept(key,null)) {
        recordFetched();
        VAdminProto.FetchPartitionEntriesResponse.Builder response=VAdminProto.FetchPartitionEntriesResponse.newBuilder();
        response.setKey(ProtoUtils.encodeBytes(key));
        Message message=response.build();
        sendMessage(outputStream,message);
      }
      scanned++;
      if (0 == scanned % STAT_RECORDS_INTERVAL) {
        progressInfoMessage("Fetch keys (progress)");
      }
    }
    if (!keysPartitionIterator.hasNext() || fetchedEnough(partitionFetched)) {
      keysPartitionIterator.close();
      keysPartitionIterator=null;
      statusInfoMessage("Finished fetch keys");
      progressInfoMessage("Fetch keys (end of partition)");
    }
  }
  return StreamRequestHandlerState.WRITING;
}
