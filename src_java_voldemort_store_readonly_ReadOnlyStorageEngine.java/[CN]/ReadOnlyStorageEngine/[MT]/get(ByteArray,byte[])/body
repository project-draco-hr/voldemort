{
  checkStoreEnabled();
  StoreUtils.assertValidKey(key);
  try {
    fileModificationLock.readLock().lock();
    int chunk=fileSet.getChunkForKey(key.get());
    if (chunk < 0) {
      throw new IllegalStateException("Invalid chunk id returned: " + chunk);
    }
    int location=searchStrategy.indexOf(fileSet.indexFileFor(chunk),fileSet.keyToStorageFormat(key.get()),fileSet.getIndexFileSize(chunk));
    if (location >= 0) {
      byte[] value=fileSet.readValue(key.get(),chunk,location);
      if (value.length == 0) {
        return Collections.emptyList();
      }
 else {
        return Collections.singletonList(Versioned.value(value));
      }
    }
 else {
      return Collections.emptyList();
    }
  }
 catch (  IllegalStateException e) {
    logger.warn("ChunkedFileSet.getChunkForKey() did not execute successfully for store '" + getName() + "'. Returning empty result for key: "+ ByteUtils.toHexString(key.get()),e);
    return Collections.emptyList();
  }
 finally {
    fileModificationLock.readLock().unlock();
  }
}
