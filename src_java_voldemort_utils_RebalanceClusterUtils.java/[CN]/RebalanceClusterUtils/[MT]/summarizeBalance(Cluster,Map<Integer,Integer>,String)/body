{
  StringBuilder builder=new StringBuilder();
  Set<Integer> nodeIds=currentCluster.getNodeIds();
  builder.append("\n" + title + "\n");
  int minVal=Integer.MAX_VALUE;
  int maxVal=Integer.MIN_VALUE;
  int aggCount=0;
  for (  Integer nodeId : nodeIds) {
    int curCount=nodeIdToPartitionCount.get(nodeId);
    builder.append("\tNode ID: " + nodeId + " : "+ curCount+ " ("+ currentCluster.getNodeById(nodeId).getHost()+ ")\n");
    aggCount+=curCount;
    if (curCount > maxVal)     maxVal=curCount;
    if (curCount < minVal)     minVal=curCount;
  }
  double maxMinRatio=maxVal * 1.0 / minVal;
  if (minVal == 0) {
    maxMinRatio=maxVal;
  }
  builder.append("\tMin: " + minVal + "\n");
  builder.append("\tAvg: " + aggCount / nodeIdToPartitionCount.size() + "\n");
  builder.append("\tMax: " + maxVal + "\n");
  builder.append("\t\tMax/Min: " + maxMinRatio + "\n");
  return Pair.create(maxMinRatio,builder.toString());
}
