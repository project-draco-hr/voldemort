{
  FileChannel dataFile=dataFileFor(chunk);
  try {
switch (storageFormat) {
case READONLY_V0:
case READONLY_V1:
{
        ByteBuffer sizeBuffer=ByteBuffer.allocate(ByteUtils.SIZE_OF_INT);
        dataFile.read(sizeBuffer,valueLocation);
        int valueSize=sizeBuffer.getInt(0);
        ByteBuffer valueBuffer=ByteBuffer.allocate(valueSize);
        dataFile.read(valueBuffer,valueLocation + ByteUtils.SIZE_OF_INT);
        return valueBuffer.array();
      }
case READONLY_V2:
{
      ByteBuffer numKeyValsBuffer=ByteBuffer.allocate(ByteUtils.SIZE_OF_BYTE);
      dataFile.read(numKeyValsBuffer,valueLocation);
      int numKeyVal=numKeyValsBuffer.get(0) & ByteUtils.MASK_11111111;
      valueLocation+=ByteUtils.SIZE_OF_BYTE;
      for (int keyId=0; keyId < numKeyVal; keyId++) {
        ByteBuffer sizeBuffer=ByteBuffer.allocate(2 * ByteUtils.SIZE_OF_INT);
        dataFile.read(sizeBuffer,valueLocation);
        valueLocation+=(2 * ByteUtils.SIZE_OF_INT);
        int keySize=sizeBuffer.getInt(0);
        int valueSize=sizeBuffer.getInt(ByteUtils.SIZE_OF_INT);
        ByteBuffer buffer=ByteBuffer.allocate(keySize);
        dataFile.read(buffer,valueLocation);
        valueLocation+=keySize;
        if (ByteUtils.compare(buffer.array(),key) == 0) {
          buffer=ByteBuffer.allocate(valueSize);
          dataFile.read(buffer,valueLocation);
          return buffer.array();
        }
        valueLocation+=valueSize;
      }
      return new byte[0];
    }
default :
{
    throw new VoldemortException("Storage format not supported ");
  }
}
}
 catch (IOException e) {
throw new VoldemortException(e);
}
}
