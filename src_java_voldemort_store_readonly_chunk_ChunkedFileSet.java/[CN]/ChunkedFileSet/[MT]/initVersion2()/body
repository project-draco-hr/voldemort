{
  int globalChunkId=0;
  if (this.nodePartitionIds != null) {
    for (    Node node : routingStrategy.getNodes()) {
      for (      int partitionId : node.getPartitionIds()) {
        List<Integer> routingPartitionList=routingStrategy.getReplicatingPartitionList(partitionId);
        String bucket=null;
        for (int replicaType=0; replicaType < routingPartitionList.size(); replicaType++) {
          if (nodePartitionIds.contains(routingPartitionList.get(replicaType))) {
            if (bucket == null) {
              bucket=Integer.toString(routingPartitionList.get(0)) + "_" + Integer.toString(replicaType);
              int chunkId=0;
              while (true) {
                String fileName=bucket + "_" + Integer.toString(chunkId);
                File index=new File(baseDir,fileName + ".index");
                File data=new File(baseDir,fileName + ".data");
                if (!index.exists() && !data.exists()) {
                  if (chunkId == 0) {
                    try {
                      new File(baseDir,fileName + ".index").createNewFile();
                      new File(baseDir,fileName + ".data").createNewFile();
                      logger.info("No index or data files found, creating empty files for partition " + routingPartitionList.get(0) + " and replica type "+ replicaType);
                    }
 catch (                    IOException e) {
                      throw new VoldemortException("Error creating empty read-only files for partition " + routingPartitionList.get(0) + " and replica type "+ replicaType,e);
                    }
                  }
 else {
                    break;
                  }
                }
 else                 if (index.exists() ^ data.exists()) {
                  throw new VoldemortException("One of the following does not exist: " + index.toString() + " or "+ data.toString()+ ".");
                }
                if (chunkId == 0) {
                  chunkIdToChunkStart.put(bucket,globalChunkId);
                }
                long indexLength=index.length();
                long dataLength=data.length();
                validateFileSizes(indexLength,dataLength);
                indexFileSizes.add((int)indexLength);
                dataFileSizes.add((int)dataLength);
                dataFiles.add(openChannel(data));
                indexFiles.add(mapFile(index));
                chunkId++;
                globalChunkId++;
              }
              chunkIdToNumChunks.put(bucket,chunkId);
            }
 else {
              throw new VoldemortException("Found a collision for master partition for bucket named " + bucket);
            }
          }
        }
      }
    }
    if (indexFileSizes.size() == 0)     throw new VoldemortException("No chunk files found in directory " + baseDir.toString());
  }
}
