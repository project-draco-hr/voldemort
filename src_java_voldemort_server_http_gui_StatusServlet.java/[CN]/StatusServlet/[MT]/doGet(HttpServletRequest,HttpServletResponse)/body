{
  String storeName=request.getParameter("store");
  String format=request.getParameter("format");
  if ("json".equals(format)) {
    outputJSON(response);
    return;
  }
 else {
    response.setContentType("text/html");
    long refreshTime=600;
    String refresh=request.getParameter("refresh");
    if (refresh != null) {
      try {
        refreshTime=Integer.parseInt(refresh);
      }
 catch (      NumberFormatException e) {
        response.sendError(HttpServletResponse.SC_BAD_REQUEST);
      }
    }
    List<Store<ByteArray,byte[],byte[]>> stores=null;
    if (storeName == null) {
      stores=server.getStoreRepository().getAllLocalStores();
    }
 else {
      stores=Collections.singletonList(server.getStoreRepository().getLocalStore(storeName));
    }
    Map<String,Object> params=Maps.newHashMap();
    params.put("status",abstractSocketService.getStatusManager());
    params.put("counters",Tracked.values());
    params.put("stores",stores);
    params.put("refresh",refreshTime);
    velocityEngine.render("status.vm",params,response.getOutputStream());
  }
}
