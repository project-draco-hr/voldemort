{
  StringBuilder sb=new StringBuilder("{\n");
  sb.append("  \"servertime\": \"");
  sb.append(new Date());
  sb.append("\",");
  sb.append("\n  \"server\": \"");
  sb.append(myMachine);
  sb.append("\",");
  sb.append("\n  \"node\": \"");
  sb.append(server.getVoldemortMetadata().getIdentityNode().getId());
  sb.append("\",");
  sb.append("\n  \"uptime\": \"");
  sb.append(socketService.getStatusManager().getFormattedUptime());
  sb.append("\",");
  sb.append("\n  \"num_workers\": ");
  sb.append(socketService.getStatusManager().getActiveWorkersCount());
  sb.append(",");
  sb.append("\n  \"pool_size\": ");
  sb.append(socketService.getStatusManager().getWorkerPoolSize());
  sb.append(",");
  sb.append("\n  \"stores\": {");
  int i=0;
  for (  Store<ByteArray,byte[]> store : server.getStoreRepository().getAllLocalStores()) {
    if (store instanceof StatTrackingStore<?,?>) {
      StatTrackingStore<?,?> statStore=(StatTrackingStore<?,?>)store;
      Map<Tracked,RequestCounter> stats=statStore.getCounters();
      if (i++ > 0) {
        sb.append(",");
      }
      sb.append("\n    \"");
      sb.append(statStore.getName());
      sb.append("\" : {\n");
      int j=0;
      for (      Tracked t : Tracked.values()) {
        if (t == Tracked.EXCEPTION) {
          continue;
        }
        if (j++ > 0) {
          sb.append(",\n");
        }
        sb.append("        \"");
        sb.append(t.toString());
        sb.append("\": { ");
        sb.append("\"operations\": ");
        sb.append(stats.get(t).getCount());
        sb.append(", ");
        sb.append("\"throughput\": ");
        sb.append(String.format("%.2f",stats.get(t).getThroughput()));
        sb.append(", ");
        sb.append("\"avg_time_ms\": ");
        sb.append(String.format("%.4f",stats.get(t).getAverageTimeInMs()));
        sb.append(" }");
      }
      sb.append(",\n        \"num_exceptions\": ");
      sb.append(statStore.getNumberOfExceptions());
      sb.append("\n");
      sb.append("    }");
    }
  }
  sb.append("\n  }\n");
  sb.append("}\n");
  try {
    response.setContentType("text/plain");
    OutputStreamWriter writer=new OutputStreamWriter(response.getOutputStream());
    writer.write(sb.toString());
    writer.flush();
  }
 catch (  Exception e) {
    throw new VoldemortException(e);
  }
}
