{
  final int numServers=1;
  servers=new VoldemortServer[numServers];
  int partitionMap[][]={{0,1,2,3,4,5,6,7}};
  try {
    cluster=ServerTestUtils.startVoldemortCluster(numServers,servers,partitionMap,socketStoreFactory,true,null,storesXmlfile,new Properties());
  }
 catch (  IOException e) {
    fail("Failure to setup the cluster");
  }
  socketUrl=servers[0].getIdentityNode().getSocketUrl().toString();
  List<String> bootstrapUrls=new ArrayList<String>();
  bootstrapUrls.add(socketUrl);
  CoordinatorConfig coordinatorConfig=new CoordinatorConfig();
  coordinatorConfig.setBootstrapURLs(bootstrapUrls).setCoordinatorCoreThreads(100).setCoordinatorMaxThreads(100).setFatClientConfigPath(FAT_CLIENT_CONFIG_PATH).setServerPort(SERVER_PORT).setAdminPort(ADMIN_PORT);
  try {
    coordinator=new CoordinatorAdminService(coordinatorConfig);
    coordinator.start();
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Failure to start the Coordinator");
  }
  Properties props=new Properties();
  props.setProperty(ClientConfig.BOOTSTRAP_URLS_PROPERTY,BOOTSTRAP_URL);
  props.setProperty(ClientConfig.ROUTING_TIMEOUT_MS_PROPERTY,"1500");
  this.adminClient=new CoordinatorAdminClient(new RESTClientConfig(props));
}
