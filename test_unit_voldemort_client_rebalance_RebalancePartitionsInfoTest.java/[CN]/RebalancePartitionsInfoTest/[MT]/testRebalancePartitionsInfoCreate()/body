{
  RebalancePartitionsInfo info=new RebalancePartitionsInfo(0,1,new HashMap<Integer,List<Integer>>(),Lists.newArrayList("test"),ServerTestUtils.getLocalCluster(1),true,0);
  String jsonString=info.toJsonString();
  RebalancePartitionsInfo info2=RebalancePartitionsInfo.create(jsonString);
  assertEquals(info,info2);
  HashMap<Integer,List<Integer>> testMap=new HashMap<Integer,List<Integer>>();
  testMap.put(1,Lists.newArrayList(1));
  info=new RebalancePartitionsInfo(0,1,testMap,Lists.newArrayList("test"),ServerTestUtils.getLocalCluster(1),false,0);
  jsonString=info.toJsonString();
  info2=RebalancePartitionsInfo.create(jsonString);
  assertEquals(info,info2);
  assertEquals(info.getReplicaToPartitionList(),info2.getReplicaToPartitionList());
  testMap.put(3,Lists.newArrayList(1,3,5));
  info=new RebalancePartitionsInfo(0,1,testMap,Lists.newArrayList("test","test2"),ServerTestUtils.getLocalCluster(1),false,0);
  jsonString=info.toJsonString();
  info2=RebalancePartitionsInfo.create(jsonString);
  assertEquals(info,info2);
  assertEquals(info.getReplicaToPartitionList(),info2.getReplicaToPartitionList());
}
