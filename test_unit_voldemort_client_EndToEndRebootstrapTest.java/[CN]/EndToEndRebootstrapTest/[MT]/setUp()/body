{
  final int numServers=2;
  servers=new VoldemortServer[numServers];
  int partitionMap[][]={{0,1,2,3},{4,5,6,7}};
  cluster=ServerTestUtils.startVoldemortCluster(numServers,servers,partitionMap,socketStoreFactory,true,null,storesXmlfile,new Properties());
  socketUrl=servers[0].getIdentityNode().getSocketUrl().toString();
  bootStrapUrls=new String[1];
  bootStrapUrls[0]=socketUrl;
  Node node=cluster.getNodeById(0);
  String bootstrapUrl="tcp://" + node.getHost() + ":"+ node.getSocketPort();
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.setClientRegistryUpdateIntervalInSecs(5);
  clientConfig.setAsyncMetadataRefreshInMs(5000);
  clientConfig.setBootstrapUrls(bootstrapUrl);
  SocketStoreClientFactory storeClientFactory=new SocketStoreClientFactory(clientConfig);
  sysRepository=new SystemStoreRepository(clientConfig);
  scheduler=new SchedulerService(clientConfig.getAsyncJobThreadPoolSize(),SystemTime.INSTANCE,true);
  storeClient=new ZenStoreClient<String,String>(STORE_NAME,null,storeClientFactory,3,clientConfig.getClientContextName(),0,clientConfig,scheduler,sysRepository);
  SystemStoreClientFactory<String,String> systemStoreFactory=new SystemStoreClientFactory<String,String>(clientConfig);
  sysStoreVersion=systemStoreFactory.createSystemStore(SystemStoreConstants.SystemStoreName.voldsys$_metadata_version_persistence.name());
  clientRegistryStore=systemStoreFactory.createSystemStore(SystemStoreConstants.SystemStoreName.voldsys$_client_registry.name());
}
