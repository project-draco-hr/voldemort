{
  CheckSum checkSumGenerator=CheckSum.getInstance(checkSumType);
  CheckSum fileCheckSumGenerator=CheckSum.getInstance(checkSumType);
  int bufferSize=64 * 1024;
  byte[] buffer=new byte[bufferSize];
  Arrays.sort(files,new Comparator<File>(){
    public int compare(    File fs1,    File fs2){
      if (fs1.isDirectory())       return fs2.isDirectory() ? 0 : -1;
      if (fs2.isDirectory())       return fs1.isDirectory() ? 0 : 1;
      String f1=fs1.getName(), f2=fs2.getName();
      if (f1.endsWith("checkSum.txt"))       return -1;
      if (f2.endsWith("checkSum.txt"))       return 1;
      if ((f1.endsWith(".index") && f2.endsWith(".index")) || (f1.endsWith(".data") && f2.endsWith(".data"))) {
        return f1.compareToIgnoreCase(f2);
      }
      if (f1.endsWith(".index")) {
        return 1;
      }
 else {
        return -1;
      }
    }
  }
);
  for (  File file : files) {
    if (file.isFile() && !file.getName().startsWith(".") && !file.getName().contains("checkSum.txt")) {
      DataInputStream is;
      try {
        is=new DataInputStream(new FileInputStream(file));
      }
 catch (      FileNotFoundException e) {
        continue;
      }
      try {
        while (true) {
          int read=is.read(buffer);
          if (read < 0)           break;
 else           if (read < bufferSize) {
            buffer=ByteUtils.copy(buffer,0,read);
          }
          fileCheckSumGenerator.update(buffer);
        }
        is.close();
      }
 catch (      IOException e) {
        break;
      }
      checkSumGenerator.update(fileCheckSumGenerator.getCheckSum());
    }
  }
  return checkSumGenerator.getCheckSum();
}
