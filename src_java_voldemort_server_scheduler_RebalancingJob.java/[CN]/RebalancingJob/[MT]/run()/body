{
  logger.info("Rebalancing all keys...");
  int totalRebalanced=0;
  long start=System.currentTimeMillis();
  for (  StorageEngine<byte[],byte[]> engine : localEngines.values()) {
    logger.info("Rebalancing " + engine.getName());
    Store<byte[],byte[]> remote=this.remoteStores.get(engine.getName());
    ClosableIterator<Entry<byte[],Versioned<byte[]>>> iterator=engine.entries();
    int rebalanced=0;
    long currStart=System.currentTimeMillis();
    while (iterator.hasNext()) {
      Entry<byte[],Versioned<byte[]>> entry=iterator.next();
      if (needsRebalancing(entry.getKey())) {
        remote.put(entry.getKey(),entry.getValue());
        engine.delete(entry.getKey(),entry.getValue().getVersion());
        rebalanced++;
      }
    }
    totalRebalanced+=rebalanced;
    long ellapsedSeconds=(System.currentTimeMillis() - currStart) / Time.MS_PER_SECOND;
    logger.info("Rebalancing of store " + engine.getName() + " completed in "+ ellapsedSeconds+ " seconds.");
    logger.info(rebalanced + " keys rebalanced.");
  }
  long ellapsedSeconds=(System.currentTimeMillis() - start) / Time.MS_PER_SECOND;
  logger.info("Rebalancing complete for all stores in " + ellapsedSeconds + " seconds.");
  logger.info(totalRebalanced + " keys rebalanced in total.");
}
