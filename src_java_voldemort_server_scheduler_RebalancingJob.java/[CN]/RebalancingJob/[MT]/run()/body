{
  logger.info("Rebalancing all keys...");
  int totalRebalanced=0;
  long start=System.currentTimeMillis();
  for (  StorageEngine<ByteArray,byte[],byte[]> engine : storeRepository.getAllStorageEngines()) {
    logger.info("Rebalancing " + engine.getName());
    Store<ByteArray,byte[],byte[]> remote=storeRepository.getRoutedStore(engine.getName());
    ClosableIterator<Pair<ByteArray,Versioned<byte[]>>> iterator=engine.entries();
    int rebalanced=0;
    long currStart=System.currentTimeMillis();
    while (iterator.hasNext()) {
      Pair<ByteArray,Versioned<byte[]>> keyAndVal=iterator.next();
      if (needsRebalancing(keyAndVal.getFirst())) {
        remote.put(keyAndVal.getFirst(),keyAndVal.getSecond(),null);
        engine.delete(keyAndVal.getFirst(),keyAndVal.getSecond().getVersion());
        rebalanced++;
      }
    }
    totalRebalanced+=rebalanced;
    long ellapsedSeconds=(System.currentTimeMillis() - currStart) / Time.MS_PER_SECOND;
    logger.info("Rebalancing of store " + engine.getName() + " completed in "+ ellapsedSeconds+ " seconds.");
    logger.info(rebalanced + " keys rebalanced.");
  }
  long ellapsedSeconds=(System.currentTimeMillis() - start) / Time.MS_PER_SECOND;
  logger.info("Rebalancing complete for all stores in " + ellapsedSeconds + " seconds.");
  logger.info(totalRebalanced + " keys rebalanced in total.");
}
