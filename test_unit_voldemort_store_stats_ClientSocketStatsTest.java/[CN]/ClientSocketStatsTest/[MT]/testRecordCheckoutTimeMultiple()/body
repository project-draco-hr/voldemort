{
  ClientSocketStats stats=masterStats;
  assertEquals(0,stats.getCheckoutCount());
  stats.recordCheckoutTimeUs(dest1,100);
  stats.recordCheckoutTimeUs(dest1,200);
  stats.recordCheckoutTimeUs(dest1,300);
  stats.recordCheckoutTimeUs(dest1,400);
  stats.recordCheckoutTimeUs(dest2,500);
  stats.recordCheckoutTimeUs(dest2,600);
  stats.recordCheckoutTimeUs(dest1,700);
  stats.recordCheckoutTimeUs(dest1,800);
  stats.recordCheckoutTimeUs(dest2,900);
  stats.recordCheckoutTimeUs(dest1,1000);
  assertEquals(10,stats.getCheckoutCount());
  assertEqualsWithErrorBound(1000,(int)(stats.getCheckoutTimeMsQ99th() * Time.US_PER_MS));
  ClientSocketStats child1=stats.getStatsMap().get(dest1);
  assertNotNull(child1);
  assertEquals(7,child1.getCheckoutCount());
  assertEqualsWithErrorBound(100,(int)(child1.getCheckoutTimeMsQ10th() * Time.US_PER_MS));
  assertEqualsWithErrorBound(400,(int)(child1.getCheckoutTimeMsQ50th() * Time.US_PER_MS));
  assertEqualsWithErrorBound(1000,(int)(child1.getCheckoutTimeMsQ99th() * Time.US_PER_MS));
  ClientSocketStats child2=stats.getStatsMap().get(dest2);
  assertNotNull(child2);
  assertEquals(3,child2.getCheckoutCount());
  assertEqualsWithErrorBound(500,(int)(child2.getCheckoutTimeMsQ10th() * Time.US_PER_MS));
  assertEqualsWithErrorBound(600,(int)(child2.getCheckoutTimeMsQ50th() * Time.US_PER_MS));
  assertEqualsWithErrorBound(900,(int)(child2.getCheckoutTimeMsQ99th() * Time.US_PER_MS));
}
