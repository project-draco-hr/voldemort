{
  GenericKeyedObjectPool.Config config=new GenericKeyedObjectPool.Config();
  config.maxActive=100;
  config.maxTotal=100;
  config.maxIdle=100;
  config.maxWait=1000000;
  config.testOnBorrow=true;
  config.testOnReturn=true;
  config.whenExhaustedAction=GenericKeyedObjectPool.WHEN_EXHAUSTED_BLOCK;
  KeyedPoolableObjectFactory objFactory=new TestPoolableObjectFactory();
  final KeyedObjectPool pool=new GenericKeyedObjectPool(objFactory,config);
  ExecutorService executor=Executors.newFixedThreadPool(20);
  System.out.println("You should now see 20 quick checkouts in rapid succession:");
  for (int i=0; i < 20; i++) {
    final String key=Integer.toString(i);
    executor.execute(new Runnable(){
      public void run(){
        try {
          System.out.println("Trying to borrow " + key + " at "+ new Date());
          pool.borrowObject(key);
          System.out.println("Borrowing of " + key + " completed at "+ new Date());
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
);
  }
}
