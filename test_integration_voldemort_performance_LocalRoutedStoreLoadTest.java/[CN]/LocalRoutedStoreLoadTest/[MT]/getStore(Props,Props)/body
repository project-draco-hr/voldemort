{
  Cluster cluster=new ClusterMapper().readCluster(new FileReader(propsA.getString("metadata.directory") + File.separator + "/cluster.xml"));
  Map<Integer,Store<ByteArray,byte[]>> clientMapping=Maps.newHashMap();
  StorageConfiguration conf=new BdbStorageConfiguration(new VoldemortConfig(propsA));
  for (  Node node : cluster.getNodes())   clientMapping.put(node.getId(),conf.getStore("test" + node.getId()));
  InconsistencyResolver<Versioned<String>> resolver=new VectorClockInconsistencyResolver<String>();
  Store<ByteArray,byte[]> store=new RoutedStore("test",clientMapping,cluster,ServerTestUtils.getStoreDef("test",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY),10,true,10000L);
  Store<String,String> serializingStore=SerializingStore.wrap(store,new StringSerializer(),new StringSerializer());
  Store<String,String> resolvingStore=new InconsistencyResolvingStore<String,String>(serializingStore,resolver);
  StoreClientFactory factory=new StaticStoreClientFactory(resolvingStore);
  return new DefaultStoreClient<String,String>(store.getName(),resolver,factory,1);
}
