{
  RoutingStrategy routingStrategy=new ZoneRoutingStrategy(clusterWithZones.getNodes(),storeDef.getZoneReplicationFactor(),storeDef.getReplicationFactor());
  BasicPipelineData<byte[]> pipelineData=new BasicPipelineData<byte[]>();
  Pipeline pipeline=new Pipeline(Operation.PUT,10000,TimeUnit.MILLISECONDS);
  for (int clusterZoneId=0; clusterZoneId < clusterWithZones.getNumberOfZones(); clusterZoneId++) {
    pipelineData.setZonesRequired(storeDef.getZoneCountWrites());
    pipeline.addEventAction(Event.STARTED,new ConfigureNodes<byte[],BasicPipelineData<byte[]>>(pipelineData,Event.COMPLETED,failureDetectorWithZones,storeDef.getRequiredReads(),routingStrategy,aKey,clusterWithZones.getZoneById(clusterZoneId)));
    pipeline.addEvent(Event.STARTED);
    pipeline.execute();
    List<Node> pipelineNodes=pipelineData.getNodes();
    int pipelineNodesIndex=0;
    LinkedList<Integer> proximityList=clusterWithZones.getZoneById(clusterZoneId).getProximityList();
    assertEquals(pipelineNodes.get(pipelineNodesIndex++).getZoneId(),clusterZoneId);
    for (; pipelineNodesIndex < pipelineNodes.size(); pipelineNodesIndex++) {
      assertEquals(proximityList.get(pipelineNodesIndex - 1),new Integer(pipelineNodes.get(pipelineNodesIndex).getZoneId()));
    }
  }
  for (int zoneReq=0; zoneReq < clusterWithZones.getNumberOfZones(); zoneReq++) {
    pipelineData=new BasicPipelineData<byte[]>();
    pipeline=new Pipeline(Operation.GET,10000,TimeUnit.MILLISECONDS);
    pipelineData.setZonesRequired(zoneReq);
    pipeline.addEventAction(Event.STARTED,new ConfigureNodes<byte[],BasicPipelineData<byte[]>>(pipelineData,Event.COMPLETED,failureDetectorWithZones,storeDef.getRequiredReads(),routingStrategy,aKey,clusterWithZones.getZoneById(0)));
    pipeline.addEvent(Event.STARTED);
    pipeline.execute();
    int zoneId=1;
    for (int index=0; index < zoneReq; index++) {
      assertEquals(pipelineData.getNodes().get(index).getZoneId(),zoneId++);
    }
  }
}
