{
  Schema schema=getInputPathAvroSchema();
  String serializerName;
  if (isVersioned)   serializerName=DefaultSerializerFactory.AVRO_GENERIC_VERSIONED_TYPE_NAME;
 else   serializerName=DefaultSerializerFactory.AVRO_GENERIC_TYPE_NAME;
  String keySchema, valSchema;
  try {
    Schema.Field keyField=schema.getField(keyFieldName);
    if (keyField == null) {
      throw new VoldemortException("The configured key field (" + keyFieldName + ") was not found in the input data.");
    }
 else {
      keySchema="\n\t\t<type>" + serializerName + "</type>\n\t\t<schema-info version=\"0\">"+ keyField.schema()+ "</schema-info>\n\t";
    }
  }
 catch (  VoldemortException e) {
    throw e;
  }
catch (  Exception e) {
    throw new VoldemortException("Error while trying to extract the key field",e);
  }
  try {
    Schema.Field valueField=schema.getField(valueFieldName);
    if (valueField == null) {
      throw new VoldemortException("The configured value field (" + valueFieldName + ") was not found in the input data.");
    }
 else {
      valSchema="\n\t\t<type>" + serializerName + "</type>\n\t\t<schema-info version=\"0\">"+ valueField.schema()+ "</schema-info>\n\t";
      if (props.getBoolean(BUILD_COMPRESS_VALUE,false)) {
        valSchema+="\t<compression><type>gzip</type></compression>\n\t";
      }
    }
  }
 catch (  VoldemortException e) {
    throw e;
  }
catch (  Exception e) {
    throw new VoldemortException("Error while trying to extract the value field",e);
  }
  verifyOrAddStore(url,props.getString(BUILD_FORCE_SCHEMA_KEY,keySchema),props.getString(BUILD_FORCE_SCHEMA_VALUE,valSchema));
}
