{
  String compressionPolicy="";
  if (hasCompression) {
    compressionPolicy="\n\t\t<compression><type>gzip</type></compression>";
  }
  String keySerializerStr="\n\t\t<type>" + remoteKeySerializerDef.getName() + "</type>";
  if (remoteKeySerializerDef.hasVersion()) {
    for (    Map.Entry<Integer,String> entry : remoteKeySerializerDef.getAllSchemaInfoVersions().entrySet()) {
      keySerializerStr+="\n\t\t <schema-info version=\"" + entry.getKey() + "\">"+ entry.getValue()+ "</schema-info>\n\t";
    }
  }
 else {
    keySerializerStr="\n\t\t<type>" + serializerName + "</type>\n\t\t<schema-info version=\"0\">"+ remoteKeySerializerDef.getCurrentSchemaInfo()+ "</schema-info>\n\t";
  }
  String valueSerializerStr="\n\t\t<type>" + remoteValueSerializerDef.getName() + "</type>";
  if (remoteValueSerializerDef.hasVersion()) {
    for (    Map.Entry<Integer,String> entry : remoteValueSerializerDef.getAllSchemaInfoVersions().entrySet()) {
      valueSerializerStr+="\n\t\t <schema-info version=\"" + entry.getKey() + "\">"+ entry.getValue()+ "</schema-info>\n\t";
    }
    valueSerializerStr+=compressionPolicy + "\n\t";
  }
 else {
    valueSerializerStr="\n\t\t<type>" + serializerName + "</type>\n\t\t<schema-info version=\"0\">"+ remoteValueSerializerDef.getCurrentSchemaInfo()+ "</schema-info>"+ compressionPolicy+ "\n\t";
  }
  return VoldemortUtils.getStoreDef(VoldemortUtils.getStoreDefXml(storeName,replicationFactor,requiredReads,requiredWrites,props.getNullableInt(BUILD_PREFERRED_READS),props.getNullableInt(BUILD_PREFERRED_WRITES),keySerializerStr,valueSerializerStr));
}
