{
  List<Integer> partitionIds=new ArrayList<Integer>(cluster.getPartitionIdsInZone(zoneId));
  Map<Integer,Integer> runLengthToCount=Maps.newHashMap();
  if (partitionIds.isEmpty()) {
    return runLengthToCount;
  }
  int lastPartitionId=partitionIds.get(0);
  int initPartitionId=lastPartitionId;
  for (int offset=1; offset < partitionIds.size(); offset++) {
    int partitionId=partitionIds.get(offset);
    if (partitionId == lastPartitionId + 1) {
      lastPartitionId=partitionId;
      continue;
    }
    int runLength=lastPartitionId - initPartitionId + 1;
    if (!runLengthToCount.containsKey(runLength)) {
      runLengthToCount.put(runLength,0);
    }
    runLengthToCount.put(runLength,runLengthToCount.get(runLength) + 1);
    initPartitionId=partitionId;
    lastPartitionId=initPartitionId;
  }
  int runLength=lastPartitionId - initPartitionId;
  if (!runLengthToCount.containsKey(runLength)) {
    runLengthToCount.put(runLength,0);
  }
  runLengthToCount.put(runLength,runLengthToCount.get(runLength) + 1);
  return runLengthToCount;
}
