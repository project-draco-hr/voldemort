{
  HashMap<Integer,List<byte[]>> samplePartitionKeysMap=TestUtils.createPartitionsKeys(zzStoreRoutingPlan,1);
  assertEquals("Node 1 does not contain p5?",(Integer)6,zzStoreRoutingPlan.getNodesPartitionIdForKey(1,samplePartitionKeysMap.get(5).get(0)));
  assertEquals("Node 4 does not contain p5?",(Integer)7,zzStoreRoutingPlan.getNodesPartitionIdForKey(4,samplePartitionKeysMap.get(5).get(0)));
  assertEquals("Replication list does not match up",Lists.newArrayList(0,1,3,4),zzStoreRoutingPlan.getReplicationNodeList(0));
  assertEquals("Zone replica type should be 1",1,zzBaseRoutingPlan.getZoneNAry(0,0,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Zone replica type should be 0",0,zzBaseRoutingPlan.getZoneNAry(0,1,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Zone replica type should be 1",1,zzBaseRoutingPlan.getZoneNAry(1,3,samplePartitionKeysMap.get(7).get(0)));
  assertEquals("Zone replica type should be 0",0,zzBaseRoutingPlan.getZoneNAry(1,4,samplePartitionKeysMap.get(7).get(0)));
  assertEquals("Replica owner should be 1",1,zzBaseRoutingPlan.getNodeIdForZoneNary(0,1,samplePartitionKeysMap.get(2).get(0)));
  assertEquals("Replica owner should be 1",1,zzBaseRoutingPlan.getNodeIdForZoneNary(0,0,samplePartitionKeysMap.get(3).get(0)));
  assertEquals("Replica owner should be 4",4,zzBaseRoutingPlan.getNodeIdForZoneNary(1,1,samplePartitionKeysMap.get(1).get(0)));
  assertEquals("Replica owner should be 3",3,zzBaseRoutingPlan.getNodeIdForZoneNary(1,0,samplePartitionKeysMap.get(2).get(0)));
  assertEquals("Does Zone 1 have a replica",true,zzzStoreRoutingPlan.zoneNAryExists(1,0,1));
}
