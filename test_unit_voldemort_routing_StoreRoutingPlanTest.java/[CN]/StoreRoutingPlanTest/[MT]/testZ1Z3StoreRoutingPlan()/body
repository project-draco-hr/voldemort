{
  HashMap<Integer,List<byte[]>> samplePartitionKeysMap=TestUtils.createPartitionsKeys(z1z3StoreRoutingPlan,1);
  assertEquals("Node 3 does not contain p6?",(Integer)6,z1z3StoreRoutingPlan.getNodesPartitionIdForKey(3,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Node 4 does not contain p10?",(Integer)10,z1z3StoreRoutingPlan.getNodesPartitionIdForKey(4,samplePartitionKeysMap.get(10).get(0)));
  assertEquals("Replication list does not match up",Lists.newArrayList(3,4,9,10),z1z3StoreRoutingPlan.getReplicationNodeList(0));
  assertEquals("Zone replica type should be 0",0,z1z3BaseRoutingPlan.getZoneNAry(1,3,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Zone replica type should be 1",1,z1z3BaseRoutingPlan.getZoneNAry(1,5,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Zone replica type should be 1",1,z1z3BaseRoutingPlan.getZoneNAry(1,3,samplePartitionKeysMap.get(7).get(0)));
  assertEquals("Zone replica type should be 0",0,z1z3BaseRoutingPlan.getZoneNAry(1,5,samplePartitionKeysMap.get(7).get(0)));
  assertEquals("Replica owner should be 3",3,z1z3BaseRoutingPlan.getNodeIdForZoneNary(1,1,samplePartitionKeysMap.get(2).get(0)));
  assertEquals("Replica owner should be 9",5,z1z3BaseRoutingPlan.getNodeIdForZoneNary(1,1,samplePartitionKeysMap.get(3).get(0)));
  assertEquals("Replica owner should be 5",5,z1z3BaseRoutingPlan.getNodeIdForZoneNary(1,1,samplePartitionKeysMap.get(1).get(0)));
  assertEquals("Replica owner should be 4",4,zzBaseRoutingPlan.getNodeIdForZoneNary(1,0,samplePartitionKeysMap.get(2).get(0)));
}
