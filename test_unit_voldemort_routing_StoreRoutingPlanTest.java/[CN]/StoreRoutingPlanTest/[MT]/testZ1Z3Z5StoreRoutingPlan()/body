{
  HashMap<Integer,List<byte[]>> samplePartitionKeysMap=TestUtils.createPartitionsKeys(z1z3z5StoreRoutingPlan,1);
  assertEquals("Node 3 does not contain p8?",(Integer)9,z1z3z5StoreRoutingPlan.getNodesPartitionIdForKey(3,samplePartitionKeysMap.get(8).get(0)));
  assertEquals("Node 5 does not contain p1?",(Integer)2,z1z3z5StoreRoutingPlan.getNodesPartitionIdForKey(5,samplePartitionKeysMap.get(1).get(0)));
  assertEquals("Replication list does not match up",Lists.newArrayList(3,4,9,10,15,16),z1z3z5StoreRoutingPlan.getReplicationNodeList(0));
  assertEquals("Replication list does not match up",Lists.newArrayList(9,10,3,5,15,16),z1z3z5StoreRoutingPlan.getReplicationNodeList(3));
  assertEquals("Zone replica type should be 0",0,z1z3z5BaseRoutingPlan.getZoneNAry(1,3,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Zone replica type should be 1 in zone 1",1,z1z3z5BaseRoutingPlan.getZoneNAry(1,5,samplePartitionKeysMap.get(6).get(0)));
  assertEquals("Replica owner should be 4",4,z1z3z5BaseRoutingPlan.getNodeIdForZoneNary(1,0,samplePartitionKeysMap.get(1).get(0)));
  assertEquals("Replica secondary should be 10",10,z1z3z5BaseRoutingPlan.getNodeIdForZoneNary(3,1,samplePartitionKeysMap.get(0).get(0)));
  assertEquals("Does Zone 3 have a replica",true,z1z3z5StoreRoutingPlan.zoneNAryExists(3,1,0));
}
