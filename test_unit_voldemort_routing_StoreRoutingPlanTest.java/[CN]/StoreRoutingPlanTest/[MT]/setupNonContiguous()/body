{
  Cluster z1z3Current=ClusterTestUtils.getZ1Z3ClusterWithNonContiguousNodeIds();
  HashMap<Integer,Integer> zoneRep211=new HashMap<Integer,Integer>();
  zoneRep211.put(1,2);
  zoneRep211.put(3,2);
  StoreDefinition z1z3211StoreDef=new StoreDefinitionBuilder().setName("z1z3211").setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.ZONE_STRATEGY).setReplicationFactor(4).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).setZoneCountReads(0).setZoneCountWrites(0).setZoneReplicationFactor(zoneRep211).setHintedHandoffStrategy(HintedHandoffStrategyType.PROXIMITY_STRATEGY).build();
  z1z3BaseRoutingPlan=new BaseStoreRoutingPlan(z1z3Current,z1z3211StoreDef);
  z1z3StoreRoutingPlan=new StoreRoutingPlan(z1z3Current,z1z3211StoreDef);
  Cluster z1z3z5Current=ClusterTestUtils.getZ1Z3Z5ClusterWithNonContiguousNodeIds();
  HashMap<Integer,Integer> zoneRep3zones211=new HashMap<Integer,Integer>();
  zoneRep3zones211.put(1,2);
  zoneRep3zones211.put(3,2);
  zoneRep3zones211.put(5,2);
  StoreDefinition z1z3z5211StoreDef=new StoreDefinitionBuilder().setName("z1z3z5211").setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.ZONE_STRATEGY).setReplicationFactor(6).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).setZoneCountReads(0).setZoneCountWrites(0).setZoneReplicationFactor(zoneRep3zones211).setHintedHandoffStrategy(HintedHandoffStrategyType.PROXIMITY_STRATEGY).build();
  z1z3z5BaseRoutingPlan=new BaseStoreRoutingPlan(z1z3z5Current,z1z3z5211StoreDef);
  z1z3z5StoreRoutingPlan=new StoreRoutingPlan(z1z3z5Current,z1z3z5211StoreDef);
}
