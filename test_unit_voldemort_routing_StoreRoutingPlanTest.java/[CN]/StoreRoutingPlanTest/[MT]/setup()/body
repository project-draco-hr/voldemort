{
  Cluster nonZonedCluster=ServerTestUtils.getLocalCluster(3,new int[]{1000,2000,3000,1000,2000,3000,1000,2000,3000},new int[][]{{0},{1,3},{2}});
  StoreDefinition nonZoned211StoreDef=new StoreDefinitionBuilder().setName("non-zoned").setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(2).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  nonZonedRoutingPlan=new StoreRoutingPlan(nonZonedCluster,nonZoned211StoreDef);
  int[] dummyZonedPorts=new int[]{1000,2000,3000,1000,2000,3000,1000,2000,3000,1000,2000,3000,1000,2000,3000,1000,2000,3000};
  Cluster zonedCluster=ServerTestUtils.getLocalZonedCluster(6,2,new int[]{0,0,0,1,1,1},new int[][]{{0},{1,6},{2},{3},{4,7},{5}},dummyZonedPorts);
  HashMap<Integer,Integer> zrfRWStoreWithReplication=new HashMap<Integer,Integer>();
  zrfRWStoreWithReplication.put(0,2);
  zrfRWStoreWithReplication.put(1,2);
  StoreDefinition zoned211StoreDef=new StoreDefinitionBuilder().setName("zoned").setType(BdbStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.ZONE_STRATEGY).setReplicationFactor(4).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).setZoneCountReads(0).setZoneCountWrites(0).setZoneReplicationFactor(zrfRWStoreWithReplication).setHintedHandoffStrategy(HintedHandoffStrategyType.PROXIMITY_STRATEGY).build();
  zonedRoutingPlan=new StoreRoutingPlan(zonedCluster,zoned211StoreDef);
}
