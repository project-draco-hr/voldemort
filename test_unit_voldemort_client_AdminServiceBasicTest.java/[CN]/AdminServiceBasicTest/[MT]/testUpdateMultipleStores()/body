{
  doClientOperation();
  AdminClient client=getAdminClient();
  List<StoreDefinition> originalStoreDefinitions=client.metadataMgmtOps.getRemoteStoreDefList(0).getValue();
  StoreDefinition oldTestReplicationStore=getStoreDefinitionFromList(originalStoreDefinitions,"test-replication-memory");
  StoreDefinition oldTestRecoveryStore=getStoreDefinitionFromList(originalStoreDefinitions,"test-recovery-data");
  StoreDefinition oldTestBasicStore=getStoreDefinitionFromList(originalStoreDefinitions,"test-basic-replication-memory");
  List<StoreDefinition> storesToBeUpdatedList=new ArrayList<StoreDefinition>();
  StoreDefinition definition1=new StoreDefinitionBuilder().setName("test-replication-memory").setType(InMemoryStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition(oldTestReplicationStore.getKeySerializer().getName())).setValueSerializer(oldTestReplicationStore.getValueSerializer()).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(1).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).setOwners(Collections.singletonList("alice")).build();
  StoreDefinition definition2=new StoreDefinitionBuilder().setName("test-recovery-data").setType(InMemoryStorageConfiguration.TYPE_NAME).setKeySerializer(oldTestRecoveryStore.getKeySerializer()).setValueSerializer(oldTestRecoveryStore.getValueSerializer()).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(2).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(2).setRequiredWrites(1).build();
  StoreDefinition definition3=new StoreDefinitionBuilder().setName("test-basic-replication-memory").setType(InMemoryStorageConfiguration.TYPE_NAME).setKeySerializer(oldTestBasicStore.getKeySerializer()).setValueSerializer(oldTestBasicStore.getValueSerializer()).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(2).setPreferredReads(2).setRequiredReads(1).setPreferredWrites(2).setRequiredWrites(2).build();
  storesToBeUpdatedList.add(definition1);
  storesToBeUpdatedList.add(definition2);
  storesToBeUpdatedList.add(definition3);
  updateAndResetStoreDefinitions(storesToBeUpdatedList);
  doClientOperation();
}
