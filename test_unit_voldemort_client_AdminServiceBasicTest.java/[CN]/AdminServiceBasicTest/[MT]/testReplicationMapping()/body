{
  List<Node> nodes=Lists.newArrayList();
  nodes.add(new Node(0,"localhost",1,2,3,0,Lists.newArrayList(0,4,8)));
  nodes.add(new Node(1,"localhost",1,2,3,0,Lists.newArrayList(1,5,9)));
  nodes.add(new Node(2,"localhost",1,2,3,1,Lists.newArrayList(2,6,10)));
  nodes.add(new Node(3,"localhost",1,2,3,1,Lists.newArrayList(3,7,11)));
  RoutingStrategyFactory factory=new RoutingStrategyFactory();
  StoreDefinition storeDef=ServerTestUtils.getStoreDef("consistent",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  Cluster newCluster=new Cluster("single_zone_cluster",nodes);
  RoutingStrategy strategy=factory.updateRoutingStrategy(storeDef,newCluster);
  Map<Integer,List<Integer>> replicationMapping=adminClient.getReplicationMapping(newCluster,0,strategy);
  Map<Integer,List<Integer>> expected=Maps.newHashMap();
  expected.put(1,Lists.newArrayList(1,5,9));
  expected.put(3,Lists.newArrayList(3,7,11));
  assertEquals(replicationMapping,expected);
  replicationMapping=adminClient.getReplicationMapping(newCluster,2,strategy);
  assertEquals(replicationMapping,expected);
  replicationMapping=adminClient.getReplicationMapping(newCluster,1,strategy);
  expected=Maps.newHashMap();
  expected.put(0,Lists.newArrayList(0,4,8));
  expected.put(2,Lists.newArrayList(2,6,10));
  assertEquals(replicationMapping,expected);
  List<Zone> zones=ServerTestUtils.getZones(2);
  HashMap<Integer,Integer> zoneReplicationFactors=Maps.newHashMap();
  for (int zoneIds=0; zoneIds < 2; zoneIds++) {
    zoneReplicationFactors.put(zoneIds,1);
  }
  storeDef=ServerTestUtils.getStoreDef("zone",2,1,1,1,0,0,zoneReplicationFactors,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  strategy=factory.updateRoutingStrategy(storeDef,newCluster);
  newCluster=new Cluster("multi_zone_cluster",nodes,zones);
  replicationMapping=adminClient.getReplicationMapping(newCluster,0,strategy);
  expected=Maps.newHashMap();
  expected.put(2,Lists.newArrayList(2,6,10));
  expected.put(3,Lists.newArrayList(3,7,11));
  assertEquals(replicationMapping,expected);
  replicationMapping=adminClient.getReplicationMapping(newCluster,1,strategy);
  expected=Maps.newHashMap();
  expected.put(2,Lists.newArrayList(2,6,10));
  assertEquals(replicationMapping,expected);
  replicationMapping=adminClient.getReplicationMapping(newCluster,2,strategy);
  expected=Maps.newHashMap();
  expected.put(0,Lists.newArrayList(4,8,0));
  expected.put(1,Lists.newArrayList(1,5,9));
  assertEquals(replicationMapping,expected);
}
