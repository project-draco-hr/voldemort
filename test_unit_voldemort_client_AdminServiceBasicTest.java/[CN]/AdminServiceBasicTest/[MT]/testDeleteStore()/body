{
  AdminClient adminClient=getAdminClient();
  StoreDefinition definition=new StoreDefinitionBuilder().setName("deleteTest").setType(InMemoryStorageConfiguration.TYPE_NAME).setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(1).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  adminClient.storeMgmtOps.addStore(definition);
  StoreClientFactory factory=new SocketStoreClientFactory(new ClientConfig().setCacheStoreClients(false).setBootstrapUrls(cluster.getNodeById(0).getSocketUrl().toString()));
  StoreClient<Object,Object> client=factory.getStoreClient("deleteTest");
  int numStores=adminClient.metadataMgmtOps.getRemoteStoreDefList(0).getValue().size();
  assertEquals(adminClient.metadataMgmtOps.getRemoteStoreDefList(0).getValue().contains(definition),true);
  adminClient.storeMgmtOps.deleteStore("deleteTest");
  assertEquals(adminClient.metadataMgmtOps.getRemoteStoreDefList(0).getValue().size(),numStores - 1);
  assertEquals(adminClient.metadataMgmtOps.getRemoteStoreDefList(0).getValue().contains(definition),false);
  try {
    client=factory.getStoreClient("deleteTest");
    client.put("abc","123");
    String s=(String)client.get("abc").getValue();
    assertEquals(s,"123");
    fail("Should have received bootstrap failure exception");
  }
 catch (  Exception e) {
    if (!(e instanceof BootstrapFailureException))     throw e;
  }
  adminClient.storeMgmtOps.addStore(definition);
  client=factory.getStoreClient("deleteTest");
  client.put("abc","123");
  String s=(String)client.get("abc").getValue();
  assertEquals(s,"123");
}
