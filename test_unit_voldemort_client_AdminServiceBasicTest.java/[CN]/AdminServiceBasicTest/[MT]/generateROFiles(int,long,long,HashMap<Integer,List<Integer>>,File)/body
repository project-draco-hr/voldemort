{
  ReadOnlyStorageMetadata metadata=new ReadOnlyStorageMetadata();
  metadata.add(ReadOnlyStorageMetadata.FORMAT,ReadOnlyStorageFormat.READONLY_V2.getCode());
  File metadataFile=new File(versionDir,".metadata");
  BufferedWriter writer=new BufferedWriter(new FileWriter(metadataFile));
  writer.write(metadata.toJsonString());
  writer.close();
  for (  Entry<Integer,List<Integer>> entry : buckets.entrySet()) {
    int replicaType=entry.getKey();
    for (    int partitionId : entry.getValue()) {
      for (int chunkId=0; chunkId < numChunks; chunkId++) {
        File index=new File(versionDir,Integer.toString(partitionId) + "_" + Integer.toString(replicaType)+ "_"+ Integer.toString(chunkId)+ ".index");
        File data=new File(versionDir,Integer.toString(partitionId) + "_" + Integer.toString(replicaType)+ "_"+ Integer.toString(chunkId)+ ".data");
        FileOutputStream dataOs=new FileOutputStream(data);
        for (int i=0; i < dataSize; i++)         dataOs.write(i);
        dataOs.close();
        FileOutputStream indexOs=new FileOutputStream(index);
        for (int i=0; i < indexSize; i++)         indexOs.write(i);
        indexOs.close();
      }
    }
  }
}
