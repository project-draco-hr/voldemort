{
  Map<Integer,Store<ByteArray,byte[]>> nodeStores=new HashMap<Integer,Store<ByteArray,byte[]>>(cluster.getNumberOfNodes());
  for (  Node node : cluster.getNodes()) {
    if (!this.storeRepository.hasNodeStore(def.getName(),node.getId())) {
      Store<ByteArray,byte[]> store=createNodeStore(def.getName(),node,localNode);
      this.storeRepository.addNodeStore(node.getId(),store);
      nodeStores.put(node.getId(),store);
    }
 else {
      nodeStores.put(node.getId(),this.storeRepository.getNodeStore(def.getName(),node.getId()));
    }
  }
  if (!this.storeRepository.hasRoutedStore(def.getName())) {
    Store<ByteArray,byte[]> routedStore=new RoutedStore(def.getName(),nodeStores,cluster,def,true,this.clientThreadPool,voldemortConfig.getRoutingTimeoutMs(),voldemortConfig.getClientNodeBannageMs(),SystemTime.INSTANCE);
    routedStore=new InconsistencyResolvingStore<ByteArray,byte[]>(routedStore,new VectorClockInconsistencyResolver<byte[]>());
    this.storeRepository.addRoutedStore(routedStore);
  }
}
