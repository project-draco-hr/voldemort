{
  registerEngine(metadata);
  for (  String configClassName : voldemortConfig.getStorageConfigurations())   initStorageConfig(configClassName);
  storageConfigs.put(ViewStorageConfiguration.TYPE_NAME,new ViewStorageConfiguration(voldemortConfig,metadata.getStoreDefList(),storeRepository));
  if (voldemortConfig.isSlopEnabled()) {
    logger.info("Initializing the slop store using " + voldemortConfig.getSlopStoreType());
    StorageConfiguration config=storageConfigs.get(voldemortConfig.getSlopStoreType());
    if (config == null)     throw new ConfigurationException("Attempt to get slop store failed");
    SlopStorageEngine slopEngine=new SlopStorageEngine(config.getStore("slop"),metadata.getCluster());
    registerEngine(slopEngine);
    storeRepository.setSlopStore(slopEngine);
    GregorianCalendar cal=new GregorianCalendar();
    cal.add(Calendar.SECOND,(int)(voldemortConfig.getSlopFrequencyMs() / Time.MS_PER_SECOND));
    Date nextRun=cal.getTime();
    logger.info("Initializing slop pusher job type " + voldemortConfig.getPusherType() + " at "+ nextRun);
    if (voldemortConfig.getPusherType().compareTo(BlockingSlopPusherJob.TYPE_NAME) == 0) {
      scheduler.schedule("slop",new BlockingSlopPusherJob(storeRepository,metadata,failureDetector,voldemortConfig.getSlopMaxWriteBytesPerSec()),nextRun,voldemortConfig.getSlopFrequencyMs());
    }
 else     if (voldemortConfig.getPusherType().compareTo(StreamingSlopPusherJob.TYPE_NAME) == 0) {
      scheduler.schedule("slop",new StreamingSlopPusherJob(storeRepository,metadata,failureDetector,voldemortConfig),nextRun,voldemortConfig.getSlopFrequencyMs());
    }
 else {
      logger.error("Unsupported slop pusher job type " + voldemortConfig.getPusherType());
    }
  }
  List<StoreDefinition> storeDefs=new ArrayList<StoreDefinition>(this.metadata.getStoreDefList());
  logger.info("Initializing stores:");
  for (  StoreDefinition def : storeDefs)   if (!def.isView())   openStore(def);
  for (  StoreDefinition def : storeDefs)   if (def.isView())   openStore(def);
  if (voldemortConfig.isStatTrackingEnabled())   JmxUtils.registerMbean(new StoreStatsJmx(this.storeStats),JmxUtils.createObjectName("voldemort.store.stats.aggregate","aggregate-perf"));
  logger.info("All stores initialized.");
}
