{
  Cluster cluster=this.metadata.getCluster();
  storeRepository.addStorageEngine(engine);
  Store<ByteArray,byte[],byte[]> store=engine;
  boolean isMetadata=store.getName().compareTo(MetadataStore.METADATA_STORE_NAME) == 0;
  boolean isSlop=storeType.compareTo("slop") == 0;
  boolean isView=storeType.compareTo(ViewStorageConfiguration.TYPE_NAME) == 0;
  if (voldemortConfig.isVerboseLoggingEnabled())   store=new LoggingStore<ByteArray,byte[],byte[]>(store,cluster.getName(),SystemTime.INSTANCE);
  if (!isSlop) {
    if (voldemortConfig.isEnableRebalanceService() && !isReadOnly && !isMetadata&& !isView) {
      store=new RedirectingStore(store,metadata,storeRepository,failureDetector,storeFactory);
      if (voldemortConfig.isJmxEnabled()) {
        MBeanServer mbeanServer=ManagementFactory.getPlatformMBeanServer();
        ObjectName name=null;
        if (this.voldemortConfig.isEnableJmxClusterName())         name=JmxUtils.createObjectName(cluster.getName() + "." + JmxUtils.getPackageName(RedirectingStore.class),store.getName());
 else         name=JmxUtils.createObjectName(JmxUtils.getPackageName(RedirectingStore.class),store.getName());
synchronized (mbeanServer) {
          if (mbeanServer.isRegistered(name))           JmxUtils.unregisterMbean(mbeanServer,name);
          JmxUtils.registerMbean(mbeanServer,JmxUtils.createModelMBean(store),name);
        }
      }
    }
    if (voldemortConfig.isMetadataCheckingEnabled() && !isMetadata)     store=new InvalidMetadataCheckingStore(metadata.getNodeId(),store,metadata);
  }
  if (voldemortConfig.isStatTrackingEnabled()) {
    StatTrackingStore statStore=new StatTrackingStore(store,this.storeStats);
    store=statStore;
    if (voldemortConfig.isJmxEnabled()) {
      MBeanServer mbeanServer=ManagementFactory.getPlatformMBeanServer();
      ObjectName name=null;
      if (this.voldemortConfig.isEnableJmxClusterName())       name=JmxUtils.createObjectName(metadata.getCluster().getName() + "." + JmxUtils.getPackageName(store.getClass()),store.getName());
 else       name=JmxUtils.createObjectName(JmxUtils.getPackageName(store.getClass()),store.getName());
synchronized (mbeanServer) {
        if (mbeanServer.isRegistered(name))         JmxUtils.unregisterMbean(mbeanServer,name);
        JmxUtils.registerMbean(mbeanServer,JmxUtils.createModelMBean(new StoreStatsJmx(statStore.getStats())),name);
      }
    }
  }
  storeRepository.addLocalStore(store);
}
