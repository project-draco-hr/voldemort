{
  logger.debug("rebalancer run() called.");
  VoldemortState voldemortState;
  RebalancerState rebalancerState;
  metadataStore.readLock.lock();
  try {
    voldemortState=metadataStore.getServerState();
    rebalancerState=metadataStore.getRebalancerState();
  }
 catch (  Exception e) {
    logger.error("Error determining state",e);
    return;
  }
 finally {
    metadataStore.readLock.unlock();
  }
  final List<Exception> failures=new ArrayList<Exception>();
  AdminClient adminClient=RebalanceUtils.createTempAdminClient(voldemortConfig,metadataStore.getCluster(),4,2);
  if (VoldemortState.REBALANCING_MASTER_SERVER.equals(voldemortState)) {
    for (    RebalancePartitionsInfo stealInfo : rebalancerState.getAll()) {
      if (stealInfo.getUnbalancedStoreList().size() > 0) {
        try {
          logger.warn("Rebalance server found incomplete rebalancing attempt, restarting rebalancing task " + stealInfo);
          if (stealInfo.getAttempt() < voldemortConfig.getMaxRebalancingAttempt()) {
            stealInfo.setAttempt(stealInfo.getAttempt() + 1);
            int rebalanceAsyncId=rebalanceNode(stealInfo);
            adminClient.waitForCompletion(stealInfo.getStealerId(),rebalanceAsyncId,voldemortConfig.getRebalancingTimeoutSec(),TimeUnit.SECONDS);
          }
 else {
            logger.warn("Rebalancing for rebalancing task " + stealInfo + " failed multiple times (max. attemps:"+ voldemortConfig.getMaxRebalancingAttempt()+ "), Aborting more trials.");
            metadataStore.deleteRebalancingState(stealInfo);
          }
        }
 catch (        Exception e) {
          logger.error("RebalanceService rebalancing attempt " + stealInfo + " failed with exception - "+ e.getMessage(),e);
          failures.add(e);
        }
      }
 else {
        metadataStore.deleteRebalancingState(stealInfo);
      }
    }
  }
}
