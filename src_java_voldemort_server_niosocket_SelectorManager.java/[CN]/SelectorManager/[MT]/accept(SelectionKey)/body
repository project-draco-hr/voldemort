{
  ServerSocketChannel serverSocketChannel=(ServerSocketChannel)selectionKey.channel();
  SocketChannel socketChannel=serverSocketChannel.accept();
  if (socketChannel == null) {
    if (logger.isEnabledFor(Level.WARN))     logger.warn("Claimed accept readiness but nothing to select");
    return;
  }
  if (logger.isInfoEnabled())   logger.info("Accepting remote connection from " + socketChannel.socket().getPort());
  socketChannel.socket().setTcpNoDelay(true);
  socketChannel.socket().setSendBufferSize(socketBufferSize);
  if (socketChannel.socket().getReceiveBufferSize() != this.socketBufferSize)   if (logger.isDebugEnabled())   logger.debug("Requested socket receive buffer size was " + this.socketBufferSize + " bytes but actual size is "+ socketChannel.socket().getReceiveBufferSize()+ " bytes.");
  if (socketChannel.socket().getSendBufferSize() != this.socketBufferSize)   if (logger.isDebugEnabled())   logger.debug("Requested socket send buffer size was " + this.socketBufferSize + " bytes but actual size is "+ socketChannel.socket().getSendBufferSize()+ " bytes.");
  socketChannel.configureBlocking(false);
  SelectionKey key=socketChannel.register(selector,SelectionKey.OP_READ);
  key.attach(new AsyncRequestHandler(key,requestHandler));
}
