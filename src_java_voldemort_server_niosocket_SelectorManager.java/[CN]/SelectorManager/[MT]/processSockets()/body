{
  try {
    SocketChannel socketChannel=null;
    while ((socketChannel=socketChannelQueue.poll()) != null) {
      try {
        if (logger.isDebugEnabled())         logger.debug("Registering connection from " + socketChannel.socket().getPort());
        socketChannel.socket().setTcpNoDelay(true);
        socketChannel.socket().setReuseAddress(true);
        socketChannel.socket().setSendBufferSize(socketBufferSize);
        if (socketChannel.socket().getReceiveBufferSize() != this.socketBufferSize)         if (logger.isDebugEnabled())         logger.debug("Requested socket receive buffer size was " + this.socketBufferSize + " bytes but actual size is "+ socketChannel.socket().getReceiveBufferSize()+ " bytes.");
        if (socketChannel.socket().getSendBufferSize() != this.socketBufferSize)         if (logger.isDebugEnabled())         logger.debug("Requested socket send buffer size was " + this.socketBufferSize + " bytes but actual size is "+ socketChannel.socket().getSendBufferSize()+ " bytes.");
        socketChannel.configureBlocking(false);
        AsyncRequestHandler attachment=new AsyncRequestHandler(selector,socketChannel,requestHandler);
        socketChannel.register(selector,SelectionKey.OP_READ,attachment);
      }
 catch (      Exception e) {
        if (logger.isEnabledFor(Level.ERROR))         logger.error(e.getMessage(),e);
      }
    }
  }
 catch (  Exception e) {
    if (logger.isEnabledFor(Level.ERROR))     logger.error(e.getMessage(),e);
  }
}
