{
  if (args.length != 5)   Utils.croak("Expected arguments store_name config_dir temp_dir input_path output_path");
  String storeName=args[0];
  String configDir=args[1];
  String tempDir=args[2];
  String inputDir=args[3];
  String outputDir=args[4];
  List<StoreDefinition> storeDefs=new StoreDefinitionsMapper().readStoreList(new File(configDir,"stores.xml"));
  StoreDefinition def=null;
  for (  StoreDefinition d : storeDefs)   if (d.getName().equals(storeName))   def=d;
  Cluster cluster=new ClusterMapper().readCluster(new File(configDir,"cluster.xml"));
  JobConf config=new JobConf();
  String jobName="test-store-builder";
  config.set("mapred.job.name",jobName);
  HadoopStoreBuilder builder=new HadoopStoreBuilder(jobName,new Props(),config,BuildTestStoreMapper.class,SequenceFileInputFormat.class,cluster,def,new Path(tempDir),new Path(outputDir),new Path(inputDir),CheckSum.CheckSumType.NONE,false,false,(long)(1.5 * 1024 * 1024* 1024),false,null,false);
  builder.build();
  return 0;
}
