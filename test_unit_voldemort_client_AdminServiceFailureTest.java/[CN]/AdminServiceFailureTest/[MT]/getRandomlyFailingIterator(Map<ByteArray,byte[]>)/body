{
  return new AbstractIterator<Pair<ByteArray,Versioned<byte[]>>>(){
    private final Iterator<Entry<ByteArray,byte[]>> innerIterator=entryMap.entrySet().iterator();
    @Override protected Pair<ByteArray,Versioned<byte[]>> computeNext(){
      if (Math.random() > FAIL_PROBABILITY) {
        throw new VoldemortException("Failing Iterator.");
      }
      if (!innerIterator.hasNext())       return endOfData();
      Entry<ByteArray,byte[]> entry=innerIterator.next();
      return new Pair<ByteArray,Versioned<byte[]>>(entry.getKey(),new Versioned<byte[]>(entry.getValue()));
    }
  }
;
}
