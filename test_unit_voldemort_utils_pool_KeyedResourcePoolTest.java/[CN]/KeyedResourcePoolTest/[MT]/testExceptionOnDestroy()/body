{
  assertTrue("POOL_SIZE is not big enough",POOL_SIZE >= 2);
  Exception toThrow=new Exception("An exception! (This exception is expected and so will print out some output to stderr.)");
  this.factory.setDestroyException(toThrow);
  assertEquals(0,this.pool.getTotalResourceCount());
  try {
    TestResource checkedOut=this.pool.checkout("a");
    assertFalse(checkedOut.isDestroyed());
    assertEquals(1,this.factory.getCreated());
    assertEquals(1,this.pool.getTotalResourceCount());
    assertEquals(0,this.pool.getCheckedInResourceCount());
    this.pool.checkin("a",checkedOut);
    assertEquals(1,this.factory.getCreated());
    assertEquals(1,this.pool.getTotalResourceCount());
    assertEquals(1,this.pool.getCheckedInResourceCount());
    this.pool.checkout("a");
    assertEquals(1,this.factory.getCreated());
    assertEquals(1,this.pool.getTotalResourceCount());
    assertEquals(0,this.pool.getCheckedInResourceCount());
    for (int i=0; i < POOL_SIZE - 1; i++) {
      checkedOut=this.pool.checkout("a");
      assertFalse(checkedOut.isDestroyed());
    }
    assertEquals(POOL_SIZE,this.factory.getCreated());
    assertEquals(POOL_SIZE,this.pool.getTotalResourceCount());
    assertEquals(0,this.pool.getCheckedInResourceCount());
    assertEquals(0,this.factory.getDestroyed());
    checkedOut.invalidate();
    try {
      this.pool.checkin("a",checkedOut);
    }
 catch (    Exception caught) {
      fail("No exception expected.");
    }
    assertEquals(POOL_SIZE - 1,this.pool.getTotalResourceCount());
    assertEquals(0,this.pool.getCheckedInResourceCount());
    assertEquals(0,this.factory.getDestroyed());
    this.pool.checkout("a");
    assertEquals(POOL_SIZE + 1,this.factory.getCreated());
    assertEquals(POOL_SIZE,this.pool.getTotalResourceCount());
    assertEquals(0,this.pool.getCheckedInResourceCount());
    assertEquals(0,this.factory.getDestroyed());
  }
 catch (  Exception caught) {
    fail("No exception expected.");
  }
}
