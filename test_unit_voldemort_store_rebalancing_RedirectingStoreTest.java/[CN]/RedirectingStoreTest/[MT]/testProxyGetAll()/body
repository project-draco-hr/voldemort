{
  final RedirectingStore storeNode2=getRedirectingStore(2,servers[2].getMetadataStore(),"test");
  final RedirectingStore storeNode0=getRedirectingStore(0,servers[0].getMetadataStore(),"test");
  Set<ByteArray> primaryKeySet=primaryEntriesMoved.keySet();
  Iterator<ByteArray> iter=primaryKeySet.iterator();
  while (iter.hasNext()) {
    List<ByteArray> keys=Lists.newArrayList();
    for (int keyBatch=0; keyBatch < 10 && iter.hasNext(); keyBatch++) {
      keys.add(iter.next());
    }
    assertEquals("Keys should be present.",keys.size(),storeNode2.getAll(keys,null).size());
    for (    Entry<ByteArray,List<Versioned<byte[]>>> entry : storeNode2.getAll(keys,null).entrySet()) {
      assertEquals("Values should match.",new String(entry.getValue().get(0).getValue()),new String(storeNode2.get(entry.getKey(),null).get(0).getValue()));
    }
    assertEquals("Keys should be present.",keys.size(),storeNode0.getAll(keys,null).size());
    for (    Entry<ByteArray,List<Versioned<byte[]>>> entry : storeNode0.getAll(keys,null).entrySet()) {
      assertEquals("Values should match.",new String(entry.getValue().get(0).getValue()),new String(storeNode0.get(entry.getKey(),null).get(0).getValue()));
    }
  }
  Set<ByteArray> secondaryKeySet=secondaryEntriesMoved.keySet();
  iter=secondaryKeySet.iterator();
  while (iter.hasNext()) {
    List<ByteArray> keys=Lists.newArrayList();
    for (int keyBatch=0; keyBatch < 10 && iter.hasNext(); keyBatch++) {
      keys.add(iter.next());
    }
    assertEquals("Keys should be present.",keys.size(),storeNode2.getAll(keys,null).size());
    for (    Entry<ByteArray,List<Versioned<byte[]>>> entry : storeNode2.getAll(keys,null).entrySet()) {
      assertEquals("Values should match.",new String(entry.getValue().get(0).getValue()),new String(storeNode2.get(entry.getKey(),null).get(0).getValue()));
    }
  }
}
