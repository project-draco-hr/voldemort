{
  OptionParser parser=getParser();
  OptionSet options=parser.parse(argv);
  validateOptions(options);
  String inputPath=(String)options.valueOf("input");
  String storeName=(String)options.valueOf("store");
  String bootstrapUrl=(String)options.valueOf("url");
  File input=new File(inputPath);
  List<File> dataFiles=new ArrayList<File>();
  if (input.isDirectory()) {
    File[] files=input.listFiles();
    if (files != null)     Collections.addAll(dataFiles,files);
  }
 else   if (input.isFile()) {
    dataFiles.add(input);
  }
 else {
    System.err.println(inputPath + "is not file or directory");
  }
  PerfDataLoadCLI cli=new PerfDataLoadCLI(bootstrapUrl);
  try {
    if (options.has("node-ids")) {
      cli.targetNodeList=new ArrayList<Node>();
      for (      Integer nodeId : (List<Integer>)options.valuesOf("node-ids")) {
        cli.targetNodeList.add(cli.cluster.getNodeById(nodeId));
      }
    }
    for (    File f : dataFiles) {
      try {
        BufferedReader bufferedReader=new BufferedReader(new FileReader(f),READER_BUFFER_SIZE);
        cli.loadDataFromReader(bufferedReader,storeName);
        bufferedReader.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
  finally {
    cli.close();
  }
  System.out.println("Completed");
}
