{
  failureDetectorListener=new FailureDetectorListener(){
    public void nodeAvailable(    Node node){
    }
    public void nodeUnavailable(    Node node){
      if (logger.isInfoEnabled())       logger.info(node + " has been marked as unavailable, destroying socket pool");
      SocketDestination destination=new SocketDestination(node.getHost(),node.getSocketPort(),config.getRequestFormatType());
      socketPool.close(destination);
    }
  }
;
  ClientStoreVerifier<ByteArray,byte[]> storeVerifier=new ClientStoreVerifier<ByteArray,byte[]>(){
    @Override protected ByteArray getKey(){
      return new ByteArray(MetadataStore.NODE_ID_KEY.getBytes());
    }
    @Override protected Store<ByteArray,byte[]> getStoreInternal(    Node node){
      return SocketStoreClientFactory.this.getStore(MetadataStore.METADATA_STORE_NAME,node.getHost(),node.getSocketPort(),config.getRequestFormatType());
    }
  }
;
  FailureDetectorConfig failureDetectorConfig=new FailureDetectorConfig(config).setNodes(nodes).setStoreVerifier(storeVerifier);
  return create(failureDetectorConfig,true,failureDetectorListener);
}
