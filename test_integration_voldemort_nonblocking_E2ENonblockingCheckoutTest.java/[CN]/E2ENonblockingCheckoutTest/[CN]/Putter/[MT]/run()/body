{
  for (int i=0; i < puts; ++i) {
    sleepUntilNextPeriod();
    String I=getString(i);
    System.out.println("");
    String context=new String("PUT of " + I + " (Put #: "+ i+ ", Thread: "+ Thread.currentThread().getName()+ ")");
    System.out.println("START " + context);
    long startTimeMs=System.currentTimeMillis();
    boolean putDone=false;
    while (!putDone) {
      try {
        storeClient.put(I,I);
        putDone=true;
      }
 catch (      ObsoleteVersionException e) {
        System.out.println("RETRY " + context);
      }
    }
    long endTimeMs=System.currentTimeMillis();
    System.out.println(" DONE " + context + " --- Time (ms): "+ (endTimeMs - startTimeMs));
    if (i >= NUM_EXEMPT_PUTS) {
      assertFalse("False",false);
      if ((endTimeMs - startTimeMs) > this.putTimeLimitMs) {
        System.err.println("Operation blocked! Therefore, operation is not nonblocking... " + context + " (Operation time: "+ (endTimeMs - startTimeMs)+ " ms)");
      }
    }
  }
  sleepUntilNextPeriod();
  System.out.println("Thread done. (Thread: " + Thread.currentThread().getName() + ")");
  signal.countDown();
}
