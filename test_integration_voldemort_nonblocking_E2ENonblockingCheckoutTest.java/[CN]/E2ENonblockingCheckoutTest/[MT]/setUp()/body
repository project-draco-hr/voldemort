{
  Logger logger;
  logger=Logger.getLogger("voldemort.store.routed.action.PerformParallelPutRequests");
  logger.setLevel(Level.DEBUG);
  logger=Logger.getLogger("voldemort.store.routed.action.PerformSerialPutRequests");
  logger.setLevel(Level.DEBUG);
  cluster=ServerTestUtils.getLocalCluster(3,new int[][]{{0,3},{1,4},{2,5}});
  servers=new ArrayList<VoldemortServer>();
  Properties p=new Properties();
  String storageConfigs=BdbStorageConfiguration.class.getName() + "," + InMemoryStorageConfiguration.class.getName()+ ","+ SlowStorageConfiguration.class.getName();
  p.setProperty("storage.configs",storageConfigs);
  p.setProperty("slow.queueing.put.ms",Long.toString(SLOW_PUT_MS));
  p.setProperty("client.connection.timeout.ms",Integer.toString(CONNECTION_TIMEOUT_MS));
  p.setProperty("client.routing.timeout.ms",Integer.toString(ROUTING_TIMEOUT_MS));
  for (int i=0; i < 3; i++) {
    VoldemortConfig voldemortConfig=ServerTestUtils.createServerConfigWithDefs(this.useNio,i,TestUtils.createTempDir().getAbsolutePath(),cluster,getStoreDef(i),p);
    VoldemortServer voldemortServer=ServerTestUtils.startVoldemortServer(socketStoreFactory,voldemortConfig);
    servers.add(voldemortServer);
  }
  Node node=cluster.getNodeById(0);
  String bootstrapUrl="tcp://" + node.getHost() + ":"+ node.getSocketPort();
  storeClientFactory=new SocketStoreClientFactory(new ClientConfig().setBootstrapUrls(bootstrapUrl).setMaxConnectionsPerNode(CONNECTIONS_PER_NODE).setConnectionTimeout(CONNECTION_TIMEOUT_MS,TimeUnit.MILLISECONDS));
}
