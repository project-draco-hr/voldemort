{
  StorageEngine<ByteArray,byte[]> store=getStorageEngine();
  StorageEngine<String,String> stringStore=new SerializingStorageEngine<String,String>(store,new StringSerializer(),new StringSerializer());
  Map<String,String> vals=ImmutableMap.of("a","a","b","b","c","c","d","d","e","e");
  for (  Map.Entry<String,String> entry : vals.entrySet())   stringStore.put(entry.getKey(),new Versioned<String>(entry.getValue()));
  ClosableIterator<Pair<String,Versioned<String>>> iter=stringStore.entries();
  int count=0;
  while (iter.hasNext()) {
    Pair<String,Versioned<String>> keyAndVal=iter.next();
    assertTrue(vals.containsKey(keyAndVal.getFirst()));
    assertEquals(vals.get(keyAndVal.getFirst()),keyAndVal.getSecond().getValue());
    count++;
  }
  assertEquals(count,vals.size());
  iter.close();
}
