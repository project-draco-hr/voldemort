{
  if (this.storesXml != null)   return getRawStore(storeName);
  InconsistencyResolver<Versioned<V1>> secondaryResolver=new TimeBasedInconsistencyResolver();
  if (resolver != null)   secondaryResolver=resolver;
  Store store=new VersionIncrementingStore(new InMemoryStorageEngine(storeName),nodeId,time);
  if (isSerialized())   store=new SerializingStore(store,keySerializer,valueSerializer,transformsSerializer);
  Store<K1,V1,T1> consistentStore=new InconsistencyResolvingStore<K1,V1,T1>(store,new ChainedResolver<Versioned<V1>>(new VectorClockInconsistencyResolver(),secondaryResolver));
  return consistentStore;
}
