{
  if (logger.isInfoEnabled())   logger.info("Waiting for instances: " + instanceIds);
  for (  ReservationDescription res : ec2.describeInstances(instanceIds)) {
    if (res.getInstances() != null) {
      for (      Instance instance : res.getInstances()) {
        String state=String.valueOf(instance.getState()).toLowerCase();
        if (state.equals("pending")) {
          if (logger.isInfoEnabled())           logger.info("Instance " + instance.getInstanceId() + " in pending state");
          continue;
        }
        if (!state.equals("running")) {
          if (logger.isWarnEnabled())           logger.warn("Instance " + instance.getInstanceId() + " in unexpected state: "+ state+ ", code: "+ instance.getStateCode());
          continue;
        }
        String publicDnsName=instance.getDnsName() != null ? instance.getDnsName().trim() : "";
        String privateDnsName=instance.getPrivateDnsName() != null ? instance.getPrivateDnsName().trim() : "";
        if (publicDnsName.length() > 0 && privateDnsName.length() > 0) {
          hostNameMap.put(instance.getDnsName(),instance.getPrivateDnsName());
          instanceIds.remove(instance.getInstanceId());
          if (logger.isInfoEnabled())           logger.info("Instance " + instance.getInstanceId() + " running with public DNS: "+ instance.getDnsName()+ ", private DNS: "+ instance.getPrivateDnsName());
        }
 else {
          if (logger.isWarnEnabled())           logger.warn("Instance " + instance.getInstanceId() + " in running state, but missing public and/or private DNS name");
        }
      }
    }
  }
}
