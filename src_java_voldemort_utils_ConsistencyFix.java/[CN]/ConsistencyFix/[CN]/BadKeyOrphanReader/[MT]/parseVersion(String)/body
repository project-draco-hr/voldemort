{
  List<ClockEntry> versions=new ArrayList<ClockEntry>();
  long timestamp=0;
  String parsed[]=versionString.split(") ts:");
  if (parsed.length != 2) {
    throw new IOException("Could not parse vector clock: " + versionString);
  }
  timestamp=Long.parseLong(parsed[1]);
  String clockEntryList=parsed[0].substring(8);
  String parsedClockEntryList[]=clockEntryList.split(", ");
  for (int i=0; i < parsedClockEntryList.length; ++i) {
    String parsedClockEntry[]=parsedClockEntryList[i].split(":");
    if (parsedClockEntry.length != 2) {
      throw new IOException("Could not parse ClockEntry: " + parsedClockEntryList[i]);
    }
    short nodeId=Short.parseShort(parsedClockEntry[0]);
    long version=Long.parseLong(parsedClockEntry[1]);
    versions.add(new ClockEntry(nodeId,version));
  }
  return new VectorClock(versions,timestamp);
}
