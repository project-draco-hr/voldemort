{
  if (nodeValues == null) {
    if (verbose) {
      System.out.println("Aborting processReadReplies due to bad init.");
    }
    return Status.BAD_INIT;
  }
  if (verbose) {
    System.out.println("Confirming all nodes (" + nodeIdList + ") responded with key-values for specified key: "+ keyInHexFormat);
  }
  boolean exceptionsEncountered=false;
  for (  int nodeId : nodeIdList) {
    if (verbose) {
      System.out.println("\t Processing response from node with id:" + nodeId);
    }
    QueryKeyResult keyValue;
    if (nodeIdToKeyValues.containsKey(nodeId)) {
      if (verbose) {
        System.out.println("\t... There was a key-value returned from node with id:" + nodeId);
      }
      keyValue=nodeIdToKeyValues.get(nodeId);
      if (keyValue.hasException()) {
        if (verbose) {
          System.out.println("\t... Exception encountered while fetching key " + keyInHexFormat + " from node with nodeId "+ nodeId+ " : "+ keyValue.getException().getMessage());
        }
        exceptionsEncountered=true;
      }
 else {
        if (keyValue.getValues().isEmpty()) {
          if (verbose) {
            System.out.println("\t... Adding null version to nodeValues");
          }
          Versioned<byte[]> versioned=new Versioned<byte[]>(null);
          nodeValues.add(new NodeValue<ByteArray,byte[]>(nodeId,keyValue.getKey(),versioned));
        }
 else {
          for (          Versioned<byte[]> value : keyValue.getValues()) {
            if (verbose) {
              System.out.println("\t... Adding following version to nodeValues: " + value.getVersion());
            }
            nodeValues.add(new NodeValue<ByteArray,byte[]>(nodeId,keyValue.getKey(),value));
          }
        }
      }
    }
 else {
      if (verbose) {
        System.out.println("\t... No key-value returned from node with id:" + nodeId);
        System.out.println("\t... Adding null version to nodeValues");
      }
      Versioned<byte[]> versioned=new Versioned<byte[]>(null);
      nodeValues.add(new NodeValue<ByteArray,byte[]>(nodeId,keyAsByteArray,versioned));
    }
  }
  if (exceptionsEncountered) {
    if (verbose) {
      System.out.println("Aborting fixKey because exceptions were encountered when fetching key-values.");
    }
    return Status.FETCH_EXCEPTION;
  }
  return Status.SUCCESS;
}
