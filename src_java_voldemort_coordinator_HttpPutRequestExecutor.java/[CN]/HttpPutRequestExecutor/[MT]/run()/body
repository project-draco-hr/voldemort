{
  try {
    VectorClock successfulPutVC=null;
    if (putRequestObject.getValue() != null) {
      successfulPutVC=((VectorClock)this.storeClient.putVersionedWithCustomTimeout(putRequestObject)).clone();
    }
 else {
      successfulPutVC=((VectorClock)this.storeClient.putWithCustomTimeout(putRequestObject)).clone();
    }
    if (logger.isDebugEnabled()) {
      logger.debug("PUT successful !");
    }
    writeResponse(successfulPutVC);
  }
 catch (  IllegalArgumentException illegalArgsException) {
    String errorDescription="PUT Failed !!! Illegal Arguments : " + illegalArgsException.getMessage();
    logger.error(errorDescription);
    RESTErrorHandler.handleError(BAD_REQUEST,this.putRequestMessageEvent,errorDescription);
  }
catch (  ObsoleteVersionException oe) {
    String errorDescription="PUT Failed !!! Obsolete version exception: " + oe.getMessage();
    RESTErrorHandler.handleError(PRECONDITION_FAILED,this.putRequestMessageEvent,errorDescription);
  }
catch (  StoreTimeoutException timeoutException) {
    String errorDescription="GET Request timed out: " + timeoutException.getMessage();
    logger.error(errorDescription);
    RESTErrorHandler.handleError(REQUEST_TIMEOUT,this.putRequestMessageEvent,errorDescription);
  }
catch (  InsufficientOperationalNodesException exception) {
    long nowInNs=System.nanoTime();
    if (nowInNs - startTimestampInNs > putRequestObject.getRoutingTimeoutInMs() * Time.NS_PER_MS) {
      String errorDescription="GET Request timed out: " + exception.getMessage();
      logger.error(errorDescription);
      RESTErrorHandler.handleError(REQUEST_TIMEOUT,this.putRequestMessageEvent,errorDescription);
    }
 else {
      String errorDescription="Voldemort Exception: " + exception.getMessage();
      RESTErrorHandler.handleError(INTERNAL_SERVER_ERROR,this.putRequestMessageEvent,errorDescription);
    }
  }
catch (  VoldemortException ve) {
    String errorDescription="Voldemort Exception: " + ve.getMessage();
    RESTErrorHandler.handleError(INTERNAL_SERVER_ERROR,this.putRequestMessageEvent,errorDescription);
  }
}
