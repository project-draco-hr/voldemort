{
  StoreUtils.assertValidKey(key);
  FsKeyPath path=makePath(key);
synchronized (lockFor(path)) {
    try {
      File file=new File(path.getPath());
      FsKeyAndValues kv=FsKeyAndValues.read(file);
      if (kv == null)       return false;
      List<Versioned<byte[]>> remaining=new ArrayList<Versioned<byte[]>>(kv.getValues().size());
      for (      Versioned<byte[]> v : kv.getValues())       if (v.getVersion().compare(version) != Occured.BEFORE)       remaining.add(v);
      if (remaining.size() == 0) {
        boolean deleted=file.delete();
        if (!deleted)         logger.warn("Error deleting key-value file " + file.getAbsolutePath() + ".");
        return true;
      }
 else {
        boolean deletedSome=remaining.size() < kv.getValues().size();
        if (deletedSome)         new FsKeyAndValues(kv.getKey(),remaining).writeTo(file);
        return deletedSome;
      }
    }
 catch (    IOException e) {
      logger.error("Filesystem error in delete.",e);
      throw new PersistenceFailureException("Filesystem error while deleting values.",e);
    }
  }
}
