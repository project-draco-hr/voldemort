{
  StorageEngine<ByteArray,byte[]> store=getStore();
  Map<String,String> vals=ImmutableMap.of("a","a","b","b","c","c","d","d","e","e");
  for (  Map.Entry<String,String> entry : vals.entrySet()) {
    store.put(new ByteArray(entry.getKey().getBytes()),new Versioned<byte[]>(_mds.toBytes(new Doc(entry.getKey(),entry.getValue()))));
  }
  ClosableIterator<Pair<ByteArray,Versioned<byte[]>>> iter=store.entries();
  int count=0;
  while (iter.hasNext()) {
    Pair<ByteArray,Versioned<byte[]>> entry=iter.next();
    String key=new String(entry.getFirst().get());
    assertTrue(vals.containsKey(key));
    assertEquals(vals.get(key),_mds.toObject(entry.getSecond().getValue()).getString(key));
    count++;
  }
  assertEquals(count,vals.size());
  iter.close();
}
