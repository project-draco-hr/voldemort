{
  long startTimeMs=-1;
  long startTimeNs=-1;
  if (logger.isDebugEnabled()) {
    startTimeMs=System.currentTimeMillis();
    startTimeNs=System.nanoTime();
  }
  ByteArray key=readKey(inputStream);
  int valueSize=inputStream.readInt();
  byte[] bytes=new byte[valueSize];
  ByteUtils.read(inputStream,bytes);
  VectorClock clock=new VectorClock(bytes);
  byte[] value=ByteUtils.copy(bytes,clock.sizeInBytes(),bytes.length);
  byte[] transforms=null;
  if (protocolVersion > 2) {
    if (inputStream.readBoolean()) {
      transforms=readTransforms(inputStream);
    }
  }
  try {
    store.put(key,new Versioned<byte[]>(value,clock),transforms);
    outputStream.writeShort(0);
  }
 catch (  VoldemortException e) {
    writeException(outputStream,e);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("PUT started at: " + startTimeMs + " handlerRef: "+ System.identityHashCode(inputStream)+ " key: "+ ByteUtils.toHexString(key.get())+ " "+ (System.nanoTime() - startTimeNs)+ " ns, keySize: "+ key.length()+ " valueHash: "+ value.hashCode()+ " valueSize: "+ value.length+ " clockSize: "+ clock.sizeInBytes()+ " time: "+ System.currentTimeMillis());
  }
}
