{
  super();
  this.name=Utils.notNull(name);
  this.schemaInfoByVersion=new HashMap<Integer,String>();
  this.hasVersion=hasVersion;
  if (!hasVersion) {
    this.currentSchemaVersion=0;
    if (schemaInfos.size() != 1)     throw new IllegalArgumentException("Schema version = none, but multiple schemas specified.");
    String schema=schemaInfos.values().iterator().next();
    this.schemaInfoByVersion.put(0,schema);
  }
 else {
    int max=-1;
    for (    Integer key : schemaInfos.keySet()) {
      if (key < 0)       throw new IllegalArgumentException("Version cannot be less than 0.");
 else       if (key > Byte.MAX_VALUE)       throw new IllegalArgumentException("Version cannot be more than " + Byte.MAX_VALUE);
      if (key > max)       max=key;
      this.schemaInfoByVersion.put(key,schemaInfos.get(key));
    }
    this.currentSchemaVersion=max;
  }
}
