{
  Props props=new Props(properties);
  if (props.containsKey(BOOTSTRAP_URLS_PROPERTY)) {
    setBootstrapURLs(props.getList(BOOTSTRAP_URLS_PROPERTY));
  }
  if (props.containsKey(FAT_CLIENTS_CONFIG_FILE_PATH_PROPERTY)) {
    setFatClientConfigPath(props.getString(FAT_CLIENTS_CONFIG_FILE_PATH_PROPERTY));
  }
  if (props.containsKey(METADATA_CHECK_INTERVAL_IN_MS)) {
    setMetadataCheckIntervalInMs(props.getInt(METADATA_CHECK_INTERVAL_IN_MS,this.metadataCheckIntervalInMs));
  }
  if (props.containsKey(NETTY_SERVER_PORT)) {
    setServerPort(props.getInt(NETTY_SERVER_PORT,this.nettyServerPort));
  }
  if (props.containsKey(NETTY_SERVER_BACKLOG)) {
    setNettyServerBacklog(props.getInt(NETTY_SERVER_BACKLOG,this.nettyServerBacklog));
  }
  if (props.containsKey(COORDINATOR_CORE_THREADS)) {
    setCoordinatorCoreThreads(props.getInt(COORDINATOR_CORE_THREADS,this.coordinatorCoreThreads));
  }
  if (props.containsKey(COORDINATOR_MAX_THREADS)) {
    setCoordinatorMaxThreads(props.getInt(COORDINATOR_MAX_THREADS,this.coordinatorMaxThreads));
  }
  if (props.containsKey(COORDINATOR_QUEUED_REQUESTS)) {
    setCoordinatorQueuedRequestsSize(props.getInt(COORDINATOR_QUEUED_REQUESTS,this.numCoordinatorQueuedRequests));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_INITIAL_LINE_LENGTH)) {
    setHttpMessageDecoderMaxInitialLength(props.getInt(HTTP_MESSAGE_DECODER_MAX_INITIAL_LINE_LENGTH,this.httpMessageDecoderMaxInitialLength));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_HEADER_SIZE)) {
    setHttpMessageDecoderMaxHeaderSize(props.getInt(HTTP_MESSAGE_DECODER_MAX_HEADER_SIZE,this.httpMessageDecoderMaxHeaderSize));
  }
  if (props.containsKey(HTTP_MESSAGE_DECODER_MAX_CHUNK_SIZE)) {
    setHttpMessageDecoderMaxChunkSize(props.getInt(HTTP_MESSAGE_DECODER_MAX_CHUNK_SIZE,this.httpMessageDecoderMaxChunkSize));
  }
}
