{
  super.configure(conf);
  md5er=ByteUtils.getDigest("md5");
  keySerializerDefinition=getStoreDef().getKeySerializer();
  valueSerializerDefinition=getStoreDef().getValueSerializer();
  try {
    SerializerFactory factory=new DefaultSerializerFactory();
    if (conf.get("serializer.factory") != null) {
      factory=(SerializerFactory)Class.forName(conf.get("serializer.factory")).newInstance();
    }
    keySerializer=(Serializer<Object>)factory.getSerializer(keySerializerDefinition);
    valueSerializer=(Serializer<Object>)factory.getSerializer(valueSerializerDefinition);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  keyCompressor=new CompressionStrategyFactory().get(keySerializerDefinition.getCompression());
  valueCompressor=new CompressionStrategyFactory().get(valueSerializerDefinition.getCompression());
  RoutingStrategyFactory factory=new RoutingStrategyFactory();
  routingStrategy=factory.updateRoutingStrategy(getStoreDef(),getCluster());
  vectorNodeId=conf.getInt("vector.node.id",-1);
  vectorNodeVersion=conf.getLong("vector.node.version",1L);
  jobStartTime=conf.getLong("job.start.time.ms",-1);
  if (jobStartTime < 0) {
    throw new RuntimeException("Incorrect job start time");
  }
}
