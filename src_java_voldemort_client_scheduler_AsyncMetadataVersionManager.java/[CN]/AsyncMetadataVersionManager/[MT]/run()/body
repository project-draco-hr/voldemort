{
  logger.debug("************* AsyncMetadataVersionManger running. Checking for " + SystemStoreConstants.CLUSTER_VERSION_KEY + " and  "+ storesVersionKey+ " *************");
  try {
    Properties versionProps=MetadataVersionStoreUtils.getProperties(this.systemStoreRepository.getMetadataVersionStore());
    Long newClusterVersion=fetchNewVersion(SystemStoreConstants.CLUSTER_VERSION_KEY,this.currentClusterVersion,versionProps);
    Long newStoreVersion=fetchNewVersion(storesVersionKey,this.currentStoreVersion,versionProps);
    if ((newClusterVersion != null) || (newStoreVersion != null)) {
      logger.info("Metadata version mismatch detected. Re-bootstrapping!");
      try {
        if (newClusterVersion != null) {
          logger.info("Updating cluster version");
          currentClusterVersion=newClusterVersion;
        }
        if (newStoreVersion != null) {
          logger.info("Updating store : '" + storesVersionKey + "' version");
          this.currentStoreVersion=newStoreVersion;
        }
        this.storeClientThunk.call();
      }
 catch (      Exception e) {
        logger.error("Exception occurred while invoking the rebootstrap callback.",e);
      }
    }
  }
 catch (  InvalidMetadataException e) {
    try {
      this.storeClientThunk.call();
    }
 catch (    Exception e2) {
      logger.error("Exception occurred while invoking the rebootstrap callback.",e);
    }
  }
catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Could not retrieve metadata versions from the server.",e);
    }
  }
}
