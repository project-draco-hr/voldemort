{
  final TreeMultimap<Integer,Integer> stealerToStolenPrimaryPartitions=TreeMultimap.create();
  if (outputDir != null)   RebalanceUtils.dumpClusters(targetCluster,finalCluster,outputDir);
  for (  Node stealerNode : finalCluster.getNodes()) {
    List<Integer> stolenPrimaryPartitions=RebalanceUtils.getStolenPrimaryPartitions(targetCluster,finalCluster,stealerNode.getId());
    if (stolenPrimaryPartitions.size() > 0) {
      numPrimaryPartitionMoves+=stolenPrimaryPartitions.size();
      stealerToStolenPrimaryPartitions.putAll(stealerNode.getId(),stolenPrimaryPartitions);
    }
  }
  int batches=0;
  Cluster batchTargetCluster=Cluster.cloneCluster(targetCluster);
  while (!stealerToStolenPrimaryPartitions.isEmpty()) {
    Cluster batchFinalCluster=Cluster.cloneCluster(batchTargetCluster);
    int partitions=0;
    List<Entry<Integer,Integer>> partitionsMoved=Lists.newArrayList();
    for (    Entry<Integer,Integer> stealerToPartition : stealerToStolenPrimaryPartitions.entries()) {
      partitionsMoved.add(stealerToPartition);
      batchFinalCluster=RebalanceUtils.createUpdatedCluster(batchFinalCluster,stealerToPartition.getKey(),Lists.newArrayList(stealerToPartition.getValue()));
      partitions++;
      if (partitions == batchSize)       break;
    }
    for (Iterator<Entry<Integer,Integer>> partitionMoved=partitionsMoved.iterator(); partitionMoved.hasNext(); ) {
      Entry<Integer,Integer> entry=partitionMoved.next();
      stealerToStolenPrimaryPartitions.remove(entry.getKey(),entry.getValue());
    }
    if (outputDir != null)     RebalanceUtils.dumpClusters(batchTargetCluster,batchFinalCluster,outputDir,"batch-" + Integer.toString(batches) + ".");
    final RebalanceBatchPlan RebalanceBatchPlan=new RebalanceBatchPlan(batchTargetCluster,batchFinalCluster,finalStores);
    batchPlans.add(RebalanceBatchPlan);
    numXZonePartitionStoreMoves+=RebalanceBatchPlan.getCrossZonePartitionStoreMoves();
    numPartitionStoreMoves+=RebalanceBatchPlan.getPartitionStoreMoves();
    nodeMoveMap.add(RebalanceBatchPlan.getNodeMoveMap());
    zoneMoveMap.add(RebalanceBatchPlan.getZoneMoveMap());
    batches++;
    batchTargetCluster=Cluster.cloneCluster(batchFinalCluster);
  }
  logger.info(this);
}
