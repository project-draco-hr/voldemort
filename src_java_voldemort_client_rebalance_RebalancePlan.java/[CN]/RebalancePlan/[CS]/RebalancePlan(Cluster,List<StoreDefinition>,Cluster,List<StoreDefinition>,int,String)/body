{
  this.currentCluster=currentCluster;
  this.currentStoreDefs=RebalanceUtils.validateRebalanceStore(currentStoreDefs);
  this.finalCluster=finalCluster;
  this.finalStoreDefs=RebalanceUtils.validateRebalanceStore(finalStoreDefs);
  this.batchSize=batchSize;
  this.outputDir=outputDir;
  RebalanceUtils.validateCurrentFinalCluster(this.currentCluster,this.finalCluster);
  Cluster interimCluster=RebalanceUtils.getInterimCluster(this.currentCluster,this.finalCluster);
  RebalanceUtils.validateClusterStores(this.currentCluster,this.currentStoreDefs);
  RebalanceUtils.validateClusterStores(this.finalCluster,this.finalStoreDefs);
  RebalanceUtils.validateClusterStores(interimCluster,this.finalStoreDefs);
  logger.info("Current cluster : " + currentCluster);
  logger.info("Interim cluster : " + interimCluster);
  logger.info("Final cluster : " + finalCluster);
  logger.info("Batch size : " + batchSize);
  batchPlans=new ArrayList<RebalanceBatchPlan>();
  numPrimaryPartitionMoves=0;
  numPartitionStoreMoves=0;
  numXZonePartitionStoreMoves=0;
  nodeMoveMap=new MoveMap(interimCluster.getNodeIds());
  zoneMoveMap=new MoveMap(interimCluster.getZoneIds());
  plan();
}
