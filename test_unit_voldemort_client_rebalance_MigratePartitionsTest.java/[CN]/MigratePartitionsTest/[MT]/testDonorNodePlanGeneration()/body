{
  MigratePartitions tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,Lists.newArrayList(0));
  HashMap<Integer,List<RebalancePartitionsInfo>> donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),2);
  Assert.assertEquals(donorNodePlans.get(2).size(),1);
  Assert.assertEquals(donorNodePlans.get(3).size(),1);
  tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,Lists.newArrayList(0,1));
  donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),3);
  Assert.assertEquals(donorNodePlans.get(0).size(),1);
  Assert.assertEquals(donorNodePlans.get(2).size(),2);
  Assert.assertEquals(donorNodePlans.get(3).size(),2);
  tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,Lists.newArrayList(0,1,-1));
  donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),3);
  Assert.assertEquals(donorNodePlans.get(0).size(),1);
  Assert.assertEquals(donorNodePlans.get(2).size(),2);
  Assert.assertEquals(donorNodePlans.get(3).size(),2);
  tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,Lists.newArrayList(0,1,2));
  donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),4);
  Assert.assertEquals(donorNodePlans.get(0).size(),2);
  Assert.assertEquals(donorNodePlans.get(1).size(),1);
  Assert.assertEquals(donorNodePlans.get(2).size(),2);
  Assert.assertEquals(donorNodePlans.get(3).size(),2);
  tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,Lists.newArrayList(0,1,2,3));
  donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),4);
  Assert.assertEquals(donorNodePlans.get(0).size(),3);
  Assert.assertEquals(donorNodePlans.get(1).size(),1);
  Assert.assertEquals(donorNodePlans.get(2).size(),2);
  Assert.assertEquals(donorNodePlans.get(3).size(),2);
  tool=new MigratePartitions(consistentRoutingCluster,zoneRoutingClusterModified,Lists.newArrayList(beforeStoreDef),Lists.newArrayList(afterStoreDef),null,null,null);
  donorNodePlans=tool.getDonorNodePlan();
  Assert.assertEquals(donorNodePlans.size(),4);
  Assert.assertEquals(donorNodePlans.get(0).size(),3);
  Assert.assertEquals(donorNodePlans.get(1).size(),1);
  Assert.assertEquals(donorNodePlans.get(2).size(),2);
  Assert.assertEquals(donorNodePlans.get(3).size(),2);
}
