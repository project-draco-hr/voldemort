{
  String line;
  Map<String,SocketStoreClientFactory> storeFactoryMap=new HashMap<String,SocketStoreClientFactory>();
  try {
    line=Joiner.on(" ").join(IOUtils.readLines(new FileReader(new File(configFilePath)))).trim();
    Map<String,Properties> mapStoreToProps=readMultipleClientConfigAvro(line);
    for (    String storeName : mapStoreToProps.keySet()) {
      Properties props=mapStoreToProps.get(storeName);
      ClientConfig fatClientConfig=new ClientConfig(props);
      fatClientConfig.setBootstrapUrls(bootstrapURLs).setEnableCompressionLayer(false).setEnableSerializationLayer(false).enableDefaultClient(true).setEnableLazy(false).setIdentifierString(props.getProperty(IDENTIFIER_STRING_KEY,null));
      logger.info("Creating a Fat client for store: " + storeName);
      logger.info("Using config: " + fatClientConfig);
      storeFactoryMap.put(storeName,new SocketStoreClientFactory(fatClientConfig));
    }
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
catch (  Exception e) {
    e.printStackTrace();
  }
  return storeFactoryMap;
}
