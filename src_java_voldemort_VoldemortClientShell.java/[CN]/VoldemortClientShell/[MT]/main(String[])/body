{
  OptionParser parser=new OptionParser();
  parser.accepts("client-zone-id","client zone id for zone routing").withRequiredArg().describedAs("zone-id").ofType(Integer.class);
  OptionSet options=parser.parse(args);
  List<String> nonOptions=(List<String>)options.nonOptionArguments();
  if (nonOptions.size() < 2 || nonOptions.size() > 3) {
    System.err.println("Usage: java VoldemortClientShell store_name bootstrap_url [command_file] [options]");
    parser.printHelpOn(System.err);
    System.exit(-1);
  }
  String storeName=nonOptions.get(0);
  String bootstrapUrl=nonOptions.get(1);
  BufferedReader inputReader=null;
  boolean fileInput=false;
  try {
    if (nonOptions.size() == 3) {
      inputReader=new BufferedReader(new FileReader(nonOptions.get(2)));
      fileInput=true;
    }
 else {
      inputReader=new BufferedReader(new InputStreamReader(System.in));
    }
  }
 catch (  IOException e) {
    Utils.croak("Failure to open input stream: " + e.getMessage());
  }
  ClientConfig clientConfig=new ClientConfig().setBootstrapUrls(bootstrapUrl).setEnableLazy(false).setRequestFormatType(RequestFormatType.VOLDEMORT_V3);
  if (options.has("client-zone-id")) {
    clientConfig.setClientZoneId((Integer)options.valueOf("client-zone-id"));
  }
  VoldemortClientShell shell=new VoldemortClientShell(clientConfig,storeName,inputReader,System.out,System.err);
  shell.process(fileInput);
}
