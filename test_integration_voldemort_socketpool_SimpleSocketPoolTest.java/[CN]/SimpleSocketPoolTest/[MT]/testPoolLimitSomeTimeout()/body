{
  final ResourcePoolConfig config=new ResourcePoolConfig();
  config.setBorrowTimeout(50);
  config.setBorrowTimeoutUnit(TimeUnit.MILLISECONDS);
  config.setDefaultPoolSize(20);
  PoolableObjectFactory<String,String> factory=PoolableObjectFactoryFactory.getBasicPoolFactory();
  final AbstractSocketPoolTest<String,String> test=new AbstractSocketPoolTest<String,String>(){
    @Override protected void doSomethingWithResource(    String key,    String resource) throws Exception {
      Thread.sleep(100);
    }
    @Override protected String getRequestKey() throws Exception {
      return "test-key";
    }
  }
;
  TestStats testStats=test.startTest(factory,config,50,200);
  assertEquals("We should see some timeoutRequests",true,testStats.timeoutRequests > 0);
}
