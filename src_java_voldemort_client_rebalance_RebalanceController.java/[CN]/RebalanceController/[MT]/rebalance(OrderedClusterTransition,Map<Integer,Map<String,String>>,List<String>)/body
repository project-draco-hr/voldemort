{
  try {
    final Cluster transitionTarget=orderedClusterTransition.getTargetCluster();
    final List<RebalanceNodePlan> orderedRebalanceNodePlanList=orderedClusterTransition.getOrderedRebalanceNodePlanList();
    if (orderedRebalanceNodePlanList.isEmpty()) {
      if (logger.isInfoEnabled()) {
        logger.info("Skipping rebalance-task ID:" + orderedClusterTransition.getId() + " is empty");
      }
      return;
    }
    if (logger.isInfoEnabled()) {
      logger.info("Starting rebalance-task: " + orderedClusterTransition);
    }
    rebalance(currentROStoreVersionsDirs,readOnlyStores,transitionTarget,orderedRebalanceNodePlanList);
    if (logger.isInfoEnabled()) {
      logger.info("Successfully terminated rebalance-task: " + orderedClusterTransition.getId());
    }
  }
 catch (  Exception e) {
    logger.error("Error - rebalance-task: " + orderedClusterTransition + " - "+ e.getMessage(),e);
    throw new VoldemortException("Rebalance failed on rebalance-task ID#" + orderedClusterTransition.getId(),e);
  }
}
