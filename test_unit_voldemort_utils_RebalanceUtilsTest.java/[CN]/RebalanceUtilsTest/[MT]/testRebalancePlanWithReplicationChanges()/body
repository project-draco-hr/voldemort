{
  currentCluster=ServerTestUtils.getLocalCluster(3,new int[][]{{0,1,2,3},{4,5,6},{7,8,9}});
  targetCluster=ServerTestUtils.getLocalCluster(4,new int[][]{{0,2,3},{4,6},{7,8,9},{1,5}});
  RebalanceClusterPlan rebalancePlan=new RebalanceClusterPlan(currentCluster,targetCluster,storeDefList,true,null);
  assertEquals("There should have exactly one rebalancing node",1,rebalancePlan.getRebalancingTaskQueue().size());
  RebalanceNodePlan nodePlan=rebalancePlan.getRebalancingTaskQueue().poll();
  assertEquals("Rebalancing node 3 should have 2 entries",2,nodePlan.getRebalanceTaskList().size());
  RebalancePartitionsInfo stealInfo0=new RebalancePartitionsInfo(3,0,Arrays.asList(0,1),Arrays.asList(1),Arrays.asList(1),RebalanceUtils.getStoreNames(storeDefList),new HashMap<String,String>(),0);
  RebalancePartitionsInfo stealInfo1=new RebalancePartitionsInfo(3,1,Arrays.asList(4,5),Arrays.asList(5),Arrays.asList(5),RebalanceUtils.getStoreNames(storeDefList),new HashMap<String,String>(),0);
  checkAllRebalanceInfoPresent(nodePlan,Arrays.asList(stealInfo0,stealInfo1));
}
