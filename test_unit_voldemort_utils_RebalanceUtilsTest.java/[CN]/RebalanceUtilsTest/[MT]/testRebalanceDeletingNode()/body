{
  System.out.println("testRebalanceDeletingNode() running...");
  List<StoreDefinition> storeDef=new StoreDefinitionsMapper().readStoreList(new StringReader(VoldemortTestConstants.getSingleStore322Xml()));
  currentCluster=ServerTestUtils.getLocalCluster(4,new int[][]{{0,4},{1,5},{2,6},{3,7}});
  targetCluster=ServerTestUtils.getLocalCluster(4,new int[][]{{0,1,4},{},{2,5,6},{3,7}});
  RebalanceClusterPlan rebalancePlan=new RebalanceClusterPlan(currentCluster,targetCluster,storeDef,true,null);
  System.out.println("Plan partition distribution: " + rebalancePlan.printPartitionDistribution());
  System.out.println("Plan: " + rebalancePlan);
  assertEquals("There should have exactly 3 rebalancing node",3,rebalancePlan.getRebalancingTaskQueue().size());
{
    RebalanceNodePlan nodePlan=rebalancePlan.getRebalancingTaskQueue().poll();
    assertEquals("Stealer 0 should have 1 entry",1,nodePlan.getRebalanceTaskList().size());
    RebalancePartitionsInfo a=new RebalancePartitionsInfo(0,1,Arrays.asList(1,5),Arrays.asList(1),Arrays.asList(1),RebalanceUtils.getStoreNames(storeDef),new HashMap<String,String>(),new HashMap<String,String>(),0);
    checkAllRebalanceInfoPresent(nodePlan,Arrays.asList(a));
  }
{
    RebalanceNodePlan nodePlan=rebalancePlan.getRebalancingTaskQueue().poll();
    assertEquals("Stealer 2 should have 1 entry",1,nodePlan.getRebalanceTaskList().size());
    RebalancePartitionsInfo a=new RebalancePartitionsInfo(2,1,Arrays.asList(3,5,7),Arrays.asList(3,5,7),Arrays.asList(5),RebalanceUtils.getStoreNames(storeDef),new HashMap<String,String>(),new HashMap<String,String>(),0);
    checkAllRebalanceInfoPresent(nodePlan,Arrays.asList(a));
  }
{
    RebalanceNodePlan nodePlan=rebalancePlan.getRebalancingTaskQueue().poll();
    assertEquals("Stealer 3 should have 1 entry",1,nodePlan.getRebalanceTaskList().size());
    RebalancePartitionsInfo a=new RebalancePartitionsInfo(3,1,Arrays.asList(0,4),Arrays.asList(0,4),empty,RebalanceUtils.getStoreNames(storeDef),new HashMap<String,String>(),new HashMap<String,String>(),0);
    checkAllRebalanceInfoPresent(nodePlan,Arrays.asList(a));
  }
}
