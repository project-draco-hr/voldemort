{
  List<StoreDefinition> storeDefs=Lists.newArrayList();
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),0);
  StoreDefinition consistentStore1=ServerTestUtils.getStoreDef("a",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  storeDefs.add(consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  StoreDefinition consistentStore2=ServerTestUtils.getStoreDef("b",1,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  storeDefs.add(consistentStore2);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  StoreDefinition consistentStore3=ServerTestUtils.getStoreDef("c",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  storeDefs.add(consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),2);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  HashMap<Integer,Integer> zoneRepFactor=Maps.newHashMap();
  zoneRepFactor.put(0,1);
  zoneRepFactor.put(1,1);
  StoreDefinition zoneStore1=ServerTestUtils.getStoreDef("d",1,1,1,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  storeDefs.add(zoneStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(2),zoneStore1);
  zoneRepFactor=Maps.newHashMap();
  zoneRepFactor.put(0,2);
  zoneRepFactor.put(1,1);
  StoreDefinition zoneStore2=ServerTestUtils.getStoreDef("e",1,1,1,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  storeDefs.add(zoneStore2);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),4);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(2),zoneStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(3),zoneStore2);
  zoneRepFactor=Maps.newHashMap();
  zoneRepFactor.put(0,1);
  zoneRepFactor.put(1,1);
  StoreDefinition zoneStore3=ServerTestUtils.getStoreDef("f",1,1,2,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  storeDefs.add(zoneStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),4);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(2),zoneStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(3),zoneStore2);
  zoneRepFactor=Maps.newHashMap();
  zoneRepFactor.put(0,2);
  zoneRepFactor.put(1,1);
  StoreDefinition zoneStore4=ServerTestUtils.getStoreDef("g",1,1,1,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  storeDefs.add(zoneStore4);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),4);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(2),zoneStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(3),zoneStore2);
  zoneRepFactor=Maps.newHashMap();
  zoneRepFactor.put(0,1);
  zoneRepFactor.put(1,2);
  StoreDefinition zoneStore5=ServerTestUtils.getStoreDef("h",1,1,1,1,0,0,zoneRepFactor,HintedHandoffStrategyType.PROXIMITY_STRATEGY,RoutingStrategyType.ZONE_STRATEGY);
  storeDefs.add(zoneStore5);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).size(),5);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(0),consistentStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(1),consistentStore3);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(2),zoneStore1);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(3),zoneStore2);
  assertEquals(RebalanceUtils.getUniqueStoreDefinitions(storeDefs).get(4),zoneStore5);
}
