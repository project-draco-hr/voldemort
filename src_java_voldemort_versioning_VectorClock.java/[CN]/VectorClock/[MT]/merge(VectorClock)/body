{
  VectorClock newClock=new VectorClock();
  int i=0;
  int j=0;
  while (i < this.versions.size() && j < clock.versions.size()) {
    ClockEntry v1=this.versions.get(i);
    ClockEntry v2=clock.versions.get(j);
    if (v1.getNodeId() == v2.getNodeId()) {
      newClock.versions.add(new ClockEntry(v1.getNodeId(),(short)Math.max(v1.getVersion(),v2.getVersion())));
      i++;
      j++;
    }
 else     if (v1.getNodeId() < v2.getNodeId()) {
      newClock.versions.add(v1.clone());
      i++;
    }
 else {
      newClock.versions.add(v2.clone());
      j++;
    }
  }
  for (int k=i; k < this.versions.size(); k++)   newClock.versions.add(this.versions.get(k).clone());
  for (int k=j; k < clock.versions.size(); k++)   newClock.versions.add(clock.versions.get(k).clone());
  return newClock;
}
