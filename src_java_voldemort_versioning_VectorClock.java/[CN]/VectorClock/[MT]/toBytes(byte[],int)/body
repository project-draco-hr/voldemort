{
  ByteUtils.writeShort(buf,(short)versionMap.size(),offset);
  offset+=ByteUtils.SIZE_OF_SHORT;
  byte versionSize=ByteUtils.numberOfBytesRequired(getMaxVersion());
  buf[offset]=versionSize;
  offset++;
  int clockEntrySize=ByteUtils.SIZE_OF_SHORT + versionSize;
  for (  Map.Entry<Short,Long> entry : versionMap.entrySet()) {
    ByteUtils.writeShort(buf,entry.getKey(),offset);
    ByteUtils.writeBytes(buf,entry.getValue(),offset + ByteUtils.SIZE_OF_SHORT,versionSize);
    offset+=clockEntrySize;
  }
  ByteUtils.writeLong(buf,this.timestamp,offset);
  return sizeInBytes();
}
