{
  if (v1 == null || v2 == null)   throw new IllegalArgumentException("Can't compare null vector clocks!");
  boolean v1Bigger=false;
  boolean v2Bigger=false;
  int p1=0;
  int p2=0;
  while (p1 < v1.versions.size() && p2 < v2.versions.size()) {
    ClockEntry ver1=v1.versions.get(p1);
    ClockEntry ver2=v2.versions.get(p2);
    if (ver1.getNodeId() == ver2.getNodeId()) {
      if (ver1.getVersion() > ver2.getVersion())       v1Bigger=true;
 else       if (ver2.getVersion() > ver1.getVersion())       v2Bigger=true;
      p1++;
      p2++;
    }
 else     if (ver1.getNodeId() > ver2.getNodeId()) {
      v2Bigger=true;
      p2++;
    }
 else {
      v1Bigger=true;
      p1++;
    }
  }
  if (p1 < v1.versions.size())   v1Bigger=true;
 else   if (p2 < v2.versions.size())   v2Bigger=true;
  if (!v1Bigger && !v2Bigger)   return Occurred.BEFORE;
 else   if (v1Bigger && !v2Bigger)   return Occurred.AFTER;
 else   if (!v1Bigger && v2Bigger)   return Occurred.BEFORE;
 else   return Occurred.CONCURRENTLY;
}
