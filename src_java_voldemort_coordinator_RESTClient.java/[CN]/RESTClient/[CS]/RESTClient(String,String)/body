{
  String baseURL="http://" + bootstrapURL.split(":")[1].substring(2) + ":8080";
  Store<ByteArray,byte[],byte[]> store=(Store<ByteArray,byte[],byte[]>)new R2StoreWrapper(baseURL);
  storeDef=new StoreDefinitionBuilder().setName(storeName).setType("bdb").setKeySerializer(new SerializerDefinition("string")).setValueSerializer(new SerializerDefinition("string")).setRoutingPolicy(RoutingTier.CLIENT).setRoutingStrategyType(RoutingStrategyType.CONSISTENT_STRATEGY).setReplicationFactor(1).setPreferredReads(1).setRequiredReads(1).setPreferredWrites(1).setRequiredWrites(1).build();
  Serializer<K> keySerializer=(Serializer<K>)serializerFactory.getSerializer(storeDef.getKeySerializer());
  Serializer<V> valueSerializer=(Serializer<V>)serializerFactory.getSerializer(storeDef.getValueSerializer());
  clientStore=SerializingStore.wrap(store,keySerializer,valueSerializer,null);
  InconsistencyResolver<Versioned<V>> secondaryResolver=new TimeBasedInconsistencyResolver();
  clientStore=new InconsistencyResolvingStore<K,V,Object>(clientStore,new ChainedResolver<Versioned<V>>(new VectorClockInconsistencyResolver(),secondaryResolver));
}
