{
  Map<Integer,Store<ByteArray,byte[]>> stores=new HashMap<Integer,Store<ByteArray,byte[]>>();
  for (  Node node : nodes) {
    stores.put(node.getId(),new Store<ByteArray,byte[]>(){
      public void close() throws VoldemortException {
      }
      public boolean delete(      ByteArray key,      Version version) throws VoldemortException {
        return false;
      }
      public List<Versioned<byte[]>> get(      ByteArray key) throws VoldemortException {
        return null;
      }
      public Map<ByteArray,List<Versioned<byte[]>>> getAll(      Iterable<ByteArray> keys) throws VoldemortException {
        return null;
      }
      public Object getCapability(      StoreCapabilityType capability){
        return null;
      }
      public String getName(){
        return null;
      }
      public void put(      ByteArray key,      Versioned<byte[]> value) throws VoldemortException {
      }
      public List<Version> getVersions(      ByteArray key){
        return null;
      }
    }
);
  }
  return new MutableStoreResolver(stores);
}
