{
  if (entriesPartitionIterator == null) {
    if (currentIndex == partitionList.size()) {
      return StreamRequestHandlerState.COMPLETE;
    }
    boolean found=false;
    while (!found && (currentIndex < partitionList.size())) {
      currentPartition=new Integer(partitionList.get(currentIndex));
      if (!fetchedPartitions.contains(currentPartition) && StoreRoutingPlan.checkPartitionBelongsToNode(currentPartition,nodeId,initialCluster,storeDef)) {
        found=true;
        completedFetchingCurrentPartition();
        entriesPartitionIterator=storageEngine.entries(currentPartition);
        statusInfoMessage("Starting fetch entries");
      }
      currentIndex++;
    }
  }
 else {
    long startNs=System.nanoTime();
    if (entriesPartitionIterator.hasNext()) {
      Pair<ByteArray,Versioned<byte[]>> entry=entriesPartitionIterator.next();
      ByteArray key=entry.getFirst();
      Versioned<byte[]> value=entry.getSecond();
      reportStorageOpTime(startNs);
      throttler.maybeThrottle(key.length());
      if (filter.accept(key,value)) {
        recordFetched();
        VAdminProto.FetchPartitionEntriesResponse.Builder response=VAdminProto.FetchPartitionEntriesResponse.newBuilder();
        VAdminProto.PartitionEntry partitionEntry=VAdminProto.PartitionEntry.newBuilder().setKey(ProtoUtils.encodeBytes(key)).setVersioned(ProtoUtils.encodeVersioned(value)).build();
        response.setPartitionEntry(partitionEntry);
        Message message=response.build();
        sendMessage(outputStream,message);
        throttler.maybeThrottle(AdminServiceRequestHandler.valueSize(value));
      }
      accountForScanProgress("entries");
    }
    if (!entriesPartitionIterator.hasNext() || fetchedEnoughForCurrentPartition()) {
      entriesPartitionIterator.close();
      entriesPartitionIterator=null;
      statusInfoMessage("Finished fetch keys");
      progressInfoMessage("Fetch entries (end of partition)");
    }
  }
  return StreamRequestHandlerState.WRITING;
}
