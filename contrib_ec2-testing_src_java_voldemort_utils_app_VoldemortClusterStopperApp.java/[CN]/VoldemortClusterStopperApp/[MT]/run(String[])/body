{
  parser.accepts("help","Prints this help");
  parser.accepts("logging","Options are \"debug\", \"info\" (default), \"warn\", \"error\", or \"off\"").withRequiredArg();
  parser.accepts("hostnames","File containing host names").withRequiredArg();
  parser.accepts("sshprivatekey","File containing SSH private key").withRequiredArg();
  parser.accepts("hostuserid","User ID on remote host").withRequiredArg();
  parser.accepts("voldemortroot","Voldemort's root directory on remote host").withRequiredArg();
  OptionSet options=parse(args);
  File hostNamesFile=getRequiredInputFile(options,"hostnames");
  List<String> hostNames=getHostNamesFromFile(hostNamesFile,true);
  File sshPrivateKey=getRequiredInputFile(options,"sshprivatekey");
  String hostUserId=CmdUtils.valueOf(options,"hostuserid","root");
  String voldemortRootDirectory=getRequiredString(options,"voldemortroot");
  RemoteOperation<Object> operation=new SshClusterStopper(hostNames,sshPrivateKey,hostUserId,voldemortRootDirectory);
  operation.execute();
}
