{
  int numHosts=0;
  for (  List<String> hostNames : zoneToHostNames.values()) {
    numHosts+=hostNames.size();
  }
  int totalPartitions=numHosts * numPartitions;
  List<Integer> allPartitionIds=new ArrayList<Integer>();
  for (int i=0; i < totalPartitions; i++)   allPartitionIds.add(i);
  Random random=new Random(SEED);
  Collections.shuffle(allPartitionIds,random);
  List<ClusterNodeDescriptor> list=new ArrayList<ClusterNodeDescriptor>();
  int nodeId=0;
  for (int zoneId=0; zoneId < zoneToHostNames.size(); zoneId++) {
    List<String> hostNames=zoneToHostNames.get(zoneId);
    for (int i=0; i < hostNames.size(); i++) {
      String hostName=hostNames.get(i);
      List<Integer> partitions=allPartitionIds.subList(nodeId * numPartitions,(nodeId + 1) * numPartitions);
      Collections.sort(partitions);
      ClusterNodeDescriptor cnd=new ClusterNodeDescriptor();
      cnd.setHostName(hostName);
      cnd.setId(nodeId);
      cnd.setPartitions(partitions);
      cnd.setZoneId(zoneId);
      nodeId++;
      list.add(cnd);
    }
  }
  return list;
}
