{
  parser.accepts("hostnames","File containing host names").withRequiredArg();
  parser.accepts("partitions","Number of partitions per cluster node").withRequiredArg().ofType(Integer.class);
  parser.accepts("output","cluster.xml configuration file; defaults to stdout").withRequiredArg();
  OptionSet options=parser.parse(args);
  File hostNamesFile=getRequiredInputFile(options,"hostnames");
  int partitions=getRequiredInt(options,"partitions");
  File outputFile=getOutputFile(options,"output");
  List<String> privateHostNames=getHostNamesFromFile(hostNamesFile,false);
  String clusterXml=new ClusterGenerator().createClusterDescriptor(privateHostNames,partitions);
  if (outputFile != null)   FileUtils.writeStringToFile(outputFile,clusterXml);
 else   System.out.print(clusterXml);
}
