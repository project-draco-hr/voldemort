{
  cluster=VoldemortTestConstants.getThreeNodeCluster();
  StoreDefinition storeDef=ServerTestUtils.getStoreDef("test",3,2,1,3,2,RoutingStrategyType.CONSISTENT_STRATEGY);
  Map<Integer,Store<ByteArray,byte[]>> subStores=Maps.newHashMap();
  StatTrackingStore<ByteArray,byte[]> statTrackingStore=null;
  for (int i=0; i < 3; ++i) {
    statTrackingStore=new StatTrackingStore<ByteArray,byte[]>(new InMemoryStorageEngine<ByteArray,byte[]>("test"),null);
    subStores.put(Iterables.get(cluster.getNodes(),i).getId(),statTrackingStore);
  }
  setFailureDetector(subStores);
  RoutedStore routedStore=new RoutedStore("test",subStores,cluster,storeDef,1,true,1000L,failureDetector);
  ByteArray key1=aKey;
  routedStore.put(key1,Versioned.value("value1".getBytes()));
  ByteArray key2=TestUtils.toByteArray("voldemort");
  routedStore.put(key2,Versioned.value("value2".getBytes()));
  long putCount=statTrackingStore.getStats().getCount(Tracked.PUT);
  routedStore.getAll(Arrays.asList(key1,key2));
  Thread.sleep(500);
  assertEquals("put count should remain the same if there are no read repairs",putCount,statTrackingStore.getStats().getCount(Tracked.PUT));
}
