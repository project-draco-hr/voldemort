{
  Map<Integer,Store<byte[],byte[]>> subStores=Maps.newHashMap();
  int count=0;
  for (  Node n : cluster.getNodes()) {
    if (count >= cluster.getNumberOfNodes())     throw new IllegalArgumentException(failing + " failing nodes, " + sleepy+ " sleepy nodes, but only "+ cluster.getNumberOfNodes()+ " nodes in the cluster.");
 else     if (count < failing)     subStores.put(n.getId(),new FailingStore<byte[],byte[]>("test",e));
 else     if (count < failing + sleepy)     subStores.put(n.getId(),new SleepyStore<byte[],byte[]>(Long.MAX_VALUE,new InMemoryStorageEngine<byte[],byte[]>("test")));
 else     subStores.put(n.getId(),new InMemoryStorageEngine<byte[],byte[]>("test"));
    count+=1;
  }
  return new RoutedStore("test",subStores,strategy,reads,writes,threads,true,1000L);
}
