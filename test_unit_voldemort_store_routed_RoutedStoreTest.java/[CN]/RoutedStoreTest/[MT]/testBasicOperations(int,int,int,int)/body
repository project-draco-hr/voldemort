{
  RoutableStore routableStore=getStore(cluster,reads,writes,threads,failures);
  Store<ByteArray,byte[]> store=new InconsistencyResolvingStore<ByteArray,byte[]>(routableStore,new VectorClockInconsistencyResolver<byte[]>());
  VectorClock clock=getClock(1);
  Versioned<byte[]> versioned=new Versioned<byte[]>(aValue,clock);
  routableStore.put(aKey,versioned);
  assertNOrMoreEqual(routableStore,cluster.getNumberOfNodes() - failures,aKey,versioned);
  List<Versioned<byte[]>> found=store.get(aKey);
  assertEquals(1,found.size());
  assertEquals(versioned,found.get(0));
  assertNOrMoreEqual(routableStore,cluster.getNumberOfNodes() - failures,aKey,versioned);
  assertTrue(routableStore.delete(aKey,versioned.getVersion()));
  assertNEqual(routableStore,0,aKey,versioned);
  assertTrue(!routableStore.delete(aKey,versioned.getVersion()));
}
