{
  cluster=VoldemortTestConstants.getThreeNodeCluster();
  StoreDefinition storeDef=ServerTestUtils.getStoreDef("test",3,3,2,3,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  int sleepTimeMs=1000;
  Map<Integer,Store<ByteArray,byte[]>> subStores=Maps.newHashMap();
  for (  Node node : cluster.getNodes()) {
    Store<ByteArray,byte[]> store=new InMemoryStorageEngine<ByteArray,byte[]>("test");
    if (subStores.isEmpty()) {
      store=new SleepyStore<ByteArray,byte[]>(sleepTimeMs,store);
    }
    subStores.put(node.getId(),store);
  }
  setFailureDetector(subStores);
  routedStoreThreadPool=Executors.newFixedThreadPool(cluster.getNumberOfNodes());
  RoutedStoreFactory routedStoreFactory=new RoutedStoreFactory(isPipelineRoutedStoreEnabled,routedStoreThreadPool,10000L);
  RoutedStore routedStore=routedStoreFactory.create(cluster,storeDef,subStores,true,failureDetector);
  routedStore.put(aKey,Versioned.value(aValue));
  routedStoreFactory=new RoutedStoreFactory(isPipelineRoutedStoreEnabled,routedStoreThreadPool,sleepTimeMs);
  routedStore=routedStoreFactory.create(cluster,storeDef,subStores,true,failureDetector);
  List<Versioned<byte[]>> versioneds=routedStore.get(aKey);
  assertEquals(2,versioneds.size());
}
