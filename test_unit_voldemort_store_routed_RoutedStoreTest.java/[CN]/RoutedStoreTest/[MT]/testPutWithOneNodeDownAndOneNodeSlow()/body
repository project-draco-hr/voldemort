{
  cluster=VoldemortTestConstants.getThreeNodeCluster();
  StoreDefinition storeDef=ServerTestUtils.getStoreDef("test",3,2,2,2,2,RoutingStrategyType.CONSISTENT_STRATEGY);
  Map<Integer,Store<ByteArray,byte[],byte[]>> subStores=Maps.newHashMap();
  int id1=Iterables.get(cluster.getNodes(),0).getId();
  int id2=Iterables.get(cluster.getNodes(),1).getId();
  int id3=Iterables.get(cluster.getNodes(),2).getId();
  subStores.put(id3,new InMemoryStorageEngine<ByteArray,byte[],byte[]>("test"));
  subStores.put(id1,new FailingStore<ByteArray,byte[],byte[]>("test"));
  subStores.put(id2,new SleepyStore<ByteArray,byte[],byte[]>(100,new InMemoryStorageEngine<ByteArray,byte[],byte[]>("test")));
  setFailureDetector(subStores);
  routedStoreThreadPool=Executors.newFixedThreadPool(1);
  RoutedStoreFactory routedStoreFactory=createFactory(BANNAGE_PERIOD);
  RoutedStore routedStore=routedStoreFactory.create(cluster,storeDef,subStores,failureDetector);
  Store<ByteArray,byte[],byte[]> store=new InconsistencyResolvingStore<ByteArray,byte[],byte[]>(routedStore,new VectorClockInconsistencyResolver<byte[]>());
  store.put(aKey,new Versioned<byte[]>(aValue),aTransform);
}
