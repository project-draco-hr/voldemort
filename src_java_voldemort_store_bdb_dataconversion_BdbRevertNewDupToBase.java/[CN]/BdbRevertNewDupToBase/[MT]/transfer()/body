{
  cursor=srcDB.openCursor(null,null);
  DatabaseEntry keyEntry=new DatabaseEntry();
  DatabaseEntry valueEntry=new DatabaseEntry();
  VersionedSerializer<byte[]> versionedSerializer=new VersionedSerializer<byte[]>(new IdentitySerializer());
  List<Versioned<byte[]>> vals;
  long startTime=System.currentTimeMillis();
  int scanCount=0;
  int keyCount=0;
  while (cursor.getNext(keyEntry,valueEntry,LockMode.READ_UNCOMMITTED) == OperationStatus.SUCCESS) {
    keyCount++;
    vals=StoreBinaryFormat.fromByteArray(valueEntry.getData());
    for (    Versioned<byte[]> val : vals) {
      OperationStatus putStatus=dstDB.put(null,keyEntry,new DatabaseEntry(versionedSerializer.toBytes(val)));
      if (OperationStatus.SUCCESS != putStatus) {
        String errorStr="Put failed with " + putStatus + " for key"+ BdbConvertData.writeAsciiString(keyEntry.getData());
        logger.error(errorStr);
        throw new Exception(errorStr);
      }
      scanCount++;
    }
    if (scanCount % 1000000 == 0)     logger.info("Reverted " + scanCount + " entries in "+ (System.currentTimeMillis() - startTime) / 1000 + " secs");
  }
  logger.info("Reverted " + scanCount + " entries and "+ keyCount+ " keys in "+ (System.currentTimeMillis() - startTime) / 1000 + " secs");
}
