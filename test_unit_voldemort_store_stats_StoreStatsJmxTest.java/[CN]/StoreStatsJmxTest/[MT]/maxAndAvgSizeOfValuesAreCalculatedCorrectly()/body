{
  for (  Tracked op : EnumSet.of(GET,GET_ALL,PUT)) {
    StoreStats stats=new StoreStats("tests.maxAndAvgSizeOfValuesAreCalculatedCorrectly");
    StoreStatsJmx jmx=new StoreStatsJmx(stats);
    long[] valueSizes=new long[]{100,450,200,300};
    long sum=0l;
    long max=valueSizes[0];
    final long timeNS=1 * NS_PER_MS;
    for (    long v : valueSizes) {
      if (op == GET)       stats.recordGetTime(timeNS,false,v,0);
 else       if (op == GET_ALL)       stats.recordGetAllTime(timeNS,1,1,v,0);
 else       stats.recordPutTimeAndSize(timeNS,v,0);
      sum+=v;
      max=Math.max(max,v);
    }
    double average=sum / (double)valueSizes.length;
    assertEquals(op == PUT ? max : 0,jmx.getMaxPutSizeInBytes());
    assertEquals(op == PUT ? average : Double.NaN,jmx.getAveragePutSizeInBytes(),0.0);
    assertEquals(op == GET ? max : 0,jmx.getMaxGetSizeInBytes());
    assertEquals(op == GET ? average : Double.NaN,jmx.getAverageGetSizeInBytes(),0.0);
    assertEquals(op == GET_ALL ? max : 0,jmx.getMaxGetAllSizeInBytes());
    assertEquals(op == GET_ALL ? average : Double.NaN,jmx.getAverageGetAllSizeInBytes(),0.0);
  }
}
