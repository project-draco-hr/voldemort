{
  VProto.GetAllResponse.Builder response=VProto.GetAllResponse.newBuilder();
  try {
    List<ByteArray> keys=new ArrayList<ByteArray>(request.getKeysCount());
    for (    ByteString string : request.getKeysList())     keys.add(ProtoUtils.decodeBytes(string));
    int transformsSize=request.getTransformsCount();
    Map<ByteArray,byte[]> transforms=null;
    if (transformsSize > 0) {
      for (      VProto.GetAllRequest.GetAllTransform transform : request.getTransformsList()) {
        transforms=new HashMap<ByteArray,byte[]>(transformsSize);
        transforms.put(ProtoUtils.decodeBytes(transform.getKey()),ProtoUtils.decodeBytes(transform.getTransform()).get());
      }
    }
    Map<ByteArray,List<Versioned<byte[]>>> values=store.getAll(keys,transforms);
    for (    Map.Entry<ByteArray,List<Versioned<byte[]>>> entry : values.entrySet()) {
      VProto.KeyedVersions.Builder keyedVersion=VProto.KeyedVersions.newBuilder().setKey(ProtoUtils.encodeBytes(entry.getKey()));
      for (      Versioned<byte[]> version : entry.getValue())       keyedVersion.addVersions(ProtoUtils.encodeVersioned(version));
      response.addValues(keyedVersion);
    }
  }
 catch (  VoldemortException e) {
    response.setError(ProtoUtils.encodeError(getErrorMapper(),e));
  }
  return response.build();
}
