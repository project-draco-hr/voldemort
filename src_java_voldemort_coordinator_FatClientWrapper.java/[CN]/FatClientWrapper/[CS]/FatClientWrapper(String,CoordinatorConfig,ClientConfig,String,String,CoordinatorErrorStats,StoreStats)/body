{
  this.config=config;
  this.fatClientExecutor=new ThreadPoolExecutor(this.config.getFatClientWrapperCorePoolSize(),this.config.getFatClientWrapperMaxPoolSize(),this.config.getFatClientWrapperKeepAliveInSecs(),TimeUnit.SECONDS,new ArrayBlockingQueue<Runnable>(this.config.getFatClientWrapperMaxPoolSize(),true),new ThreadFactory(){
    @Override public Thread newThread(    Runnable r){
      Thread t=new Thread(r);
      t.setName("FatClientExecutor");
      return t;
    }
  }
,new RejectedExecutionHandler(){
    @Override public void rejectedExecution(    Runnable r,    ThreadPoolExecutor executor){
    }
  }
);
  this.storeClientFactory=new SocketStoreClientFactory(clientConfig);
  this.dynamicTimeoutClient=new DynamicTimeoutStoreClient<ByteArray,byte[]>(storeName,this.storeClientFactory,1,storesXml,clusterXml);
  this.errorStats=errorStats;
  this.coordinatorPerfStats=coordinatorPerfStats;
  this.storeName=storeName;
  JmxUtils.registerMbean(this,JmxUtils.createObjectName(JmxUtils.getPackageName(this.getClass()),JmxUtils.getClassName(this.getClass()) + "-" + storeName));
}
