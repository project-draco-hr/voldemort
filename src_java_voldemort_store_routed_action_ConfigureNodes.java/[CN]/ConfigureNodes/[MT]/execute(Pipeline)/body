{
  List<Node> nodes=null;
  try {
    nodes=getNodes(key);
  }
 catch (  VoldemortException e) {
    pipelineData.setFatalError(e);
    pipeline.abort();
    return;
  }
  if (logger.isDebugEnabled())   logger.debug("Adding " + nodes.size() + " node(s) to preference list");
  if (pipelineData.getZonesRequired() != null) {
    validateZonesRequired(this.clientZone,pipelineData.getZonesRequired());
    Map<Integer,List<Node>> zoneIdToNode=convertToZoneNodeMap(nodes);
    nodes=new ArrayList<Node>();
    List<Integer> zoneProximityList=this.clientZone.getProximityList();
    if (pipeline.getOperation() != Operation.PUT) {
      for (int index=0; index < pipelineData.getZonesRequired(); index++) {
        List<Node> zoneNodes=zoneIdToNode.get(zoneProximityList.get(index));
        if (zoneNodes != null && zoneNodes.size() > 0) {
          nodes.add(zoneNodes.remove(0));
        }
      }
    }
    List<Node> clientZoneNodes=zoneIdToNode.get(clientZone.getId());
    if (clientZoneNodes != null && clientZoneNodes.size() > 0)     nodes.addAll(clientZoneNodes);
    for (int index=0; index < zoneProximityList.size(); index++) {
      List<Node> zoneNodes=zoneIdToNode.get(zoneProximityList.get(index));
      if (zoneNodes != null && zoneNodes.size() > 0) {
        nodes.addAll(zoneNodes);
      }
    }
  }
  if (logger.isDebugEnabled()) {
    StringBuilder nodeStr=new StringBuilder();
    for (    Node node : nodes) {
      nodeStr.append(node.getId() + ",");
    }
    logger.debug("Key " + ByteUtils.toHexString(key.get()) + " final preference list to contact "+ nodeStr);
  }
  pipelineData.setNodes(nodes);
  pipeline.addEvent(completeEvent);
}
