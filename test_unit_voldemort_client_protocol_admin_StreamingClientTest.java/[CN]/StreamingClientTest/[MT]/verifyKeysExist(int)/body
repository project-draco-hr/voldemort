{
  RoutingStrategyFactory factory=new RoutingStrategyFactory();
  RoutingStrategy storeRoutingStrategy=factory.updateRoutingStrategy(storeDef,adminClient.getAdminClientCluster());
  HashMap<Integer,ArrayList<String>> expectedNodeIdToKeys;
  expectedNodeIdToKeys=new HashMap();
  Collection<Node> nodesInCluster=adminClient.getAdminClientCluster().getNodes();
  for (  Node node : nodesInCluster) {
    ArrayList<String> keysForNode=new ArrayList();
    expectedNodeIdToKeys.put(node.getId(),keysForNode);
  }
  for (int i=0; i < NUM_KEYS_1; i++) {
    String key=i + "";
    String value=key;
    List<Node> nodeList=storeRoutingStrategy.routeRequest(key.getBytes());
    for (    Node node : nodeList) {
      ArrayList<String> keysForNode=expectedNodeIdToKeys.get(node.getId());
      keysForNode.add(key);
    }
  }
  ArrayList<String> fetchedKeysForNode=new ArrayList();
  for (  Node node : nodesInCluster) {
    List<Integer> partitionIdList=Lists.newArrayList();
    partitionIdList.addAll(node.getPartitionIds());
    Iterator<ByteArray> keyIteratorRef=null;
    keyIteratorRef=adminClient.bulkFetchOps.fetchKeys(node.getId(),TEST_STORE_NAME,partitionIdList,null,false);
    final SerializerDefinition serializerDef=storeDef.getKeySerializer();
    final SerializerFactory serializerFactory=new DefaultSerializerFactory();
    @SuppressWarnings("unchecked") final Serializer<Object> serializer=(Serializer<Object>)serializerFactory.getSerializer(serializerDef);
    final CompressionStrategy keysCompressionStrategy;
    if (serializerDef != null && serializerDef.hasCompression()) {
      keysCompressionStrategy=new CompressionStrategyFactory().get(serializerDef.getCompression());
    }
 else {
      keysCompressionStrategy=null;
    }
    final Iterator<ByteArray> keyIterator=keyIteratorRef;
    while (keyIterator.hasNext()) {
      byte[] keyBytes=keyIterator.next().get();
      try {
        Object keyObject=serializer.toObject((null == keysCompressionStrategy) ? keyBytes : keysCompressionStrategy.inflate(keyBytes));
        fetchedKeysForNode.add((String)keyObject);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
  ArrayList<String> keysForNode=expectedNodeIdToKeys.get(nodeIdToVerifyOn);
  if (!fetchedKeysForNode.containsAll(keysForNode))   return false;
 else   return true;
}
