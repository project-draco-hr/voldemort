{
  VAdminProto.UpdatePartitionEntriesRequest.Builder request=originalRequest.toBuilder();
  boolean continueFetching=true;
  boolean firstFetched=true;
  try {
    String storeName=request.getStore();
    StorageEngine<ByteArray,byte[]> storageEngine=storeRepository.getStorageEngine(storeName);
    if (storageEngine == null) {
      throw new VoldemortException("No stored named '" + storeName + "'.");
    }
    IoThrottler throttler=new IoThrottler(streamMaxBytesWritesPerSec);
    while (continueFetching) {
      if (!firstFetched) {
        request=ProtoUtils.readToBuilder(inputStream,VAdminProto.UpdatePartitionEntriesRequest.newBuilder());
      }
 else {
        firstFetched=false;
      }
      for (      VAdminProto.PartitionEntry partitionEntry : request.getPartitionEntriesList()) {
        ByteArray key=ProtoUtils.decodeBytes(partitionEntry.getKey());
        Versioned<byte[]> value=ProtoUtils.decodeVersioned(partitionEntry.getVersioned());
        storageEngine.put(key,value);
        if (throttler != null) {
          throttler.maybeThrottle(partitionEntry.getKey().size() + partitionEntry.getVersioned().getValue().size() + 1);
        }
      }
      continueFetching=request.getContinue();
    }
    VAdminProto.UpdatePartitionEntriesResponse response=VAdminProto.UpdatePartitionEntriesResponse.newBuilder().build();
    writeMessageAndFlush(response,outputStream);
  }
 catch (  VoldemortException e) {
    VAdminProto.UpdatePartitionEntriesResponse response=VAdminProto.UpdatePartitionEntriesResponse.newBuilder().setError(ProtoUtils.encodeError(errorCodeMapper,e)).build();
    writeMessageAndFlush(response,outputStream);
  }
}
