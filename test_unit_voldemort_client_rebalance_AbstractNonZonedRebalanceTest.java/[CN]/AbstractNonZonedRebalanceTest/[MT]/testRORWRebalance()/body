{
  logger.info("Starting testRORWRebalance");
  try {
    Cluster currentCluster=ServerTestUtils.getLocalCluster(2,new int[][]{{0,1,2,3,4,5,6,7,8},{}});
    Cluster finalCluster=RebalanceUtils.createUpdatedCluster(currentCluster,1,Lists.newArrayList(2,3));
    List<Integer> serverList=Arrays.asList(0,1);
    Map<String,String> configProps=new HashMap<String,String>();
    configProps.put("admin.max.threads","50");
    currentCluster=startServers(currentCluster,storeDefFileWithoutReplication,serverList,configProps);
    String bootstrapUrl=getBootstrapUrl(currentCluster,0);
    boolean stealerBased=!useDonorBased;
    final ClusterTestUtils.RebalanceKit rebalanceKit=ClusterTestUtils.getRebalanceKit(bootstrapUrl,stealerBased,finalCluster);
    try {
      populateData(currentCluster,roStoreDefWithoutReplication,rebalanceKit.controller.getAdminClient(),true);
      populateData(currentCluster,rwStoreDefWithoutReplication,rebalanceKit.controller.getAdminClient(),false);
      rebalanceAndCheck(rebalanceKit.plan,rebalanceKit.controller,Arrays.asList(1));
      checkConsistentMetadata(finalCluster,serverList);
    }
  finally {
      stopServer(serverList);
    }
  }
 catch (  AssertionError ae) {
    logger.error("Assertion broken in testRORWRebalance ",ae);
    throw ae;
  }
}
