{
  logger.info("Starting testRWRebalanceFourNodes");
  try {
    Cluster currentCluster=ServerTestUtils.getLocalCluster(4,new int[][]{{0,1,4,7,9},{2,3,5,6,8},{},{}});
    ArrayList<Node> nodes=Lists.newArrayList(currentCluster.getNodes());
    int totalPortNum=nodes.size() * 3;
    int[] ports=new int[totalPortNum];
    for (int i=0; i < nodes.size(); i++) {
      ports[i * 3]=nodes.get(i).getHttpPort();
      ports[i * 3 + 1]=nodes.get(i).getSocketPort();
      ports[i * 3 + 2]=nodes.get(i).getAdminPort();
    }
    Cluster finalCluster=ServerTestUtils.getLocalCluster(4,ports,new int[][]{{0,4,7},{2,8},{1,6},{3,5,9}});
    List<Integer> serverList=Arrays.asList(0,1,2,3);
    currentCluster=startServers(currentCluster,rwTwoStoreDefFileWithReplication,serverList,null);
    String bootstrapUrl=getBootstrapUrl(currentCluster,0);
    int maxParallel=5;
    boolean stealerBased=!useDonorBased;
    final ClusterTestUtils.RebalanceKit rebalanceKit=ClusterTestUtils.getRebalanceKit(bootstrapUrl,maxParallel,stealerBased,finalCluster);
    try {
      populateData(currentCluster,rwStoreDefWithReplication,rebalanceKit.controller.getAdminClient(),false);
      populateData(currentCluster,rwStoreDefWithReplication2,rebalanceKit.controller.getAdminClient(),false);
      rebalanceAndCheck(rebalanceKit.plan,rebalanceKit.controller,serverList);
      checkConsistentMetadata(finalCluster,serverList);
    }
 catch (    Exception e) {
      fail(e.getMessage());
    }
 finally {
      stopServer(serverList);
    }
  }
 catch (  AssertionError ae) {
    logger.error("Assertion broken in testRWRebalanceFourNodes ",ae);
    throw ae;
  }
}
