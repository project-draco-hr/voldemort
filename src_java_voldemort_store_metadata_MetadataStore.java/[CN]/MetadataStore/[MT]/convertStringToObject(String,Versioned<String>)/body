{
  Object valueObject=null;
  if (CLUSTER_KEY.equals(key)) {
    valueObject=clusterMapper.readCluster(new StringReader(value.getValue()));
  }
 else   if (STORES_KEY.equals(key)) {
    valueObject=storeMapper.readStoreList(new StringReader(value.getValue()));
  }
 else   if (SERVER_STATE_KEY.equals(key)) {
    valueObject=VoldemortState.valueOf(value.getValue());
  }
 else   if (NODE_ID_KEY.equals(key)) {
    valueObject=Integer.parseInt(value.getValue());
  }
 else   if (REBALANCING_STEAL_INFO.equals(key)) {
    String valueString=value.getValue();
    if (valueString.startsWith("[")) {
      valueObject=RebalancerState.create(valueString);
    }
 else {
      valueObject=new RebalancerState(Arrays.asList(RebalancePartitionsInfo.create(valueString)));
    }
  }
 else   if (REBALANCING_SOURCE_CLUSTER_XML.equals(key)) {
    if (value.getValue() != null && value.getValue().length() > 0) {
      valueObject=clusterMapper.readCluster(new StringReader(value.getValue()));
    }
  }
 else   if (REBALANCING_SOURCE_STORES_XML.equals(key)) {
    if (value.getValue() != null && value.getValue().length() > 0) {
      valueObject=storeMapper.readStoreList(new StringReader(value.getValue()));
    }
  }
 else {
    throw new VoldemortException("Unhandled key:'" + key + "' for String to Object serialization.");
  }
  return new Versioned<Object>(valueObject,value.getVersion());
}
