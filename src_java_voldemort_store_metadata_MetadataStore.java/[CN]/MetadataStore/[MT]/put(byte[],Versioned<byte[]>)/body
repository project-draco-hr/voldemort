{
synchronized (this) {
    String keyStr=ByteUtils.getString(key,"UTF-8");
    String valueStr=ByteUtils.getString(value.getValue(),"UTF-8");
    Versioned<String> newVersioned=new Versioned<String>(valueStr,value.getVersion());
    if (STORES_KEY.equals(key)) {
      List<Versioned<String>> current=innerStore.get(keyStr);
      if (current.size() == 0) {
        innerStore.put(keyStr,newVersioned);
      }
 else       if (current.size() == 1) {
        Versioned<String> versioned=current.get(0);
        if (versioned.getVersion().compare(value.getVersion()) != Occured.BEFORE)         throw new ObsoleteVersionException("Attempt to put out of date store metadata!");
        handleStoreChange(storeMapper.readStoreList(new StringReader(valueStr)));
        innerStore.put(keyStr,newVersioned);
      }
 else {
        throw new VoldemortException("Inconsistent metadata: " + current);
      }
    }
 else     if (CLUSTER_KEY.equals(key)) {
      innerStore.put(keyStr,newVersioned);
    }
  }
}
