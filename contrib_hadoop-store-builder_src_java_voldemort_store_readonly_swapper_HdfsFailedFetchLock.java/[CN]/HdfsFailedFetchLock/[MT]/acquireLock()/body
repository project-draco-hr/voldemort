{
  if (lockAcquired) {
    logger.info("HdfsFailedFetchLock.acquireLock() called while it is already acquired!");
    return;
  }
  int attempts=1;
  while (!this.lockAcquired && attempts <= maxAttempts) {
    FSDataOutputStream outputStream=null;
    try {
      Path temporaryLockFile=new Path(beforeLockDir,getUniqueFileName());
      outputStream=this.fileSystem.create(temporaryLockFile,false);
      props.storeFlattened(outputStream);
      outputStream.flush();
      outputStream.close();
      this.lockAcquired=this.fileSystem.rename(temporaryLockFile,this.lockFile);
      if (!this.lockAcquired) {
        logFailureAndWait(ACQUIRE_LOCK,ALREADY_EXISTS,attempts);
        this.fileSystem.delete(temporaryLockFile,false);
      }
    }
 catch (    IOException e) {
      handleIOException(e,ACQUIRE_LOCK,attempts);
    }
 finally {
      if (outputStream != null) {
        outputStream.close();
      }
    }
    if (!this.lockAcquired) {
      attempts++;
    }
  }
  if (!this.lockAcquired) {
    throw new VoldemortException(exceptionMessage(ACQUIRE_LOCK));
  }
}
