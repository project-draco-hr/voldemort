{
  storeDef1=ServerTestUtils.getStoreDef("test",2,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  storeDef2=ServerTestUtils.getStoreDef("test2",3,1,1,1,1,RoutingStrategyType.CONSISTENT_STRATEGY);
  File tempStoreXml=new File(TestUtils.createTempDir(),"stores.xml");
  FileUtils.writeStringToFile(tempStoreXml,new StoreDefinitionsMapper().writeStoreList(Lists.newArrayList(storeDef1,storeDef2)));
  int numServers=4;
  servers=new VoldemortServer[numServers];
  int partitionMap[][]={{0,1,2,3},{4,5,6,7},{8,9,10,11},{}};
  cluster=ServerTestUtils.startVoldemortCluster(numServers,servers,partitionMap,socketStoreFactory,useNio,null,tempStoreXml.getAbsolutePath(),new Properties());
  targetCluster=RebalanceUtils.createUpdatedCluster(cluster,3,Lists.newArrayList(0));
  RebalanceClusterPlan plan=new RebalanceClusterPlan(cluster,targetCluster,Lists.newArrayList(storeDef1,storeDef2));
  RebalanceStealerBasedBatchPlan rsbbp=new RebalanceStealerBasedBatchPlan(plan);
  plans=RebalanceUtils.flattenNodePlans(Lists.newArrayList(rsbbp.getRebalancingTaskQueue()));
  adminClient=ServerTestUtils.getAdminClient(cluster);
}
