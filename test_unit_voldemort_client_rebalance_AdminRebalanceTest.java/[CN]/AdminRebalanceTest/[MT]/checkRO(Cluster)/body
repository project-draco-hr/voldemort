{
  for (  StoreDefinition storeDef : Lists.newArrayList(storeDef1,storeDef2)) {
    Map<Integer,Set<Pair<Integer,Integer>>> nodeToPartitions=RebalanceUtils.getNodeIdToAllPartitions(cluster,storeDef,true);
    for (    Map.Entry<Integer,Set<Pair<Integer,Integer>>> entry : nodeToPartitions.entrySet()) {
      int nodeId=entry.getKey();
      Set<Pair<Integer,Integer>> buckets=entry.getValue();
      assertEquals(servers[nodeId].getMetadataStore().getCluster(),cluster);
      ReadOnlyStorageEngine engine=(ReadOnlyStorageEngine)servers[nodeId].getStoreRepository().getStorageEngine(storeDef.getName());
      HashMap<Object,Integer> storeBuckets=engine.getChunkedFileSet().getChunkIdToNumChunks();
      for (      Pair<Integer,Integer> bucket : buckets) {
        if (bucket.getFirst() < storeDef.getReplicationFactor())         assertEquals(storeBuckets.containsKey(Pair.create(bucket.getSecond(),bucket.getFirst())),true);
      }
    }
  }
}
