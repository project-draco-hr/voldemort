{
  ReadRepairer<ByteArray,byte[]> readRepairer=new ReadRepairer<ByteArray,byte[]>();
  List<NodeValue<ByteArray,byte[]>> toReadRepair=Lists.newArrayList();
  for (  NodeValue<ByteArray,byte[]> v : readRepairer.getRepairs(nodeValues)) {
    Versioned<byte[]> versioned=Versioned.value(v.getVersioned().getValue(),((VectorClock)v.getVersion()).clone());
    toReadRepair.add(new NodeValue<ByteArray,byte[]>(v.getNodeId(),v.getKey(),versioned));
  }
  if (logger.isDebugEnabled()) {
    for (    NodeValue<ByteArray,byte[]> nodeKeyValue : toReadRepair) {
      logger.debug("\tRepair key " + nodeKeyValue.getKey() + "on node with id "+ nodeKeyValue.getNodeId()+ " for version "+ nodeKeyValue.getVersion());
    }
  }
  return toReadRepair;
}
