{
  double expected=ids.size() / (double)numNodes;
  double chiSq=0.0;
  int df=numNodes - 1;
  NumberFormat prct=NumberFormat.getPercentInstance();
  prct.setMaximumFractionDigits(4);
  NumberFormat num=NumberFormat.getInstance();
  num.setMaximumFractionDigits(4);
  num.setMinimumFractionDigits(4);
  System.out.println("node\treqs\tX^2\tskew");
  for (  Integer id : ids.elementSet()) {
    System.out.println(id + "\t" + ids.count(id)+ "\t"+ num.format(chiSq(ids.count(id),expected))+ "\t"+ prct.format((ids.count(id) - expected) / expected));
    chiSq+=chiSq(ids.count(id),expected);
  }
  System.out.println("X^2 = " + chiSq);
  ChiSquare dist=new ChiSquare(df,new MersenneTwister());
  double pValue=1.0 - dist.cdf(chiSq);
  System.out.println("p-value = " + pValue);
  assertTrue("Non-uniform load distribution detected.",pValue >= 0.05);
}
