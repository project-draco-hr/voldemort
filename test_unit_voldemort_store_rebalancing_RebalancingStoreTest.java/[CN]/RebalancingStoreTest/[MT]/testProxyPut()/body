{
  for (int i=100; i <= 1000; i++) {
    ByteArray key=new ByteArray(ByteUtils.getBytes("" + i,"UTF-8"));
    byte[] value=ByteUtils.getBytes("value-" + i,"UTF-8");
    Store<ByteArray,byte[]> store=server1.getStoreRepository().getLocalStore(storeName);
    store.put(key,Versioned.value(value,new VectorClock().incremented(0,System.currentTimeMillis())));
    try {
      store.put(key,store.get(key).get(0));
      fail("put should throw ObsoleteVersionException before hitting this");
    }
 catch (    ObsoleteVersionException e) {
    }
  }
  VoldemortMetadata metadata=server0.getVoldemortMetadata();
  metadata.setDonorNode(server0.getVoldemortMetadata().getCurrentCluster().getNodeById(1));
  metadata.setCurrentPartitionStealList(Arrays.asList(new Integer[]{2,3}));
  RebalancingStore rebalancingStore=getRebalancingStore(metadata);
  metadata.setServerState(VoldemortMetadata.ServerState.REBALANCING_STEALER_STATE);
  for (int i=100; i <= 1000; i++) {
    ByteArray key=new ByteArray(ByteUtils.getBytes("" + i,"UTF-8"));
    if (metadata.getRoutingStrategy(storeName).getPartitionList(key.get()).contains(new Integer(2)) || metadata.getRoutingStrategy(storeName).getPartitionList(key.get()).contains(new Integer(3))) {
      try {
        rebalancingStore.put(key,rebalancingStore.get(key).get(0));
        fail("put should throw ObsoleteVersionException before hitting this");
      }
 catch (      ObsoleteVersionException e) {
      }
    }
  }
}
