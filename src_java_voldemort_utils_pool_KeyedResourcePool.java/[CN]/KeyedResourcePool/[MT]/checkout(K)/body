{
  checkNotClosed();
  long startNs=System.nanoTime();
  Pool<V> resourcePool=getResourcePoolForKey(key);
  V resource=null;
  try {
    checkNotClosed();
    resource=attemptNonBlockingCheckout(key,resourcePool);
    if (resource == null) {
      long nonBlockingElapsedNs=System.nanoTime() - startNs;
      long timeRemainingNs=resourcePoolConfig.getTimeout(TimeUnit.NANOSECONDS) - nonBlockingElapsedNs;
      if (timeRemainingNs > 0) {
        resource=resourcePool.blockingGet(timeRemainingNs);
      }
      if (resource == null) {
        long totalElapsedNs=System.nanoTime() - startNs;
        long blockingElapsedNs=totalElapsedNs - nonBlockingElapsedNs;
        String errorMessage=String.format("Timeout while checking out resource (%s). Configured time (%d) ns NonBlocking time (%d) ns Blocking time (%d) ns ",key,resourcePoolConfig.getTimeout(TimeUnit.NANOSECONDS),nonBlockingElapsedNs,blockingElapsedNs);
        throw new TimeoutException(errorMessage);
      }
    }
    if (!objectFactory.validate(key,resource))     throw new ExcessiveInvalidResourcesException(1);
  }
 catch (  Exception e) {
    destroyResource(key,resourcePool,resource);
    throw e;
  }
  return resource;
}
