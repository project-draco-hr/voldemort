{
  if (this.size.get() >= this.maxPoolSize) {
    return false;
  }
  if (this.size.incrementAndGet() <= this.maxPoolSize) {
    try {
      V resource=null;
      int currentCreatesInFlight=0;
      try {
        currentCreatesInFlight=createsInFlight.getAndIncrement();
        resource=objectFactory.create(key);
      }
  finally {
        createsInFlight.decrementAndGet();
      }
      if (resource != null) {
        if (!nonBlockingPut(resource)) {
          this.size.decrementAndGet();
          objectFactory.destroy(key,resource);
          logger.info("attemptGrow established new connection for key " + key.toString() + " with "+ currentCreatesInFlight+ " other connection establishments in flight."+ " And then promptly destroyed the new connection.");
          return false;
        }
        logger.info("attemptGrow established new connection for key " + key.toString() + " with "+ currentCreatesInFlight+ " other connection establishments in flight."+ " After checking in to KeyedResourcePool, there are "+ queue.size()+ " destinations checked in.");
      }
    }
 catch (    Exception e) {
      this.size.decrementAndGet();
      throw e;
    }
  }
 else {
    this.size.decrementAndGet();
    return false;
  }
  return true;
}
