{
  if (logger.isTraceEnabled()) {
    if (e != null)     logger.trace("Node " + node.getId() + " updated, successDelta: "+ successDelta,e);
 else     logger.trace("Node " + node.getId() + " updated, successDelta: "+ successDelta);
  }
  final long currentTime=getConfig().getTime().getMilliseconds();
  String catastrophicError=getCatastrophicError(e);
  NodeStatus nodeStatus=getNodeStatus(node);
  boolean invokeSetAvailable=false;
  boolean invokeSetUnavailable=false;
synchronized (nodeStatus) {
    if (nodeStatus.getNumConsecutiveCatastrophicErrors() != 0 && successDelta > 0) {
      nodeStatus.setNumConsecutiveCatastrophicErrors(0);
      if (logger.isTraceEnabled()) {
        logger.trace("Resetting # consecutive connect errors for node : " + node);
      }
    }
    if (currentTime >= nodeStatus.getStartMillis() + getConfig().getThresholdInterval()) {
      nodeStatus.setStartMillis(currentTime);
      nodeStatus.setSuccess(successDelta);
      if (successDelta < 1)       nodeStatus.setFailure(1);
      nodeStatus.setTotal(1);
    }
 else {
      nodeStatus.incrementSuccess(successDelta);
      if (successDelta < 1)       nodeStatus.incrementFailure(1);
      nodeStatus.incrementTotal(1);
      if (catastrophicError != null) {
        if (logger.isTraceEnabled())         logger.trace("Node " + node.getId() + " experienced catastrophic error: "+ catastrophicError+ " on node : "+ node+ " # accumulated errors = "+ nodeStatus.getNumConsecutiveCatastrophicErrors());
        nodeStatus.incrementConsecutiveCatastrophicErrors();
        if (nodeStatus.getNumConsecutiveCatastrophicErrors() >= this.failureDetectorConfig.getMaximumTolerableFatalFailures()) {
          invokeSetUnavailable=true;
          logger.info("Node " + node.getId() + " experienced consecutive "+ this.failureDetectorConfig.getMaximumTolerableFatalFailures()+ " catastrophic errors. Marking it unavailable.");
        }
      }
 else       if (nodeStatus.getFailure() >= getConfig().getThresholdCountMinimum()) {
        long percentage=(nodeStatus.getSuccess() * 100) / nodeStatus.getTotal();
        if (logger.isTraceEnabled())         logger.trace("Node " + node.getId() + " percentage: "+ percentage+ "%");
        if (percentage >= getConfig().getThreshold())         invokeSetAvailable=true;
 else         invokeSetUnavailable=true;
      }
    }
  }
  if (invokeSetAvailable) {
    setAvailable(node);
  }
 else   if (invokeSetUnavailable) {
    setUnavailable(node,e);
  }
}
