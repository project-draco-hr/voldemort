{
  File testSourceDirectory=TestUtils.createTempDir();
  File testDestinationDirectory=TestUtils.createTempDir();
  File indexFile=new File(testSourceDirectory,"0_0.index");
  FileUtils.writeByteArrayToFile(indexFile,TestUtils.randomBytes(100));
  File dataFile=new File(testSourceDirectory,"0_0.data");
  FileUtils.writeByteArrayToFile(dataFile,TestUtils.randomBytes(400));
  HdfsFetcher fetcher=new HdfsFetcher();
  File fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "1");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "1");
  File metadataFile=new File(testSourceDirectory,".metadata");
  FileUtils.writeByteArrayToFile(metadataFile,TestUtils.randomBytes(100));
  try {
    fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "2");
    fail("Should have thrown an exception since metadata file is corrupt");
  }
 catch (  VoldemortException e) {
  }
  metadataFile.delete();
  metadataFile=new File(testSourceDirectory,".metadata");
  ReadOnlyStorageMetadata metadata=new ReadOnlyStorageMetadata();
  metadata.add(ReadOnlyStorageMetadata.FORMAT,ReadOnlyStorageFormat.READONLY_V2.getCode());
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "3");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "3");
  metadataFile.delete();
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM_TYPE,"blah");
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "4");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "4");
  metadataFile.delete();
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM_TYPE,CheckSum.toString(CheckSumType.MD5));
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM,"1234");
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "5");
  assertNull(fetchedFile);
  metadataFile.delete();
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM,new String(Hex.encodeHex(CheckSumTests.calculateCheckSum(testSourceDirectory.listFiles(),CheckSumType.MD5))));
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "6");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "6");
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM_TYPE,CheckSum.toString(CheckSumType.ADLER32));
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM,new String(Hex.encodeHex(CheckSumTests.calculateCheckSum(testSourceDirectory.listFiles(),CheckSumType.ADLER32))));
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "7");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "7");
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM_TYPE,CheckSum.toString(CheckSumType.CRC32));
  metadata.add(ReadOnlyStorageMetadata.CHECKSUM,new String(Hex.encodeHex(CheckSumTests.calculateCheckSum(testSourceDirectory.listFiles(),CheckSumType.CRC32))));
  FileUtils.writeStringToFile(metadataFile,metadata.toJsonString());
  fetchedFile=fetcher.fetch(testSourceDirectory.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "8");
  assertNotNull(fetchedFile);
  assertEquals(fetchedFile.getAbsolutePath(),testDestinationDirectory.getAbsolutePath() + "8");
}
