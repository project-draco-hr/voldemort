{
  RequestHandlerFactory requestHandlerFactory=new RequestHandlerFactory(this.storeRepository,this.metadata,voldemortConfig);
  List<VoldemortService> services=new ArrayList<VoldemortService>();
  SchedulerService scheduler=new SchedulerService(voldemortConfig.getSchedulerThreads(),SystemTime.INSTANCE);
  services.add(new StorageService(storeRepository,metadata,scheduler,voldemortConfig));
  services.add(scheduler);
  if (voldemortConfig.isHttpServerEnabled())   services.add(new HttpService(this,storeRepository,RequestFormatType.VOLDEMORT_V1,voldemortConfig.getMaxThreads(),identityNode.getHttpPort()));
  if (voldemortConfig.isSocketServerEnabled()) {
    if (voldemortConfig.getUseNioConnector()) {
      logger.info("Using NIO Connector.");
      services.add(new NioSocketService(requestHandlerFactory,identityNode.getSocketPort(),voldemortConfig.getSocketBufferSize(),voldemortConfig.getNioConnectorSelectors(),"nio-socket-server",voldemortConfig.isJmxEnabled()));
    }
 else {
      logger.info("Using BIO Connector.");
      services.add(new SocketService(requestHandlerFactory,identityNode.getSocketPort(),voldemortConfig.getCoreThreads(),voldemortConfig.getMaxThreads(),voldemortConfig.getSocketBufferSize(),"socket-server",voldemortConfig.isJmxEnabled()));
    }
  }
  if (voldemortConfig.isAdminServerEnabled()) {
    services.add(new SocketService(requestHandlerFactory,identityNode.getAdminPort(),voldemortConfig.getAdminCoreThreads(),voldemortConfig.getAdminMaxThreads(),voldemortConfig.getAdminSocketBufferSize(),"admin-server",voldemortConfig.isJmxEnabled()));
  }
  if (voldemortConfig.isJmxEnabled())   services.add(new JmxService(this,this.metadata.getCluster(),storeRepository,services));
  return ImmutableList.copyOf(services);
}
