{
  List<Integer> partitionIds=request.getPartitionsList();
  for (  Entry<Object,Integer> entry : storageEngine.getChunkedFileSet().getChunkIdToNumChunks().entrySet()) {
    Pair<Integer,Integer> bucket=(Pair<Integer,Integer>)entry.getKey();
    if (partitionIds.contains(bucket.getFirst())) {
      for (int chunkId=0; chunkId < entry.getValue(); chunkId++) {
        String fileName=Integer.toString(bucket.getFirst()) + "_" + Integer.toString(bucket.getSecond())+ "_"+ Integer.toString(chunkId);
        File index=new File(this.storeDir,fileName + ".index");
        File data=new File(this.storeDir,fileName + ".data");
        if (!index.exists() && !data.exists()) {
          throw new VoldemortException("Could not find any data for partition " + bucket.getFirst() + ", replica-type "+ bucket.getSecond()+ ", chunk "+ chunkId);
        }
        logger.info("Streaming " + data.getAbsolutePath());
        streamFile(data,outputStream);
        logger.info("Completed streaming " + data.getAbsolutePath());
        logger.info("Streaming " + index.getAbsolutePath());
        streamFile(index,outputStream);
        logger.info("Completed streaming " + index.getAbsolutePath());
        handle.incrementEntriesScanned();
      }
    }
  }
  stats.closeHandle(handle);
  return StreamRequestHandlerState.COMPLETE;
}
