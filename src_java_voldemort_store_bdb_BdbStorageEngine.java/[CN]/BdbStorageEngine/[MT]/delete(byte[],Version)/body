{
  StoreUtils.assertValidKey(key);
  boolean deletedSomething=false;
  Cursor cursor=null;
  Transaction transaction=null;
  try {
    transaction=this.environment.beginTransaction(null,null);
    DatabaseEntry keyEntry=new DatabaseEntry(key);
    DatabaseEntry valueEntry=new DatabaseEntry();
    cursor=bdbDatabase.openCursor(transaction,null);
    for (OperationStatus status=cursor.getSearchKey(keyEntry,valueEntry,null); status == OperationStatus.SUCCESS; status=cursor.getNextDup(keyEntry,valueEntry,null)) {
      if (new VectorClock(valueEntry.getData()).compare(version) == Occured.BEFORE) {
        cursor.delete();
        deletedSomething=true;
      }
    }
    return deletedSomething;
  }
 catch (  DatabaseException e) {
    throw new PersistenceFailureException(e);
  }
 finally {
    try {
      attemptClose(cursor);
    }
  finally {
      attemptCommit(transaction);
    }
  }
}
