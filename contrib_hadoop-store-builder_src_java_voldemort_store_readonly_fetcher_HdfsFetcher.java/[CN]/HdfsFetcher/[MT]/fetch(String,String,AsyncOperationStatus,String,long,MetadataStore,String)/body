{
  ObjectName jmxName=null;
  HdfsCopyStats stats=null;
  try {
    final FileSystem fs=getHadoopFileSystem(sourceFileUrl,hadoopConfigPath);
    final Path path=new Path(sourceFileUrl);
    File destination=new File(destinationFile);
    if (destination.exists()) {
      throw new VoldemortException("Version directory " + destination.getAbsolutePath() + " already exists");
    }
    boolean isFile=fs.isFile(path);
    stats=new HdfsCopyStats(sourceFileUrl,destination,enableStatsFile,maxVersionsStatsFile,isFile,new HdfsPathInfo(fs,path));
    jmxName=JmxUtils.registerMbean("hdfs-copy-" + copyCount.getAndIncrement(),stats);
    logger.info("Starting fetch for : " + sourceFileUrl);
    boolean result=fetch(fs,path,destination,status,stats,storeName,pushVersion,metadataStore);
    logger.info("Completed fetch : " + sourceFileUrl);
    fs.close();
    if (result) {
      return destination;
    }
 else {
      return null;
    }
  }
 catch (  Throwable te) {
    logger.error("Error thrown while trying to get data from Hadoop filesystem",te);
    if (stats != null) {
      stats.reportError("File fetcher failed for destination " + destinationFile,te);
    }
    throw new VoldemortException("Error thrown while trying to get data from Hadoop filesystem : " + te);
  }
 finally {
    if (jmxName != null)     JmxUtils.unregisterMbean(jmxName);
    if (stats != null) {
      stats.complete();
    }
  }
}
