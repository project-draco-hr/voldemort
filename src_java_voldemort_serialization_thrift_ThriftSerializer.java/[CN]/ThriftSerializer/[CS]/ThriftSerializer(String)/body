{
  String[] thriftInfo=parseSchemaInfo(schemaInfo);
  if (thriftInfo[1] == null || thriftInfo[1].length() == 0) {
    throw new IllegalArgumentException("Thrift protocol is missing from schema-info.");
  }
  this.protocol=getThriftProtocol(thriftInfo[1]);
  if (this.protocol == ThriftProtocol.UNKNOWN) {
    throw new IllegalArgumentException("Unknown Thrift protocol found in schema-info");
  }
  if (thriftInfo[0] == null || thriftInfo[0].length() == 0) {
    throw new IllegalArgumentException("Thrift generated class name is missing from schema-info.");
  }
  try {
    this.messageClass=(Class<T>)Class.forName(thriftInfo[0]);
    this.serializeMethod=messageClass.getMethod("write",TProtocol.class);
    this.deserializeMethod=messageClass.getMethod("read",TProtocol.class);
  }
 catch (  ClassNotFoundException e) {
    throw new IllegalArgumentException(e);
  }
catch (  SecurityException e) {
    throw new IllegalArgumentException(e);
  }
catch (  NoSuchMethodException e) {
    throw new IllegalArgumentException(e);
  }
}
