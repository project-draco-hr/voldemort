{
  Map<Integer,List<Integer>> stealPartitionsMap=new HashMap<Integer,List<Integer>>();
  Map<Integer,Integer> currentPartitionsToNodeMap=getCurrentPartitionMapping(currentCluster);
  List<Integer> targetList=targetCluster.getNodeById(id).getPartitionIds();
  List<Integer> currentList;
  if (containsNode(currentCluster,id))   currentList=currentCluster.getNodeById(id).getPartitionIds();
 else   currentList=new ArrayList<Integer>();
  for (  int p : targetList) {
    if (!currentList.contains(p)) {
      int currentMasterNode=currentPartitionsToNodeMap.get(p);
      if (!stealPartitionsMap.containsKey(currentMasterNode)) {
        stealPartitionsMap.put(currentMasterNode,new ArrayList<Integer>());
      }
      stealPartitionsMap.get(currentMasterNode).add(p);
    }
  }
  List<RebalanceStealInfo> stealInfoList=new ArrayList<RebalanceStealInfo>();
  for (  Entry<Integer,List<Integer>> stealEntry : stealPartitionsMap.entrySet()) {
    stealInfoList.add(new RebalanceStealInfo(storeName,stealEntry.getKey(),stealEntry.getValue(),0));
  }
  return stealInfoList;
}
