{
  List<Integer> stealerPartitionList=new ArrayList<Integer>(stealerNode.getPartitionIds());
  List<Integer> donorPartitionList=new ArrayList<Integer>(donorNode.getPartitionIds());
  for (  int p : cluster.getNodeById(stealerNode.getId()).getPartitionIds()) {
    if (!stealerPartitionList.contains(p))     stealerPartitionList.add(p);
  }
  for (  int partition : partitionList) {
    for (int i=0; i < donorPartitionList.size(); i++) {
      if (partition == donorPartitionList.get(i)) {
        donorPartitionList.remove(i);
      }
    }
    if (!stealerPartitionList.contains(partition))     stealerPartitionList.add(partition);
  }
  Collections.sort(stealerPartitionList);
  Collections.sort(donorPartitionList);
  stealerNode=updateNode(stealerNode,stealerPartitionList);
  donorNode=updateNode(donorNode,donorPartitionList);
  Cluster updatedCluster=updateCluster(cluster,Arrays.asList(stealerNode,donorNode));
  return updatedCluster;
}
