{
  startServers(0,1);
  StorageEngine<ByteArray,Slop,byte[]> slopStoreNode0=getVoldemortServer(0).getStoreRepository().getSlopStore().asSlopStore();
  long keyInt1=(long)(Math.random() * 1000000000L), keyInt2=(long)(Math.random() * 10000000L);
  ByteArray key1=new ByteArray(ByteUtils.getBytes("" + keyInt1,"UTF-8")), key2=new ByteArray(ByteUtils.getBytes("" + keyInt2,"UTF-8"));
  byte[] value1=ByteUtils.getBytes("value-" + new String(key1.get()),"UTF-8"), value2=ByteUtils.getBytes("value-" + new String(key2.get()),"UTF-8");
  VectorClock vectorClock1=new VectorClock(), vectorClock2=new VectorClock();
  List<Versioned<Slop>> entrySet=Lists.newArrayList();
  for (  String storeName : Lists.newArrayList("test-replication-memory","users","test-replication-persistent")) {
    entrySet.add(Versioned.value(new Slop(storeName,Slop.Operation.PUT,key1,value1,null,1,new Date()),vectorClock1));
    vectorClock1=vectorClock1.incremented(0,System.currentTimeMillis());
    entrySet.add(Versioned.value(new Slop(storeName,Slop.Operation.DELETE,key1,null,null,1,new Date()),vectorClock1));
    vectorClock1=vectorClock1.incremented(0,System.currentTimeMillis());
    entrySet.add(Versioned.value(new Slop(storeName,Slop.Operation.PUT,key1,value2,null,1,new Date()),vectorClock1));
    vectorClock2=vectorClock2.incremented(0,System.currentTimeMillis());
    entrySet.add(Versioned.value(new Slop(storeName,Slop.Operation.PUT,key2,value2,null,1,new Date()),vectorClock2));
    vectorClock2=vectorClock2.incremented(0,System.currentTimeMillis());
    entrySet.add(Versioned.value(new Slop(storeName,Slop.Operation.DELETE,key2,null,null,1,new Date()),vectorClock2));
  }
  Collections.shuffle(entrySet);
  populateSlops(0,slopStoreNode0,entrySet);
  StreamingSlopPusherJob pusher=new StreamingSlopPusherJob(getVoldemortServer(0).getStoreRepository(),getVoldemortServer(0).getMetadataStore(),new BannagePeriodFailureDetector(new FailureDetectorConfig().setNodes(cluster.getNodes()).setStoreVerifier(new ServerStoreVerifier(socketStoreFactory,metadataStore,configs[0]))),configs[0]);
  pusher.run();
  Thread.sleep(2000);
  for (  String storeName : Lists.newArrayList("test-replication-memory","users","test-replication-persistent")) {
    StorageEngine<ByteArray,byte[],byte[]> store=getVoldemortServer(1).getStoreRepository().getStorageEngine(storeName);
    assertEquals(store.get(key1,null).size(),1);
    assertEquals(ByteUtils.compare(store.get(key1,null).get(0).getValue(),value2),0);
    assertEquals(store.get(key2,null).size(),0);
  }
  stopServers(0,1);
}
