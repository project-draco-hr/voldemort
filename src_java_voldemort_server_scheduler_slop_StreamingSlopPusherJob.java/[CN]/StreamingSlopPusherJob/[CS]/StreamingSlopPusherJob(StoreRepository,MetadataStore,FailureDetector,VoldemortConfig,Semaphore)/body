{
  this.storeRepo=storeRepo;
  this.metadataStore=metadataStore;
  this.failureDetector=failureDetector;
  this.voldemortConfig=voldemortConfig;
  this.repairPermits=Utils.notNull(repairPermits);
  this.cluster=metadataStore.getCluster();
  this.slopQueues=Maps.newHashMapWithExpectedSize(cluster.getNumberOfNodes());
  this.consumerExecutor=Executors.newFixedThreadPool(cluster.getNumberOfNodes(),new ThreadFactory(){
    public Thread newThread(    Runnable r){
      Thread thread=new Thread(r);
      thread.setName("slop-pusher");
      return thread;
    }
  }
);
  this.writeThrottler=new EventThrottler(voldemortConfig.getSlopMaxWriteBytesPerSec());
  this.readThrottler=new EventThrottler(voldemortConfig.getSlopMaxReadBytesPerSec());
  this.adminClient=null;
  this.consumerResults=Lists.newArrayList();
  this.attemptedByNode=new ConcurrentHashMap<Integer,Long>(cluster.getNumberOfNodes());
  this.succeededByNode=new ConcurrentHashMap<Integer,Long>(cluster.getNumberOfNodes());
  this.zoneMapping=Maps.newHashMap();
}
