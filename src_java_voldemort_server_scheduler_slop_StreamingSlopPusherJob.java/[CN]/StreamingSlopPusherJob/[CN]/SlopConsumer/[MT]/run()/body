{
  try {
    SlopIterator iterator=null;
    do {
      if (!current.isEmpty()) {
        if (!previous.isEmpty()) {
          for (          Pair<ByteArray,Version> entry : previous) {
            slopStorageEngine.delete(entry.getFirst(),entry.getSecond());
          }
          succeededNode+=previous.size();
          previous.clear();
        }
        previous=null;
        previous=current;
        current=Lists.newArrayList();
      }
      this.startTime=System.currentTimeMillis();
      iterator=new SlopIterator(slopQueue,current);
      adminClient.updateSlopEntries(nodeId,iterator);
    }
 while (!iterator.isComplete());
    if (!previous.isEmpty()) {
      for (      Pair<ByteArray,Version> entry : previous)       slopStorageEngine.delete(entry.getFirst(),entry.getSecond());
      succeededNode+=previous.size();
      previous.clear();
    }
    if (!current.isEmpty()) {
      for (      Pair<ByteArray,Version> entry : current)       slopStorageEngine.delete(entry.getFirst(),entry.getSecond());
      succeededNode+=current.size();
      current.clear();
    }
  }
 catch (  UnreachableStoreException e) {
    failureDetector.recordException(metadataStore.getCluster().getNodeById(nodeId),System.currentTimeMillis() - this.startTime,e);
    throw e;
  }
 finally {
    slopQueue.clear();
    slopQueues.remove(nodeId);
  }
}
