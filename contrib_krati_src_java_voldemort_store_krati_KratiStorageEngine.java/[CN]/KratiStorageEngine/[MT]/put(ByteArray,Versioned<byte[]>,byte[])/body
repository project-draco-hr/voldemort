{
  StoreUtils.assertValidKey(key);
synchronized (this.locks.lockFor(key.get())) {
    List<Versioned<byte[]>> existingValuesList=this.get(key,null);
    if (existingValuesList.size() == 0) {
      existingValuesList=new ArrayList<Versioned<byte[]>>();
      existingValuesList.add(new Versioned<byte[]>(value.getValue(),value.getVersion()));
    }
 else {
      List<Versioned<byte[]>> removedValueList=new ArrayList<Versioned<byte[]>>();
      for (      Versioned<byte[]> versioned : existingValuesList) {
        Occurred occurred=value.getVersion().compare(versioned.getVersion());
        if (occurred == Occurred.BEFORE)         throw new ObsoleteVersionException("Obsolete version for key '" + key + "': "+ value.getVersion());
 else         if (occurred == Occurred.AFTER)         removedValueList.add(versioned);
      }
      existingValuesList.removeAll(removedValueList);
      existingValuesList.add(value);
    }
    try {
      datastore.put(key.get(),assembleValues(existingValuesList));
    }
 catch (    Exception e) {
      String message="Failed to put key " + key;
      logger.error(message,e);
      throw new VoldemortException(message,e);
    }
  }
}
