{
  StoreUtils.assertValidKey(key);
synchronized (this.locks.lockFor(key.get())) {
    if (maxVersion == null) {
      try {
        return datastore.delete(key.get());
      }
 catch (      Exception e) {
        logger.error("Failed to delete key: ",e);
        throw new VoldemortException("Failed to delete key: " + key,e);
      }
    }
    List<Versioned<byte[]>> returnedValuesList=this.get(key);
    if (returnedValuesList.size() == 0) {
      return false;
    }
    Iterator<Versioned<byte[]>> iter=returnedValuesList.iterator();
    while (iter.hasNext()) {
      Versioned<byte[]> currentValue=iter.next();
      Version currentVersion=currentValue.getVersion();
      if (currentVersion.compare(maxVersion) == Occured.BEFORE) {
        iter.remove();
      }
    }
    try {
      if (returnedValuesList.size() == 0)       return datastore.delete(key.get());
 else       return datastore.put(key.get(),assembleValues(returnedValuesList));
    }
 catch (    Exception e) {
      String message="Failed to delete key " + key;
      logger.error(message,e);
      throw new VoldemortException(message,e);
    }
  }
}
