{
  this.workerPool=(ThreadPoolExecutor)Executors.newFixedThreadPool(config.getNumRestServiceNettyWorkerThreads());
  this.bootstrap=new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newFixedThreadPool(config.getNumRestServiceNettyBossThreads()),workerPool));
  this.bootstrap.setOption("backlog",config.getRestServiceNettyServerBacklog());
  this.bootstrap.setOption("child.tcpNoDelay",true);
  this.bootstrap.setOption("child.keepAlive",true);
  this.bootstrap.setOption("child.reuseAddress",true);
  this.bootstrap.setPipelineFactory(new RestPipelineFactory(storeRepository,config,localZoneId));
  this.nettyServerChannel=this.bootstrap.bind(new InetSocketAddress(this.port));
  logger.info("REST service started on port " + this.port);
  if (config.isJmxEnabled()) {
    JmxUtils.registerMbean(this,JmxUtils.createObjectName(JmxUtils.getPackageName(this.getClass()),JmxUtils.getClassName(this.getClass())));
  }
}
