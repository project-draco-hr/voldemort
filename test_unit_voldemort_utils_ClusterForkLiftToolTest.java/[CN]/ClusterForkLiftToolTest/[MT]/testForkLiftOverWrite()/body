{
  StoreRoutingPlan srcStoreInstance=new StoreRoutingPlan(srcCluster,globallyResolvingStoreDef);
  for (  Map.Entry<String,String> entry : kvPairs.entrySet()) {
    srcGloballyResolvingStoreClient.put(entry.getKey(),entry.getValue());
  }
  List<Integer> nodeList=srcStoreInstance.getReplicationNodeList(srcStoreInstance.getMasterPartitionId(conflictKey.getBytes("UTF-8")));
  VectorClock losingClock=new VectorClock(Lists.newArrayList(new ClockEntry((short)0,5)),System.currentTimeMillis());
  VectorClock winningClock=new VectorClock(Lists.newArrayList(new ClockEntry((short)1,5)),losingClock.getTimestamp() + 1);
  srcAdminClient.storeOps.putNodeKeyValue(GLOBALLY_RESOLVING_STORE_NAME,new NodeValue<ByteArray,byte[]>(nodeList.get(0),new ByteArray(conflictKey.getBytes("UTF-8")),new Versioned<byte[]>("losing value".getBytes("UTF-8"),losingClock)));
  srcAdminClient.storeOps.putNodeKeyValue(GLOBALLY_RESOLVING_STORE_NAME,new NodeValue<ByteArray,byte[]>(nodeList.get(1),new ByteArray(conflictKey.getBytes("UTF-8")),new Versioned<byte[]>("winning value".getBytes("UTF-8"),winningClock)));
  dstGloballyResolvingStoreClient.put(firstKey,"before forklift");
  Thread.sleep(2);
  ClusterForkLiftTool forkLiftTool=new ClusterForkLiftTool(srcBootStrapUrl,dstBootStrapUrl,true,10000,1,1000,Lists.newArrayList(GLOBALLY_RESOLVING_STORE_NAME),null,ClusterForkLiftTool.ForkLiftTaskMode.global_resolution);
  forkLiftTool.run();
  dstGloballyResolvingStoreClient.put(lastKey,"after forklift");
  for (  Map.Entry<String,String> entry : kvPairs.entrySet()) {
    String dstClusterValue=dstGloballyResolvingStoreClient.get(entry.getKey()).getValue();
    if (entry.getKey().equals(lastKey)) {
      assertEquals("can't update value after forklift",dstClusterValue,"after forklift");
    }
 else     if (entry.getKey().equals(conflictKey)) {
      assertEquals("Conflict resolution incorrect",dstClusterValue,"winning value");
    }
 else {
      if (!dstClusterValue.equals(entry.getValue())) {
        assertEquals("fork lift data missing",dstClusterValue,entry.getValue());
      }
    }
  }
}
